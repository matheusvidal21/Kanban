{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Kanban  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Kanban}
{\comment Gerado por doxygen1.9.1.}
{\creatim \yr2023\mo7\dy9\hr17\min46\sec38}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Kanban}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Domingo, 9 de Julho de 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E2\'9A\'A0\'EF\'B8\'8F Aviso: Uso do diret\'C3\'B3rio "/data"\par
Este projeto utiliza esse diret\'F3rio "/data" para armazenar arquivos bin\'E1rios, que s\'E3o usados para salvar os dados do quadro Kanban, e arquivos de texto, que s\'E3o usados para visualiza\'E7\'E3o leg\'EDvel do quadro Kanban. \'C9 importante garantir que o diret\'F3rio "data" exista e tenha permiss\'F5es adequadas de leitura e grava\'E7\'E3o para o correto funcionamento do projeto. Certifique-se de n\'E3o excluir ou modificar os arquivos contidos no diret\'F3rio "data" a menos que voc\'EA esteja familiarizado com sua estrutura e funcionalidade. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid :construction: Projeto em finaliza\'E7\'E3o :construction: \par
} \par
Um aplicativo de gerenciamento de tarefas baseado na Metodologia \'C1gil com suporte ao M\'E9todo Kanban. O Kanban \'E9 um quadro visual que ajuda a organizar e acompanhar o progresso das tarefas. Com este aplicativo, voc\'EA pode facilmente adicionar tarefas, definir prioridades, agendar datas de vencimento e ordenar suas tarefas de forma eficiente usando algoritmos de ordena\'E7\'E3o. O usu\'E1rio poder\'E1 aproveitar uma abordagem \'E1gil para gerenciar suas tarefas e aumentar sua produtividade.\par
 \par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CDndice
\par}
{\tc\tcl3 \v \'CDndice}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'94\'A8 {\f2 Funcionalidades do projeto}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'93\'81 {\f2 Estrutura do projeto}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'93\'8A {\f2 Diagrama de classes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'92\'BB {\f2 T\'C3\'A9cnicas e tecnologias utilizadas}{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'93\'9A {\f2 Bibliotecas}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'97\'83\'EF\'B8\'8F {\f2 Estruturas de TADs}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'A7\'A9 {\f2 Templates}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'94\'A7 {\f2 Como compilar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'E2\'9A\'A0\'EF\'B8\'8F {\f2 Aviso}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\'F0\'9F\'91\'A5 {\f2 Autores}\par}
\par
\par}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'94\'A8 Funcionalidades do projeto
\par}
{\tc\tcl2 \v \'F0\'9F\'94\'A8 Funcionalidades do projeto}
  \par
   \par
O projeto do Gerenciador de Tarefas de Metodologia \'C1gil com M\'E9todo Kanban possui as seguintes funcionalidades:\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adicionar Coluna (Status): \'F0\'9F\'93\'8A}  Os usu\'C3\'A1rios podem adicionar novas colunas ao quadro Kanban para representar diferentes estados ou etapas do processo;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adicionar Tarefas: \'E2\'9E\'95}  Os usu\'C3\'A1rios podem adicionar novas tarefas ao quadro do Kanban, fornecendo informa\'C3\'A7\'C3\'B5es como t\'C3\'ADtulo, descri\'C3\'A7\'C3\'A3o, prioridade e data de vencimento;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Definir Prioridades: \'E2\'AD\'90\'EF\'B8\'8F}  Os usu\'C3\'A1rios podem atribuir prioridades \'C3\'A0s tarefas, indicando sua import\'C3\'A2ncia ou urg\'C3\'AAncia;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Agendar Datas: \'F0\'9F\'93\'85}  Os usu\'C3\'A1rios podem definir datas de vencimento ou prazos para as tarefas, ajudando a acompanhar o progresso e cumprir os prazos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Movimenta\'C3\'A7\'C3\'A3o de Tarefas: \'F0\'9F\'9A\'80}  Os usu\'C3\'A1rios poder\'C3\'A3o mover as tarefas entre as colunas do quadro Kanban, refletindo seu progresso e est\'C3\'A1gio atual;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ordena\'C3\'A7\'C3\'A3o de Tarefas: \'F0\'9F\'94\'A2}  O quadro Kanban oferece a op\'C3\'A7\'C3\'A3o de ordenar as tarefas de forma crescente ou decrescente com base em sua prioridade, permitindo uma melhor organiza\'C3\'A7\'C3\'A3o e visualiza\'C3\'A7\'C3\'A3o das tarefas mais importantes;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Editar Informa\'C3\'A7\'C3\'B5es de uma Tarefa Existente: \'E2\'9C\'8F\'EF\'B8\'8F}  Os usu\'C3\'A1rios podem editar as informa\'C3\'A7\'C3\'B5es de uma tarefa existente no quadro Kanban, como t\'C3\'ADtulo, descri\'C3\'A7\'C3\'A3o, prioridade ou data de vencimento;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Excluir uma Tarefa: \'F0\'9F\'97\'91\'EF\'B8\'8F}  Os usu\'C3\'A1rios podem remover uma tarefa do quadro Kanban, excluindo completamente suas informa\'C3\'A7\'C3\'B5es;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Visualiza\'C3\'A7\'C3\'A3o Geral: \'F0\'9F\'91\'80}  O aplicativo oferece uma visualiza\'C3\'A7\'C3\'A3o geral das tarefas, permitindo que os usu\'C3\'A1rios vejam rapidamente todas as informa\'C3\'A7\'C3\'B5es das tarefas em um \'C3\'BAnico local, independentemente de sua localiza\'C3\'A7\'C3\'A3o no quadro Kanban;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Quadro Kanban: \'F0\'9F\'93\'8C}  O aplicativo exibir\'C3\'A1 as tarefas em um quadro Kanban, com colunas como "A fazer", "Em progresso" e "Conclu\'C3\'ADdo", permitindo que os usu\'C3\'A1rios visualizem e gerenciem facilmente o status de cada tarefa;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Armazenamento em Arquivo Bin\'C3\'A1rio: \'F0\'9F\'93\'81}  O quadro Kanban pode ser armazenado em um arquivo bin\'C3\'A1rio, permitindo salvar as informa\'C3\'A7\'C3\'B5es do quadro para uso posterior;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Carregamento de Arquivo Bin\'C3\'A1rio: \'E2\'AC\'86\'EF\'B8\'8F}  Os usu\'C3\'A1rios podem carregar as informa\'C3\'A7\'C3\'B5es previamente salvas do quadro Kanban a partir de um arquivo bin\'C3\'A1rio, recuperando o estado anterior do quadro;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Grava\'C3\'A7\'C3\'A3o em Arquivo de Texto (txt): \'F0\'9F\'93\'9D}  O aplicativo oferece a op\'C3\'A7\'C3\'A3o de exportar o quadro Kanban para um arquivo de texto, permitindo salvar as informa\'C3\'A7\'C3\'B5es em um formato leg\'C3\'ADvel;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Interface de Linha de Comando: \'F0\'9F\'92\'BB}  O projeto tem uma interface de linha de comando (CLI) para interagir com o quadro Kanban, permitindo que os usu\'C3\'A1rios executem a\'C3\'A7\'C3\'B5es e visualizem as informa\'C3\'A7\'C3\'B5es por meio de comandos de texto.\par}
\par
Essas funcionalidades foram desenvolvidas para melhorar a gest\'E3o de tarefas e facilitar a ado\'E7\'E3o do M\'E9todo Kanban em projetos com metodologias \'E1geis.\par}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'81 Estrutura do projeto
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'81 Estrutura do projeto}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/bin:** Arquivos execut\'E1veis do projeto;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/build:** Arquivos gerados e os arquivos objetos (.o);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/data:** arquivos de dados salvos em bin\'E1rio (.bin) ou texto (.txt);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/docs:** Documenta\'E7\'E3o gerada em HTML, Latex e RTF, via Doxygen, incluindo o doxyfile;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/imgs:** Imagens utilizada para a documenta\'E7\'E3o;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/include:** Arquivos cabe\'E7alhos de extens\'E3o (.hpp) e (.h);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/src:** C\'F3digo fonte do projeto de arquivos (.cpp);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**.gitignore:** Arquivo do Git para ignorar arquivos no controle de vers\'E3o;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Makefile:}  Comandos de compila\'E7\'E3o;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b README.md:}  Documenta\'E7\'E3o essencial do projeto em texto.\par}
\par
\par}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'8A Diagrama de classes
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'8A Diagrama de classes}
O diagrama de classes UML \'E9 uma representa\'E7\'E3o visual da estrutura e das rela\'E7\'F5es entre as classes em um projeto. Ele fornece uma vis\'E3o geral da organiza\'E7\'E3o das classes, seus atributos e m\'E9todos, bem como as associa\'E7\'F5es, heran\'E7as e depend\'EAncias entre elas. Este diagrama \'E9 uma ferramenta poderosa para entender a arquitetura do sistema, identificar as principais entidades e suas intera\'E7\'F5es, e facilitar o desenvolvimento, a manuten\'E7\'E3o e a comunica\'E7\'E3o entre os membros da equipe. Se voc\'EA deseja explorar mais detalhes do diagrama de classes {\f2 clique aqui} para ser redirecionado ao arquivo PDF correspondente.\par
 \par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b {\b Task}:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Classe abstrata que representa uma tarefa gen\'E9rica;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Possui atributos como titulo, descricao, prioridade e dataVencimento;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fornece construtores para criar tarefas com diferentes combina\'E7\'F5es de atributos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Possui m\'E9todos getters e setters para acessar e modificar os atributos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Define um m\'E9todo virtual puro printTask() para imprimir informa\'E7\'F5es da tarefa, que ser\'E1 implementado pelas subclasses;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Permite a cria\'E7\'E3o de subclasses especializadas para tipos espec\'EDficos de tarefas, como tarefas do Kanban.\par}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b {\b KanbanTask}:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Classe derivada da classe {\b Task}, representando uma tarefa espec\'EDfica do Kanban;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Adiciona o atributo ID \'E0 tarefa, identificando de forma \'FAnica cada tarefa no quadro Kanban;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fornece construtores para criar tarefas Kanban com diferentes combina\'E7\'F5es de atributos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Sobrecarrega o operador de compara\'E7\'E3o "==" para comparar tarefas Kanban com base no ID;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Sobrecarrega os operadores de inser\'E7\'E3o e extra\'E7\'E3o para permitir a serializa\'E7\'E3o da tarefa em arquivos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Possui m\'E9todos getters e setters para acessar e modificar o atributo ID;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implementa o m\'E9todo polim\'F3rfico printTask() para imprimir as informa\'E7\'F5es da tarefa espec\'EDficas do Kanban, incluindo o ID.\par}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b {\b KanbanBoard}:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Classe respons\'E1vel pelo gerenciamento do quadro Kanban;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Representa um quadro Kanban que cont\'E9m uma lista de colunas;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uma coluna representa uma Struct com o nome da coluna e uma lista de tarefas;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utiliza a classe {\b ListaDuplamenteEncadeada} para armazenar as tarefas e colunas;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fornece m\'E9todos para adicionar colunas ao quadro, adicionar tarefas a uma coluna espec\'EDfica, imprimir colunas e tarefas, mover tarefas entre colunas, ordenar colunas com base nas prioridades das tarefas, entre outros;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Permite salvar o quadro Kanban em arquivos bin\'E1rios, carregar o quadro a partir de arquivos bin\'E1rios e salvar o quadro em um arquivo de texto para visualiza\'E7\'E3o;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Oferece m\'E9todos para buscar tarefas pelo ID e localizar a coluna em que uma tarefa est\'E1 localizada;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implementa fun\'E7\'F5es auxiliares para verificar se o quadro ou uma coluna est\'E1 vazio e se h\'E1 IDs duplicados.\par}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b ListaDuplamenteEncadeada<T>:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implementa uma lista duplamente encadeada;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utiliza os n\'F3s da classe {\b No} para armazenar os elementos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Possui ponteiros para o primeiro elemento (head) e o \'FAltimo elemento (tail) da lista;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utilizado para criar uma Lista Duplamente Encadeada de colunas e de tarefas;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Esse t\'F3pico \'E9 mais abordado em {\f2 Estruturas de TADs}.\par}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b Pilha<T>:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implementa uma pilha utilizando uma lista encadeada;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utiliza os n\'F3s para armazenar os elementos da pilha;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Possui um ponteiro para o elemento do topo (top) da pilha;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Esse t\'F3pico \'E9 mais abordado em {\f2 Estruturas de TADs}.\par}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b Fila<T>:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implementa uma fila utilizando uma lista encadeada;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utiliza os n\'F3s para armazenar os elementos da fila;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Possui ponteiros para o primeiro elemento (head) e o \'FAltimo elemento (tail) da fila;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Esse t\'F3pico \'E9 mais abordado em {\f2 Estruturas de TADs}.\par}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b AlgoritmosDeOrdenacao<T>:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implementa algoritmos de ordena\'E7\'E3o gen\'E9ricos, como Bubble Sort, Selection Sort e Merge Sort;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fornece m\'E9todos para realizar a ordena\'E7\'E3o de um array;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utilizado para ordenar as tarefas com base nas prioridades;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Esse t\'F3pico \'E9 mais abordado em {\f2 Templates}.\par}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\b AlgoritmosDeBuscaBinaria<T>:}  \par
}
\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Implementa algoritmos de busca bin\'E1ria gen\'E9ricos, incluindo vers\'F5es iterativas e recursivas;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Fornece m\'E9todos para buscar um elemento em um array ordenado e retornar o \'EDndice do elemento se encontrado.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Esse t\'F3pico \'E9 mais abordado em {\f2 Templates}.\par}
\par
\par}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'92\'BB T\'C3\'A9cnicas e tecnologias utilizadas
\par}
{\tc\tcl2 \v \'F0\'9F\'92\'BB T\'C3\'A9cnicas e tecnologias utilizadas}
         \par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C++;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VS Code;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Doxygen;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Makefile;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Git & Github;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Diagrama UML;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Modulariza\'E7\'E3o;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Estrutura de dados;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C\'F3digo de escape ANSI;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Separation of Concerns;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Manipula\'E7\'E3o de arquivos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GNU Compiler Collection (GCC);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Programa\'E7\'E3o Orientada a Objetos.\par}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'F0\'9F\'93\'9A Bibliotecas
\par}
{\tc\tcl3 \v \'F0\'9F\'93\'9A Bibliotecas}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b <iostream>:}  Biblioteca para entrada e sa\'EDda de dados em C++;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b <string>:}  Biblioteca para manipula\'E7\'E3o de strings;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b <iomanip>:}  Biblioteca para formata\'E7\'E3o de sa\'EDda;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b <fstream>:}  Biblioteca para manipula\'E7\'E3o de arquivos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b <sstream>:}  Biblioteca para manipula\'E7\'E3o de strings como fluxos de entrada e sa\'EDda;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b <cstdlib>:}  Biblioteca para opera\'E7\'F5es b\'E1sicas no terminal;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b <dirent.h>:}  Biblioteca para manipula\'E7\'E3o de diret\'F3rios em sistemas POSIX.\par}
\par
\par}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'F0\'9F\'97\'83\'EF\'B8\'8F Estruturas de TADs (Tipos Abstratos de Dados)
\par}
{\tc\tcl3 \v \'F0\'9F\'97\'83\'EF\'B8\'8F Estruturas de TADs (Tipos Abstratos de Dados)}
Este assunto \'E9 implementado no arquivo {\f2 estruturas_tads.hpp}. Consulte esse arquivo para obter mais detalhes e implementa\'E7\'E3o relacionada.\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b \'F0\'9F\'94\'97 Lista Duplamente Encadeada:}  \par
 Uma lista duplamente encadeada \'E9 uma estrutura de dados em que os n\'F3s s\'E3o conectados em duas dire\'E7\'F5es, por meio de ponteiros para o pr\'F3ximo n\'F3 e para o n\'F3 anterior. Isso significa que cada n\'F3 possui refer\'EAncias tanto para o n\'F3 anterior quanto para o pr\'F3ximo n\'F3 na sequ\'EAncia. Essa caracter\'EDstica permite a navega\'E7\'E3o eficiente tanto para frente quanto para tr\'E1s na lista. A lista duplamente encadeada oferece vantagens, como a capacidade de inserir e remover elementos de forma eficiente em qualquer posi\'E7\'E3o, al\'E9m de possibilitar a itera\'E7\'E3o reversa pelos elementos da lista. Os m\'E9todos da Lista Duplamente Encadeada s\'E3o: \par
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab {\f2 getHead()} : Retorna a 'head' da lista; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab {\f2 pushFront()} : Adiciona um novo elemento no in\'EDcio da lista; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab {\f2 pushBack()} : Adiciona um novo elemento no final da lista; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab {\f2 removeFront()} : Remove o primeiro elemento; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab {\f2 removeBack()} : Remove o \'FAltimo elemento da lista; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab {\f2 get()} : Retorna o valor do \'EDndice recebido; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab {\f2 isEmpity()} : Verifica se a lista est\'E1 vazia; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
8.\tab {\f2 print()} : Imprime os elementos da lista; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
9.\tab {\f2 getSize()} : Retorna o tamanho da lista; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
10.\tab {\f2 removeValue()} : Remove um valor espec\'EDfico; \par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
11.\tab {\f2 clear()} : Remove todos os elementos da lista. \par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b \'F0\'9F\'93\'9A {\b Pilha}} : \par
 Uma pilha \'E9 uma estrutura de dados que segue a abordagem "\'FAltimo a entrar, primeiro a sair" (LIFO - Last-In-First-Out). Os elementos s\'E3o inseridos e removidos apenas em uma extremidade, chamada de topo da pilha. As opera\'E7\'F5es b\'E1sicas em uma pilha s\'E3o {\f2 "push"}  para adicionar um elemento no topo, {\f2 "pop"}  para remover o elemento do topo, e {\f2 "peek"}  para visualizar o elemento no topo sem remov\'EA-lo.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b \'F0\'9F\'9A\'A6 {\b Fila}:}  \par
 Uma fila \'E9 uma estrutura de dados linear que segue a abordagem "primeiro a entrar, primeiro a sair" (FIFO - First-In-First-Out). Os elementos s\'E3o inseridos no final da fila e removidos do in\'EDcio da fila. As opera\'E7\'F5es b\'E1sicas em uma fila s\'E3o {\f2 "enqueue"}  para adicionar um elemento no final da fila e {\f2 "dequeue"}  para remover o elemento do in\'EDcio da fila, e {\f2 "peek"}  para visualizar o elemento na frente sem remov\'EA-lo. A fila segue um comportamento semelhante a uma fila real, onde o primeiro elemento a entrar \'E9 o primeiro a ser atendido.\par}
\par
\par}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'F0\'9F\'A7\'A9 Templates
\par}
{\tc\tcl3 \v \'F0\'9F\'A7\'A9 Templates}
Este assunto \'E9 implementado no arquivo {\f2 templates.hpp}. Consulte esse arquivo para obter mais detalhes e implementa\'E7\'E3o relacionada. \par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
1. Algoritmos de Ordena\'E7\'E3o
\par}
{\tc\tcl4 \v 1. Algoritmos de Ordena\'E7\'E3o}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Bubble Sort:}  \par
 O Bubble Sort \'E9 um algoritmo de ordena\'E7\'E3o simples que percorre repetidamente a lista a ser ordenada, comparando pares de elementos adjacentes e realizando trocas se estiverem fora de ordem. Esse processo de compara\'E7\'E3o e troca \'E9 repetido at\'E9 que a lista esteja completamente ordenada. O Bubble Sort possui uma complexidade de tempo de execu\'E7\'E3o quadr\'E1tica, ou seja, {\b O(n\'B2)} , onde "n" \'E9 o tamanho da lista. Isso significa que o tempo de execu\'E7\'E3o do algoritmo aumenta rapidamente \'E0 medida que o tamanho da lista aumenta.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Selection Sort:}  \par
 O Selection Sort \'E9 um algoritmo de ordena\'E7\'E3o simples e intuitivo. Ele funciona selecionando repetidamente o elemento de menor valor da lista n\'E3o ordenada e colocando-o no in\'EDcio da lista ordenada. Esse processo \'E9 repetido at\'E9 que toda a lista esteja ordenada. O Selection Sort \'E9 eficiente para listas de tamanho pequeno a moderado, mas possui uma complexidade de tempo quadr\'E1tica {\b O(n\'B2)} , o que o torna menos eficiente em grandes conjuntos de dados. {\b No} entanto, sua simplicidade e facilidade de implementa\'E7\'E3o o tornam uma op\'E7\'E3o vi\'E1vel em certos cen\'E1rios.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Merge Sort:}  \par
 O Merge Sort \'E9 um algoritmo de ordena\'E7\'E3o eficiente e baseado no princ\'EDpio "dividir para conquistar". Ele divide a lista n\'E3o ordenada em sublistas menores, recursivamente ordena cada sublista e, em seguida, combina as sublistas ordenadas para obter a lista final ordenada. O processo de combina\'E7\'E3o envolve mesclar duas sublistas ordenadas em uma \'FAnica lista ordenada. O Merge Sort possui uma complexidade de tempo de {\b O(n log n)} , tornando-o adequado para lidar com grandes conjuntos de dados. Sua efici\'EAncia e estabilidade tornam o Merge Sort uma op\'E7\'E3o popular em muitas aplica\'E7\'F5es de ordena\'E7\'E3o.\par}
\par
\par}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
2. Algoritmo de busca bin\'E1ria
\par}
{\tc\tcl4 \v 2. Algoritmo de busca bin\'E1ria}
A busca bin\'E1ria \'E9 um algoritmo eficiente para encontrar um elemento em uma lista ordenada. Ele divide repetidamente a lista ao meio e compara o elemento buscado com o elemento do meio. Se forem iguais, a busca \'E9 conclu\'EDda. Caso contr\'E1rio, a busca continua na metade superior ou inferior da lista, dependendo da compara\'E7\'E3o. Esse processo \'E9 repetido at\'E9 encontrar o elemento ou reduzir a lista a zero. A busca bin\'E1ria tem uma complexidade de tempo de {\b O(log n)} , tornando-a mais r\'E1pida que a busca linear para listas grandes. {\b No} entanto, requer uma lista ordenada para funcionar corretamente.\par}
\par}
\par}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'94\'A7 Como compilar?
\par}
{\tc\tcl2 \v \'F0\'9F\'94\'A7 Como compilar?}
O projeto utiliza um Makefile para automatizar o processo de compila\'E7\'E3o e cria\'E7\'E3o do execut\'E1vel. O Makefile define o compilador, as op\'E7\'F5es de compila\'E7\'E3o e os diret\'F3rios para os arquivos objeto e execut\'E1vel. Siga as etapas abaixo para compilar o projeto usando o Makefile fornecido:\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Pr\'E9-requisitos
\par}
{\tc\tcl3 \v Pr\'E9-requisitos}
Certifique-se de ter o compilador g++ instalado em seu sistema antes de prosseguir.\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Passo 1: Obtenha o c\'F3digo-fonte
\par}
{\tc\tcl4 \v Passo 1: Obtenha o c\'F3digo-fonte}
Clone o reposit\'F3rio do projeto em seu ambiente local ou fa\'E7a o download dos arquivos fonte em um diret\'F3rio de sua escolha.\par}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Passo 2: Navegue para o diret\'F3rio do projeto
\par}
{\tc\tcl4 \v Passo 2: Navegue para o diret\'F3rio do projeto}
Abra um terminal e navegue at\'E9 o diret\'F3rio raiz do projeto usando o comando cd:\par
 {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid cd caminho/para/o/diretorio/do/projeto\par
}
\par}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Passo 3: Compile o projeto
\par}
{\tc\tcl4 \v Passo 3: Compile o projeto}
Execute o seguinte comando para compilar o projeto: \par
 {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid make all\par
}
 \par
 Isso ir\'E1 compilar o c\'F3digo-fonte, criar os arquivos objeto (.o) na pasta "/build", e gerar o execut\'E1vel na pasta "/bin".\par}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Passo 4: Execute o programa
\par}
{\tc\tcl4 \v Passo 4: Execute o programa}
Ap\'F3s a compila\'E7\'E3o bem-sucedida, voc\'EA pode executar o programa usando o seguinte comando:\par
 {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid make run\par
}
 \par
 Isso executar\'E1 o programa com base no execut\'E1vel gerado.\par}
\par}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Compilando com um \'FAnico comando
\par}
{\tc\tcl3 \v Compilando com um \'FAnico comando}
Execute esse comando para limpar os arquivos, compilar os arquivos novamente e, em seguida, executar o programa. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid make build\par
}
 \par
\par}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Comandos Dispon\'EDveis
\par}
{\tc\tcl3 \v Comandos Dispon\'EDveis}
{\f2 make} : \par
 Cria os diret\'F3rios necess\'E1rios se ainda n\'E3o existirem.\par
{\f2 make all} : \par
 Compila o projeto, criando os arquivos objeto e o execut\'E1vel. Os diret\'F3rios necess\'E1rios ser\'E3o criados automaticamente, se ainda n\'E3o existirem.\par
{\f2 make run} : \par
 Executa o programa ap\'F3s a compila\'E7\'E3o. Certifique-se de ter compilado o projeto antes de executar este comando.\par
{\f2 make build} : \par
 O comando 'make build' compila, executa e limpa os arquivos, proporcionando um processo completo para construir e executar o programa.\par
{\f2 make clean} : \par
 Remove todos os arquivos gerados durante a compila\'E7\'E3o, incluindo arquivos objeto, arquivo execut\'E1vel e os diret\'F3rios.\par
{\f2 make clean_files} :\par
 Remove apenas os arquivos gerados durante a compila\'E7\'E3o, mantendo os diret\'F3rios de build e bin.\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Em caso de d\'FAvidas
\par}
{\tc\tcl4 \v Em caso de d\'FAvidas}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid make help\par
}
 Utilize esse comando para exibir um guia de ajuda com uma lista dos comandos dispon\'EDveis, fornecendo informa\'E7\'F5es sobre como utilizar o Makefile de forma eficaz.\par}
\par}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Observa\'E7\'F5es
\par}
{\tc\tcl3 \v Observa\'E7\'F5es}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Certifique-se de que o arquivo Makefile esteja no diret\'F3rio raiz do projeto antes de executar os comandos;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ap\'F3s a compila\'E7\'E3o bem-sucedida, o arquivo execut\'E1vel kanban ser\'E1 criado no diret\'F3rio bin;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ao executar o programa com o comando make run, certifique-se de estar no diret\'F3rio raiz do projeto.\par}
\par
\par}
\par}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'E2\'9A\'A0\'EF\'B8\'8F Aviso
\par}
{\tc\tcl2 \v \'E2\'9A\'A0\'EF\'B8\'8F Aviso}
Este projeto utiliza o terminal para imprimir e receber dados, o que pode resultar em desalinhamentos em alguns terminais, dependendo de suas configura\'E7\'F5es individuais. Gostar\'EDamos de ressaltar que isso \'E9 uma limita\'E7\'E3o inerente ao uso de terminais e est\'E1 al\'E9m do controle deste projeto. Al\'E9m disso, o projeto tamb\'E9m utiliza sequ\'EAncias de escape ANSI para exibir cores no terminal. {\b No} entanto, \'E9 importante notar que nem todos os terminais ou sistemas operacionais suportam totalmente a exibi\'E7\'E3o de fonte colorida com ANSI. Se voc\'EA encontrar problemas com a exibi\'E7\'E3o das cores ou caracteres estranhos, verifique se o seu terminal \'E9 compat\'EDvel com a exibi\'E7\'E3o de ANSI ou considere utilizar outro terminal que suporte essa funcionalidade. Caso contr\'E1rio, o texto ser\'E1 exibido sem as cores especificadas ou com desalinhamentos. Se for necess\'E1rio, \'E9 poss\'EDvel ajustar a largura das palavras exibidas no gerenciador, voc\'EA pode modificar o espa\'E7amento entre as colunas no arquivo {\f2 kanbanboard.cpp}, mais precisamente no m\'E9todo "printBoard()".\par}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'91\'A5 Autores
\par}
{\tc\tcl2 \v \'F0\'9F\'91\'A5 Autores}
| {\f2 {\sub Isabela Gomes} } | {\f2 {\sub Matheus Vidal} } | | :\'97: | :\'97: | \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AlgoritmosDeBuscaBinaria< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
AlgoritmosDeOrdenacao< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Fila< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
KanbanBoard\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
KanbanBoard::KanbanColumn\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaDuplamenteEncadeada< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaDuplamenteEncadeada< KanbanBoard::KanbanColumn >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaDuplamenteEncadeada< KanbanTask >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Fila< T >::No\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
No< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Pilha< T >::No\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Pilha< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Task\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
KanbanTask\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AlgoritmosDeBuscaBinaria< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmo de busca bin\'E1ria gen\'E9rico })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AlgoritmosDeOrdenacao< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmos de ordena\'E7\'E3o })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Fila< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma fila utilizando a estrutura de lista encadeada })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KanbanBoard} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanBoard} representa o Quadro Kanban que cont\'E9m colunas e tarefas })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KanbanBoard::KanbanColumn} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura interna que representa uma coluna do quadro Kanban. Cada coluna possui um nome e uma lista duplamente encadeada de tarefas })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KanbanTask} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanTask} representa uma tarefa espec\'EDfica para o Kanban })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaDuplamenteEncadeada< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma lista duplamente encadeada })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Fila< T >::No} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da fila })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b No< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da lista duplamente encadeada })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Pilha< T >::No} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da pilha })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Pilha< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma pilha utilizando a estrutura de lista encadeada })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Task} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe abstrata {\b Task} representa uma tarefa })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b /home/isa/\'C1rea de Trabalho/Kanban/include/{\b estruturas_tads.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementa\'E7\'E3o de templates dos Tipos Abstratos de Dados: Lista Duplamente Encadeada, {\b Pilha} e {\b Fila} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/include/{\b functions.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'F5es desenvolvidas a fim de modularizar a fun\'E7\'E3o Main, em sua maioria se tratam de intera\'E7\'F5es com o usu\'E1rio })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/include/{\b kanbanboard.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe {\b KanbanBoard}, que representa o Quadro Kanban })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/include/{\b kanbantask.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe {\b KanbanTask}, que representa uma tarefa espec\'EDfica do Kanban })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/include/{\b menus.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m fun\'E7\'F5es para imprimir os menus de opera\'E7\'F5es do Quadro Kanban })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/include/{\b task.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe abstrata {\b Task}, que representa uma tarefa gen\'E9rica })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/include/{\b templates.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C\'F3digo-fonte auxiliar com templates gen\'E9ricos de algoritmos de ordena\'E7\'E3o e busca })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/src/{\b functions.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o das fun\'E7\'F5es desenvolvidas })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/src/{\b kanbanboard.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe {\b KanbanBoard} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/src/{\b kanbantask.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe {\b KanbanTask} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/src/{\b main.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo principal que inicia e maneja todo programa do gerenciador de tarefas Kanban })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/src/{\b menus.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o das fun\'E7\'F5es que imprimem os menus })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/isa/\'C1rea de Trabalho/Kanban/src/{\b task.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe abstrata {\b Task} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe AlgoritmosDeBuscaBinaria< T >\par \pard\plain 
{\tc\tcl2 \v AlgoritmosDeBuscaBinaria< T >}
{\xe \v AlgoritmosDeBuscaBinaria< T >}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmo de busca bin\'E1ria gen\'E9rico. }}\par
{
{\f2 #include <templates.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b BuscaBinariaIterativa} ({\b ListaDuplamenteEncadeada}< T > &arr, int tamanho, T chave)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Realiza uma busca bin\'E1ria iterativa em uma lista ordenada. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b BuscaBinariaRecursiva} ({\b ListaDuplamenteEncadeada}< T > &arr, int inicio, int fim, T chave)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Realiza uma busca bin\'E1ria recursiva em uma lista ordenada. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class AlgoritmosDeBuscaBinaria< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmo de busca bin\'E1ria gen\'E9rico. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros do <em>template</em>\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{O tipo de dado a ser buscado. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v BuscaBinariaIterativa\:AlgoritmosDeBuscaBinaria< T >}
{\xe \v AlgoritmosDeBuscaBinaria< T >\:BuscaBinariaIterativa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static int {\b AlgoritmosDeBuscaBinaria}< T >::BuscaBinariaIterativa ({\b ListaDuplamenteEncadeada}< T > &  {\i arr}, int  {\i tamanho}, T  {\i chave}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Realiza uma busca bin\'E1ria iterativa em uma lista ordenada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arr} \cell }{A lista ordenada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tamanho} \cell }{O tamanho da lista. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chave} \cell }{O valor a ser buscado. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O \'EDndice do valor encontrado ou -1 se n\'E3o for encontrado. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 193                                                                                             \{\par
194         {\cf18 int} inicio = 0;\par
195         {\cf18 int} fim = tamanho - 1;\par
196 \par
197         {\cf19 while}(inicio <= fim)\{\par
198             {\cf18 int} meio = (inicio + fim)/2;\par
199             {\cf19 if}(arr[meio] == chave)\{\par
200                 {\cf19 return} meio;\par
201             \}{\cf19 else} {\cf19 if}(arr[meio] > chave)\{\par
202                 fim = meio - 1;\par
203             \}{\cf19 else}\{\par
204                 inicio = meio + 1;\par
205             \}\par
206         \}\par
207         {\cf19 return} -1; {\cf20 // Retorna -1 se a chave n\'E3o for encontrada}\par
208     \}\par
}
}
{\xe \v BuscaBinariaRecursiva\:AlgoritmosDeBuscaBinaria< T >}
{\xe \v AlgoritmosDeBuscaBinaria< T >\:BuscaBinariaRecursiva}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static int {\b AlgoritmosDeBuscaBinaria}< T >::BuscaBinariaRecursiva ({\b ListaDuplamenteEncadeada}< T > &  {\i arr}, int  {\i inicio}, int  {\i fim}, T  {\i chave}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Realiza uma busca bin\'E1ria recursiva em uma lista ordenada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arr} \cell }{A lista ordenada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inicio} \cell }{O \'EDndice de in\'EDcio da sublista. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fim} \cell }{O \'EDndice de fim da sublista. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chave} \cell }{O valor a ser buscado. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O \'EDndice do valor encontrado ou -1 se n\'E3o for encontrado. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 220                                                                                                     \{\par
221         {\cf19 if}(inicio > fim) {\cf19 return} -1;{\cf20 // Retorna -1 se a chave n\'E3o for encontrada}\par
222 \par
223         {\cf18 int} meio = (inicio+fim)/2;\par
224 \par
225         {\cf19 if}(arr[meio] == chave)\{\par
226             {\cf19 return} meio;\par
227         \}{\cf19 else} {\cf19 if}(arr[meio] > chave)\{\par
228             {\cf19 return} BuscaBinariaRecursiva(arr, inicio, (meio - 1), chave);\par
229         \}{\cf19 else}\{\par
230             {\cf19 return} BuscaBinariaRecursiva(arr, (meio + 1), fim, chave);\par
231         \}\par
232     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b templates.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe AlgoritmosDeOrdenacao< T >\par \pard\plain 
{\tc\tcl2 \v AlgoritmosDeOrdenacao< T >}
{\xe \v AlgoritmosDeOrdenacao< T >}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmos de ordena\'E7\'E3o. }}\par
{
{\f2 #include <templates.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b bubbleSort} ({\b ListaDuplamenteEncadeada}< T > &list, int size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ordena a lista de forma crescente usando o Bubble Sort. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b selectionSort} ({\b ListaDuplamenteEncadeada}< T > &list, int size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ordena a lista de forma decrescente usando o Selection Sort. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b mergeSort} ({\b ListaDuplamenteEncadeada}< T > &arr, int left, int right)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ordena a lista usando o Merge Sort. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros Privados Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b swapTasks} (T &task1, T &task2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Realiza a troca de duas tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b merge} ({\b ListaDuplamenteEncadeada}< T > &arr, int left, int mid, int right)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Combina duas sublistas em uma \'FAnica lista ordenada. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class AlgoritmosDeOrdenacao< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmos de ordena\'E7\'E3o. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros do <em>template</em>\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{O tipo de dado a ser ordenado.\cell }
{\row }
}
Esta classe cont\'E9m implementa\'E7\'F5es de algoritmos de ordena\'E7\'E3o como Bubble Sort (crescente), Selection Sort (decrescente) e Merge Sort (crescente). \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v bubbleSort\:AlgoritmosDeOrdenacao< T >}
{\xe \v AlgoritmosDeOrdenacao< T >\:bubbleSort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b AlgoritmosDeOrdenacao}< T >::bubbleSort ({\b ListaDuplamenteEncadeada}< T > &  {\i list}, int  {\i size}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ordena a lista de forma crescente usando o Bubble Sort. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i list} \cell }{A lista a ser ordenada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{O tamanho da lista.\cell }
{\row }
}
A complexidade do Bubble Sort \'E9 O(n^2), onde "n" \'E9 o tamanho da lista a ser ordenada. Essa \'E9 uma complexidade quadr\'E1tica, o que significa que o tempo de execu\'E7\'E3o aumenta rapidamente \'E0 medida que o tamanho da lista aumenta. A complexidade quadr\'E1tica do Bubble Sort ocorre porque, em cada passagem, s\'E3o feitas compara\'E7\'F5es entre pares de elementos adjacentes e, se necess\'E1rio, s\'E3o feitas trocas. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                                         \{\par
38 \par
39         {\cf19 for} ({\cf18 int} i = 0; i < size - 1; i++) \{\par
40             {\cf19 for} ({\cf18 int} j = 0; j < size - i - 1; j++) \{\par
41 \par
42                 T& task1 = list.get(j);\par
43                 T& task2 = list.get(j + 1);\par
44                 {\cf19 if} (task1.getPrioridade() > task2.getPrioridade()) \{\par
45                     swapTasks(task1, task2);\par
46                 \}\par
47 \par
48             \}\par
49         \}\par
50     \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAlgoritmosDeOrdenacao_af608538ac09a154c0bfcfdd27b05f7fa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAlgoritmosDeOrdenacao_af608538ac09a154c0bfcfdd27b05f7fa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v merge\:AlgoritmosDeOrdenacao< T >}
{\xe \v AlgoritmosDeOrdenacao< T >\:merge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b AlgoritmosDeOrdenacao}< T >::merge ({\b ListaDuplamenteEncadeada}< T > &  {\i arr}, int  {\i left}, int  {\i mid}, int  {\i right}){\f2 [inline]}, {\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Combina duas sublistas em uma \'FAnica lista ordenada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arr} \cell }{A lista a ser combinada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i left} \cell }{O \'EDndice de in\'EDcio da primeira sublista. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mid} \cell }{O \'EDndice de fim da primeira sublista e in\'EDcio da segunda sublista. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i right} \cell }{O \'EDndice de fim da segunda sublista. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 131                                                                                       \{\par
132         {\cf18 int} left_size = mid - left + 1;\par
133         {\cf18 int} right_size = right - mid;\par
134         \par
135         T* left_arr = {\cf17 new} T[left_size];\par
136         T* right_arr = {\cf17 new} T[right_size];\par
137 \par
138 \par
139         {\cf19 for} ({\cf18 int} i = 0; i < left_size; i++) \{\par
140             left_arr[i] = arr[left + i];\par
141         \}\par
142 \par
143         {\cf19 for} ({\cf18 int} j = 0; j < right_size; j++) \{\par
144             right_arr[j] = arr[mid + 1 + j];\par
145         \}\par
146 \par
147         {\cf18 int} i = 0, j = 0, k = left;\par
148         {\cf19 while} (i < left_size && j < right_size) \{\par
149             {\cf19 if} (left_arr[i] <= right_arr[j]) \{\par
150                 arr[k] = left_arr[i];\par
151                 i++;\par
152             \} {\cf19 else} \{\par
153                 arr[k] = right_arr[j];\par
154                 j++;\par
155             \}\par
156             k++;\par
157         \}\par
158 \par
159         {\cf19 while} (i < left_size) \{\par
160             arr[k] = left_arr[i];\par
161             i++;\par
162             k++;\par
163         \}\par
164 \par
165         {\cf19 while} (j < right_size) \{\par
166             arr[k] = right_arr[j];\par
167             j++;\par
168             k++;\par
169         \}\par
170         {\cf17 delete}[] left_arr;\par
171         {\cf17 delete}[] right_arr;\par
172     \}  \par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAlgoritmosDeOrdenacao_ab683332bb3b92afcc5b8a61bc69579fc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mergeSort\:AlgoritmosDeOrdenacao< T >}
{\xe \v AlgoritmosDeOrdenacao< T >\:mergeSort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b AlgoritmosDeOrdenacao}< T >::mergeSort ({\b ListaDuplamenteEncadeada}< T > &  {\i arr}, int  {\i left}, int  {\i right}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ordena a lista usando o Merge Sort. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arr} \cell }{A lista a ser ordenada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i left} \cell }{O \'EDndice de in\'EDcio da sublista. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i right} \cell }{O \'EDndice de fim da sublista.\cell }
{\row }
}
A complexidade do Merge Sort \'E9 O(n log n), onde "n" \'E9 o tamanho da lista a ser ordenada. Essa \'E9 uma complexidade assint\'F3tica eficiente e torna o Merge Sort adequado para lidar com grandes conjuntos de dados. O Merge Sort possui essa complexidade porque o algoritmo divide repetidamente a lista em duas metades, at\'E9 que sejam formadas sublistas com apenas um elemento. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                                                                  \{\par
101         {\cf19 if} (left >= right) \{\par
102             {\cf19 return};\par
103         \}\par
104         {\cf18 int} mid = left + (right - left) / 2;\par
105         mergeSort(arr, left, mid);\par
106         mergeSort(arr, mid + 1, right);\par
107         merge(arr, left, mid, right);\par
108     \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAlgoritmosDeOrdenacao_aef1b3aa9bbb605beb1f0a76cd8bd727e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v selectionSort\:AlgoritmosDeOrdenacao< T >}
{\xe \v AlgoritmosDeOrdenacao< T >\:selectionSort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b AlgoritmosDeOrdenacao}< T >::selectionSort ({\b ListaDuplamenteEncadeada}< T > &  {\i list}, int  {\i size}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ordena a lista de forma decrescente usando o Selection Sort. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i list} \cell }{A lista a ser ordenada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{O tamanho da lista.\cell }
{\row }
}
A complexidade do Selection Sort tamb\'E9m \'E9 O(n^2), onde "n" \'E9 o tamanho da lista a ser ordenada. Assim como o Bubble Sort, o Selection Sort possui uma complexidade quadr\'E1tica. A complexidade quadr\'E1tica do Selection Sort ocorre porque, em cada itera\'E7\'E3o, \'E9 necess\'E1rio percorrer a parte n\'E3o ordenada para encontrar o menor elemento. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64                                                                            \{\par
65 \par
66         {\cf19 for} ({\cf18 int} i = 0; i < size - 1; i++) \{\par
67             {\cf18 int} minIndex = i;\par
68 \par
69             {\cf19 for} ({\cf18 int} j = i + 1; j < size; j++) \{\par
70 \par
71                 T& task1 = list.get(j);\par
72                 T& task2 = list.get(minIndex);\par
73                 {\cf19 if} (task1.getPrioridade() > task2.getPrioridade())\{\par
74                     minIndex = j;\par
75                 \}\par
76 \par
77             \}\par
78 \par
79             {\cf19 if} (minIndex != i) \{\par
80                 T& task1 = list.get(i);\par
81                 T& task2 = list.get(minIndex);\par
82                 swapTasks(task1, task2);\par
83             \}\par
84         \}\par
85     \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAlgoritmosDeOrdenacao_ae686ed3ba3f4850c855710f0fc6950b8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAlgoritmosDeOrdenacao_ae686ed3ba3f4850c855710f0fc6950b8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v swapTasks\:AlgoritmosDeOrdenacao< T >}
{\xe \v AlgoritmosDeOrdenacao< T >\:swapTasks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b AlgoritmosDeOrdenacao}< T >::swapTasks (T &  {\i task1}, T &  {\i task2}){\f2 [inline]}, {\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Realiza a troca de duas tarefas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task1} \cell }{A primeira tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task2} \cell }{A segunda tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 117                                               \{\par
118         T temp = task1;\par
119         task1 = task2;\par
120         task2 = temp;\par
121     \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAlgoritmosDeOrdenacao_af0ac6625e3d403118691fd7808dbf6d4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b templates.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe Fila< T >\par \pard\plain 
{\tc\tcl2 \v Fila< T >}
{\xe \v Fila< T >}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma fila utilizando a estrutura de lista encadeada. }}\par
{
{\f2 #include <estruturas_tads.hpp>}}\par
Diagrama de colabora\'E7\'E3o para Fila< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classFila__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b No}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da fila. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Fila} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b Fila}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Fila} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b Fila}. Remove todos os elementos da fila. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a fila est\'E1 vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enqueue} (T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um elemento no final da fila. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dequeue} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove o elemento na frente da fila. Se a fila estiver vazia, uma mensagem de erro \'E9 exibida. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b peek} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o elemento da frente da fila. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Privados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} * {\b head}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} * {\b tail}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class Fila< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma fila utilizando a estrutura de lista encadeada. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros do <em>template</em>\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{O tipo de dado armazenado na fila. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Fila\:Fila< T >}
{\xe \v Fila< T >\:Fila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Fila}< T >::{\b Fila} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b Fila}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 438 : head(NULL), tail(NULL)\{\}\par
}
}
{\xe \v ~Fila\:Fila< T >}
{\xe \v Fila< T >\:~Fila}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Fila}< T >::~{\b Fila} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b Fila}. Remove todos os elementos da fila. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 445            \{\par
446       {\cf19 while}(!isEmpty()) \{\par
447         dequeue();\par
448       \}\par
449     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v dequeue\:Fila< T >}
{\xe \v Fila< T >\:dequeue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b Fila}< T >::dequeue (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove o elemento na frente da fila. Se a fila estiver vazia, uma mensagem de erro \'E9 exibida. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 486                   \{\par
487       {\cf19 if}(isEmpty())\{\par
488         std::cout << {\cf22 "A fila est\'E1 vazia."} << std::endl;\par
489         {\cf19 return};\par
490       \}\par
491       No* temp = head;\par
492       head = head->next;\par
493       {\cf19 if}(head == NULL)\{\par
494         tail = NULL;\par
495       \}\par
496       {\cf17 delete} temp;\par
497     \}\par
}
}
{\xe \v enqueue\:Fila< T >}
{\xe \v Fila< T >\:enqueue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b Fila}< T >::enqueue (T  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um elemento no final da fila. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{O valor do elemento a ser adicionado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 471                          \{\par
472       No* newNo = {\cf17 new} No(value);\par
473       {\cf19 if}(isEmpty())\{\par
474         head = tail = newNo;\par
475       \}{\cf19 else}\{\par
476         tail->next = newNo;\par
477         tail = newNo;\par
478       \}\par
479     \}\par
}
}
{\xe \v isEmpty\:Fila< T >}
{\xe \v Fila< T >\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > bool {\b Fila}< T >::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a fila est\'E1 vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se a fila estiver vazia, false caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 457                          \{\par
458       {\cf19 if}(head == NULL)\{\par
459         {\cf19 return} {\cf17 true};\par
460       \}{\cf19 else}\{\par
461         {\cf19 return} {\cf17 false};\par
462       \}\par
463     \}\par
}
}
{\xe \v peek\:Fila< T >}
{\xe \v Fila< T >\:peek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T& {\b Fila}< T >::peek (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o elemento da frente da fila. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uma refer\'EAncia para o elemento da frente. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exce\'E7\'F5es\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{Se a fila estiver vazia. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 506              \{\par
507         {\cf19 if} (isEmpty()) \{\par
508             {\cf19 throw} std::runtime_error({\cf22 "A fila est\'E1 vazia."});\par
509         \}\par
510         {\cf19 return} head->valor;\par
511     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v head\:Fila< T >}
{\xe \v Fila< T >\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}* {\b Fila}< T >::head{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tail\:Fila< T >}
{\xe \v Fila< T >\:tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}* {\b Fila}< T >::tail{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b estruturas_tads.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe KanbanBoard\par \pard\plain 
{\tc\tcl2 \v KanbanBoard}
{\xe \v KanbanBoard}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanBoard} representa o Quadro Kanban que cont\'E9m colunas e tarefas. }}\par
{
{\f2 #include <kanbanboard.h>}}\par
Diagrama de colabora\'E7\'E3o para KanbanBoard:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b KanbanColumn}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura interna que representa uma coluna do quadro Kanban. Cada coluna possui um nome e uma lista duplamente encadeada de tarefas. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanBoard} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor padr\'E3o da classe {\b KanbanBoard}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~KanbanBoard} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor padr\'E3o da classe {\b KanbanBoard}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addColumn} (const std::string &columnName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona uma nova coluna ao Quadro Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addTaskToColumn} (int columnIndex, const {\b KanbanTask} &task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona uma tarefa a uma coluna espec\'EDfica do Quadro Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printColumn} (int columnIndex) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que imprime as tarefas em uma coluna espec\'EDfica do Quadro Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moveTask} (int taskId, int idcolunaDestino)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que move uma tarefa de uma coluna para a outra. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sortColumn} (int columnIndex, int flag)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que ordena uma coluna escolhida com base na prioridade das taredas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNumColumns} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que retorna o n\'FAmero de colunas do Quadro Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeTask} (int taskId)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que exclui uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isBoardEmpty} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se o Quadro Kanban possui tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b columnEmpty} (int columnIndex) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se uma coluna est\'E1 vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b existeIdDuplicado} (int id) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se um ID recebido j\'E1 existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printBoard} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o quadro Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b saveToFile} (const std::string &filename) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva as informa\'E7\'F5es do Quadro Kanban em um arquivo '.bin'. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadFromFile} (const std::string &filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA um Quadro Kanban a partir de um arquivo '.bin'. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b saveToFileTxt} (const std::string &fileName) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que salva o Quadro Kanban em um arquivo '.txt' para a visualiza\'E7ao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanTask} * {\b findTask} (int id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que encontra uma tarefa com base em seu ID. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanColumn} * {\b findTaskColumn} (int taskId) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que encontra a coluna de uma tarefa com base em seu ID. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Privados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaDuplamenteEncadeada}< {\b KanbanColumn} > {\b columns}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanBoard} representa o Quadro Kanban que cont\'E9m colunas e tarefas. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    {\cf17 struct }KanbanColumn\{\par
     std::string name;\par
     ListaDuplamenteEncadeada<KanbanTask> tasks;\par
\par
    KanbanColumn({\cf17 const} std::string& columnName) : name(columnName) \{\}\par
\par
   {\cf20 // M\'E9todo para obter a lista de tarefas da coluna}\par
    ListaDuplamenteEncadeada<KanbanTask>& getTasks()\par
    \{\par
        {\cf19 return} tasks;\par
    \}\par
\};\par
  ListaDuplamenteEncadeada<KanbanColumn> columns;\par
}
\par
Essa classe possui dois atributos privados que merecem men\'E7\'E3o especial:{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Struct {\b KanbanColumn} Esse struct foi constru\'EDdo afim de definir uma coluna do Quadro Kanban, possui dois membros:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uma string "nome" que armazena o nome da coluna\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uma lista duplamente encadeada do tipo "KanbanTask" que armazena as tarefas associadas a coluna\par}
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Lista duplamente encadeada "columns" Essa \'E9 uma lista encadeada do tipo "KanbanColumn", ou seja, uma lista de colunas composta pelo struct {\b KanbanColumn}, que por sua vez cont\'E9m uma lista de tarefas. \par}
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v KanbanBoard\:KanbanBoard}
{\xe \v KanbanBoard\:KanbanBoard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanBoard::KanbanBoard ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor padr\'E3o da classe {\b KanbanBoard}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\}\par
}
}
{\xe \v ~KanbanBoard\:KanbanBoard}
{\xe \v KanbanBoard\:~KanbanBoard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanBoard::~KanbanBoard ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor padr\'E3o da classe {\b KanbanBoard}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v addColumn\:KanbanBoard}
{\xe \v KanbanBoard\:addColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::addColumn (const std::string &  {\i columnName})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona uma nova coluna ao Quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i columnName} \cell }{String de refer\'EAncia ao nome escolhido pelo usu\'E1rio para a coluna.\cell }
{\row }
}
Cria-se um novo struct {\b KanbanColumn} com o nome passado como par\'E2metro e adiciona-se o mesmo ao final da lista encadeada "columns" com o m\'E9todo pushback. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20 \{\par
21   KanbanColumn column(columnName);\par
22   columns.pushBack(column);\par
23 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_ab9d36038c7308e28792da1563f5b4dc0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v addTaskToColumn\:KanbanBoard}
{\xe \v KanbanBoard\:addTaskToColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::addTaskToColumn (int  {\i columnIndex}, const {\b KanbanTask} &  {\i task})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona uma tarefa a uma coluna espec\'EDfica do Quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i columnIndex} \cell }{\'CDndice da coluna em que deseja-se adicionar a tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{Vari\'E1vel do tipo {\b KanbanTask}, que cont\'E9m a tarefa que ser\'E1 adicionada a uma coluna.\cell }
{\row }
}
A l\'F3gica proposta \'E9 de atrav\'E9s do \'EDndice informado descobrir a coluna de destino e adicionar a tarefa atrav\'E9s do m\'E9todo push back. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27 \{\par
28   KanbanColumn &column = columns.get(columnIndex); {\cf20 // Retorna a coluna desejada}\par
29   column.tasks.pushBack(task);\par
30 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a901d595d906b4532b32718f4d8e0757b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a901d595d906b4532b32718f4d8e0757b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v columnEmpty\:KanbanBoard}
{\xe \v KanbanBoard\:columnEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool KanbanBoard::columnEmpty (int  {\i columnIndex}) const}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se uma coluna est\'E1 vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i columnIndex} \cell }{\'CDndice da coluna em que deseja-se realizar a verifica\'E7\'E3o.\cell }
{\row }
}
Ap\'F3s obter a coluna atrav\'E9s do seu \'EDndice, usa-se o m\'E9todo de lista duplamente encadeada isEmpty(). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true caso a coluna esteja vazia e false caso a coluna j\'E1 possua tarefas. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133 \{\par
134   {\cf17 const} KanbanColumn &column = columns.get(columnIndex);\par
135   {\cf19 if} (column.tasks.isEmpty())\par
136   \{\par
137     {\cf19 return} {\cf17 true};\par
138   \}\par
139   {\cf19 else}\par
140   \{\par
141     {\cf19 return} {\cf17 false};\par
142   \}\par
143 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a61a796eef245f4428d9a2ee90861742c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a61a796eef245f4428d9a2ee90861742c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v existeIdDuplicado\:KanbanBoard}
{\xe \v KanbanBoard\:existeIdDuplicado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool KanbanBoard::existeIdDuplicado (int  {\i id}) const}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se um ID recebido j\'E1 existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{ID a ser verificado.\cell }
{\row }
}
Percorre-se cada coluna comparando o ID passado como par\'E2metro com o ID de cada tarefa existente. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true caso o ID recebido j\'E1 exista e false caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 147 \{\par
148   {\cf19 for} ({\cf18 int} i = 0; i < columns.getSize(); ++i)\par
149   \{\par
150     {\cf17 const} KanbanColumn &column = columns.get(i);\par
151     {\cf19 for} ({\cf18 int} j = 0; j < column.tasks.getSize(); ++j)\par
152     \{\par
153       {\cf17 const} KanbanTask &task = column.tasks.get(j);\par
154       {\cf19 if} (task.getId() == {\cf18 id})\par
155       \{\par
156         {\cf19 return} {\cf17 true};\par
157       \}\par
158     \}\par
159   \}\par
160   {\cf19 return} {\cf17 false};\par
161 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a8b1a8c7ae9788d22aab51292b161d653_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a8b1a8c7ae9788d22aab51292b161d653_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findTask\:KanbanBoard}
{\xe \v KanbanBoard\:findTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KanbanTask} * KanbanBoard::findTask (int  {\i id})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que encontra uma tarefa com base em seu ID. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{ID da tarefa a ser encontrada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ponteiro de {\b KanbanTask}\par
}}{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O m\'E9todo percorre todas as colunas do quadro Kanban e, para cada coluna, verifica se existem tarefas nessa coluna.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Se a coluna n\'E3o estiver vazia, o m\'E9todo percorre todas as tarefas da coluna em busca da tarefa com o ID fornecido.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Se a tarefa for encontrada, um ponteiro para essa tarefa \'E9 retornado. \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 437 \{\par
438   {\cf19 for} ({\cf18 int} j = 0; j < columns.getSize(); ++j)\par
439   \{\par
440     KanbanColumn &column = columns.get(j);\par
441     {\cf19 for} ({\cf18 int} i = 0; i < column.tasks.getSize(); ++i)\par
442     \{\par
443       {\cf19 if} ({\cf18 id} == column.tasks.get(i).getId() && column.tasks.isEmpty() == {\cf17 false})\par
444       \{\par
445         {\cf19 return} &column.tasks.get(i);\par
446       \}\par
447     \}\par
448   \}\par
449   {\cf19 return} NULL;\par
450 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a6a0df6660afcc91108d5f6ffd348251a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a6a0df6660afcc91108d5f6ffd348251a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findTaskColumn\:KanbanBoard}
{\xe \v KanbanBoard\:findTaskColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KanbanColumn}* KanbanBoard::findTaskColumn (int  {\i taskId}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que encontra a coluna de uma tarefa com base em seu ID. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i taskId} \cell }{ID da tarefa a qual ser\'E1 encontrada a coluna \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ponteiro de {\b KanbanColumn}\par
}}{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Percorre todas as colunas do quadro Kanban e, para cada coluna, verifica se existem tarefas nessa coluna.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Se a coluna n\'E3o estiver vazia, o m\'E9todo percorre todas as tarefas da coluna em busca da tarefa com o ID fornecido.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Se a tarefa for encontrada, um ponteiro para a coluna correspondente \'E9 retornado. \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 259   \{\par
260     {\cf19 for} ({\cf18 int} i = 0; i < columns.getSize(); i++)\par
261     \{\par
262       KanbanColumn &column = columns.get(i);\par
263       {\cf19 for} ({\cf18 int} j = 0; j < column.tasks.getSize(); j++)\par
264       \{\par
265         {\cf19 if} (column.tasks.get(j).getId() == taskId)\par
266         \{\par
267           {\cf19 return} &column;\par
268         \}\par
269       \}\par
270     \}\par
271     {\cf19 return} NULL;\par
272   \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_ae7f5eea9c72581a1e67621c65a43808f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_ae7f5eea9c72581a1e67621c65a43808f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getNumColumns\:KanbanBoard}
{\xe \v KanbanBoard\:getNumColumns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int KanbanBoard::getNumColumns () const}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que retorna o n\'FAmero de colunas do Quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
O n\'FAmero de colunas \'E9 encontrado atrav\'E9s do m\'E9todo getSize() da lista duplamente encadeada. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero de colunas. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100 \{\par
101   {\cf19 return} columns.getSize();\par
102 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_aa7f6f54e145aa7c3cea1f0ab1d5585ae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isBoardEmpty\:KanbanBoard}
{\xe \v KanbanBoard\:isBoardEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool KanbanBoard::isBoardEmpty () const}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se o Quadro Kanban possui tarefas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Um la\'E7o 'for' percorre coluna por coluna verificando se est\'E3o vazias ou n\'E3o. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true caso o quadro esteja vazio e false caso o quadro j\'E1 possua tarefas. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 119 \{\par
120   {\cf19 for} ({\cf18 int} i = 0; i < columns.getSize(); ++i)\par
121   \{\par
122     KanbanColumn &column = columns.get(i);\par
123     {\cf19 if} (!column.tasks.isEmpty())\par
124     \{\par
125       {\cf19 return} {\cf17 false};\par
126     \}\par
127   \}\par
128   {\cf19 return} {\cf17 true};\par
129 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a7307f5be7fac353ccc43599261083c49_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a7307f5be7fac353ccc43599261083c49_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadFromFile\:KanbanBoard}
{\xe \v KanbanBoard\:loadFromFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::loadFromFile (const std::string &  {\i filename})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA um Quadro Kanban a partir de um arquivo '.bin'. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo a ser lido.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Observa\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Este m\'E9todo substituir\'E1 o estado atual do quadro Kanban com os dados lidos do arquivo.\par
}}{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O m\'E9todo abre o arquivo especificado em modo bin\'E1rio para leitura dos dados do quadro Kanban.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Antes de carregar os dados, o m\'E9todo limpa o quadro atual utilizando o m\'E9todo {\f2 clear()}  para garantir que o quadro esteja vazio antes do carregamento.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O m\'E9todo percorre cada coluna e l\'EA os dados da coluna e suas tarefas associadas do arquivo.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Para cada coluna, o tamanho do nome da coluna \'E9 lido, seguido pela leitura do nome da coluna em si.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uma nova coluna \'E9 adicionada ao quadro Kanban utilizando o m\'E9todo {\f2 {\b addColumn()}}  com o nome da coluna lido.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Em seguida, o n\'FAmero de tarefas na coluna \'E9 lido e, para cada tarefa, s\'E3o lidos os dados da tarefa do arquivo e a tarefa \'E9 adicionada \'E0 coluna utilizando o m\'E9todo {\f2 {\b addTaskToColumn()}} . \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 327 \{\par
328     std::ifstream file(filename.c_str(), std::ios::binary);\par
329 \par
330     {\cf19 if} (!file) \{\par
331         std::cout << {\cf22 "Erro ao abrir o arquivo de carregamento."} << std::endl;\par
332         {\cf19 return};\par
333     \}\par
334 \par
335     columns.clear(); {\cf20 // Limpa o quadro antes de carregar os dados}\par
336 \par
337     {\cf18 int} numColumns;\par
338     file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&numColumns), {\cf17 sizeof}(numColumns));\par
339 \par
340     {\cf20 // Faz a leitura dos dados}\par
341     {\cf19 for} ({\cf18 int} i = 0; i < numColumns; i++) \{\par
342         {\cf18 int} columnNameSize;\par
343         file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&columnNameSize), {\cf17 sizeof}(columnNameSize));\par
344 \par
345         std::string columnName(columnNameSize, {\cf23 '\\0'});\par
346         file.read(&columnName[0], columnNameSize);\par
347 \par
348         addColumn(columnName);\par
349 \par
350         {\cf18 int} columnSize;\par
351         file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&columnSize), {\cf17 sizeof}(columnSize));\par
352 \par
353         {\cf19 for} ({\cf18 int} j = 0; j < columnSize; j++) \{\par
354             KanbanTask task;\par
355 \par
356             {\cf20 // Ler os dados da tarefa do arquivo}\par
357             {\cf18 int} taskId;\par
358             file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&taskId), {\cf17 sizeof}(taskId));\par
359             task.setId(taskId);\par
360 \par
361             {\cf18 int} taskTitleSize;\par
362             file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&taskTitleSize), {\cf17 sizeof}(taskTitleSize));\par
363             std::string taskTitle(taskTitleSize, {\cf23 '\\0'});\par
364             file.read(&taskTitle[0], taskTitleSize);\par
365             task.setTitulo(taskTitle);\par
366 \par
367             {\cf18 int} taskDescriptionSize;\par
368             file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&taskDescriptionSize), {\cf17 sizeof}(taskDescriptionSize));\par
369             std::string taskDescription(taskDescriptionSize, {\cf23 '\\0'});\par
370             file.read(&taskDescription[0], taskDescriptionSize);\par
371             task.setDescricao(taskDescription);\par
372 \par
373             {\cf18 int} taskPriority;\par
374             file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&taskPriority), {\cf17 sizeof}(taskPriority));\par
375             task.setPrioridade(taskPriority);\par
376 \par
377             {\cf18 int} taskDueDateSize;\par
378             file.read({\cf17 reinterpret_cast<}{\cf18 char}*{\cf17 >}(&taskDueDateSize), {\cf17 sizeof}(taskDueDateSize));\par
379             std::string taskDueDate(taskDueDateSize, {\cf23 '\\0'});\par
380             file.read(&taskDueDate[0], taskDueDateSize);\par
381             task.setVencimento(taskDueDate);\par
382 \par
383             addTaskToColumn(i, task);\par
384         \}\par
385     \}\par
386 \par
387     file.close();\par
388 \par
389     std::cout << ANSI_GREEN << {\cf22 "Quadro Kanban restaurado do arquivo '"} << filename << {\cf22 "' com sucesso."} << ANSI_RESET << std::endl;\par
390 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_af172b2c66ddd65f49ba2f4aa765a7480_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_af172b2c66ddd65f49ba2f4aa765a7480_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v moveTask\:KanbanBoard}
{\xe \v KanbanBoard\:moveTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::moveTask (int  {\i taskId}, int  {\i idcolunaDestino})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que move uma tarefa de uma coluna para a outra. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i taskId} \cell }{VID da tarefa a ser movida \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idcolunaDestino} \cell }{ID da coluna de destino.\cell }
{\row }
}
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
A tarefa a ser movida \'E9 encontrada atrav\'E9s da chamada da fun\'E7\'E3o findTask\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Encontra-se a coluna de origem com a chamada da fun\'E7\'E3o findTaskColumn\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Adiciona-se a tarefa a coluna de destino com o m\'E9todo pushback e deleta-se a tarefa da coluna de origem com o m\'E9todo removeValue. \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48 \{\par
49   KanbanTask *tarefa = findTask(taskId); {\cf20 // ponteiro apontando para a tarefa}\par
50 \par
51   {\cf19 if} (tarefa == NULL)\par
52   \{\par
53     std::cout << {\cf22 "Tarefa n\'E3o encontrada."} << std::endl;\par
54     {\cf19 return};\par
55   \}\par
56 \par
57   KanbanColumn *colunaOrigem = findTaskColumn(taskId);\par
58   {\cf19 if} (colunaOrigem == NULL)\par
59   \{\par
60     std::cout << {\cf22 "Coluna de origem n\'E3o encontrada para a tarefa."} << std::endl;\par
61     {\cf19 return};\par
62   \}\par
63 \par
64   KanbanColumn &colunaDestino = columns.get(idcolunaDestino);\par
65 \par
66   colunaDestino.tasks.pushBack(*tarefa);\par
67   colunaOrigem->tasks.removeValue(*tarefa);\par
68 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a8b2d80954ef37e1e067f432ad0d2ed34_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a8b2d80954ef37e1e067f432ad0d2ed34_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printBoard\:KanbanBoard}
{\xe \v KanbanBoard\:printBoard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::printBoard () const}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este m\'E9todo imprime o quadro Kanban com as colunas e tarefas associadas, formatando-o de acordo com a quantidade de colunas e tarefas presentes. A formata\'E7\'E3o do quadro \'E9 ajustada automaticamente para melhorar a legibilidade.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Observa\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Este m\'E9todo assume que as colunas e tarefas j\'E1 foram devidamente configuradas no objeto {\b KanbanBoard}.\par
}}O m\'E9todo utiliza t\'E9cnicas de formata\'E7\'E3o para alinhar as colunas e tarefas na sa\'EDda do console. Ele tamb\'E9m ajusta a largura das colunas de acordo com o n\'FAmero de colunas presentes no quadro Kanban.\par
A responsividade do quadro \'E9 implementada atrav\'E9s de uma l\'F3gica que define a largura das colunas com base na quantidade de colunas existentes. A quantidade m\'E1xima de tarefas em uma coluna \'E9 determinada para garantir a correta exibi\'E7\'E3o das tarefas em todas as colunas.\par
A sa\'EDda do quadro Kanban inclui os t\'EDtulos das colunas e as tarefas de cada coluna, organizadas em linhas. Se uma coluna n\'E3o possui uma tarefa em uma determinada linha, \'E9 exibido um espa\'E7o em branco para manter a formata\'E7\'E3o correta. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 166 \{\par
167  \par
168   {\cf20 // RESPONSIVIDADE}\par
169   {\cf18 int} numColumn = columns.getSize();\par
170   {\cf18 int} columnWidth = 0;\par
171   {\cf19 switch} (numColumn)\par
172   \{\par
173   {\cf19 case} 1:\par
174     columnWidth = 72;\par
175     {\cf19 break};\par
176   {\cf19 case} 2:\par
177     columnWidth = 48;\par
178     {\cf19 break};\par
179   {\cf19 case} 3:\par
180     columnWidth = 35;\par
181     {\cf19 break};\par
182   {\cf19 case} 4:\par
183     columnWidth = 32;\par
184     {\cf19 break};\par
185   {\cf19 case} 5:\par
186     columnWidth = 24;\par
187     {\cf19 break};\par
188   {\cf19 case} 6:\par
189     columnWidth = 21;\par
190     {\cf19 break};\par
191   {\cf19 case} 7:\par
192     columnWidth = 18;\par
193     {\cf19 break};\par
194   {\cf19 default}:\par
195     columnWidth = 25;\par
196     {\cf19 break};\par
197   \}\par
198 \par
199   {\cf18 int} firstColumnWidth = 0;\par
200   {\cf19 if}(numColumn <= 4)\{\par
201     firstColumnWidth = columnWidth - 14;\par
202   \}{\cf19 else}\{\par
203     firstColumnWidth = columnWidth - 7;\par
204   \}\par
205 \par
206   {\cf19 if}(numColumn < 4)\{\par
207      std::cout << {\cf22 "\\n"};\par
208     std::cout << {\cf22 "+-------------------------------------------------------------------------------------------------------------------------+\\n"};\par
209     std::cout << {\cf22 "|                                              "} << ANSI_BLUE << {\cf22 "GERENCIADOR DE TAREFAS KANBAN"} << ANSI_RESET << {\cf22 "                                              |\\n"};\par
210     std::cout << {\cf22 "+-------------------------------------------------------------------------------------------------------------------------+\\n"};\par
211   \}{\cf19 else}\{\par
212      std::cout << {\cf22 "\\n"};\par
213     std::cout << {\cf22 "+-----------------------------------------------------------------------------------------------------------------------------------------+\\n"};\par
214     std::cout << {\cf22 "|                                                      "} << ANSI_BLUE << {\cf22 "GERENCIADOR DE TAREFAS KANBAN"} << ANSI_RESET << {\cf22 "                                                      |\\n"};\par
215     std::cout << {\cf22 "+-----------------------------------------------------------------------------------------------------------------------------------------+\\n"};\par
216   \}\par
217 \par
218   std::cout << std::right << std::setw(firstColumnWidth) << {\cf22 ""};\par
219   {\cf20 // Imprime os t\'EDtulos das colunas lado a lado}\par
220   {\cf19 for} ({\cf18 int} i = 0; i < columns.getSize(); i++)\par
221   \{\par
222     std::cout << std::left << std::setw(columnWidth) << std::setfill({\cf23 ' '}) << columns.get(i).name;\par
223   \}\par
224   std::cout << std::endl;\par
225 \par
226   {\cf20 // Encontra a maior quantidade de tarefas em uma coluna}\par
227   {\cf18 int} maxTasks = 0;\par
228   {\cf19 for} ({\cf18 int} i = 0; i < columns.getSize(); ++i)\par
229   \{\par
230     {\cf18 int} columnSize = columns.get(i).tasks.getSize();\par
231     {\cf19 if} (columnSize > maxTasks)\par
232     \{\par
233       maxTasks = columnSize;\par
234     \}\par
235   \}\par
236 \par
237   {\cf20 // Imprime as tarefas de cada linha em todas as colunas abaixo dos t\'EDtulos}\par
238   {\cf19 for} ({\cf18 int} i = 0; i < maxTasks; ++i)\par
239   \{\par
240     std::cout << std::right << std::setw(firstColumnWidth) << {\cf22 ""};\par
241     {\cf19 for} ({\cf18 int} j = 0; j < columns.getSize(); ++j)\par
242     \{\par
243 \par
244       {\cf19 if} (i < columns.get(j).tasks.getSize())\par
245       \{ {\cf20 // se i for menor que o n\'FAmero de tarefas de uma coluna}\par
246         std::cout << std::left << std::setw(columnWidth + 9) << std::setfill({\cf23 ' '});\par
247         {\cf17 const} KanbanTask &task = columns.get(j).tasks.get(i); {\cf20 // pegando a tarefa}\par
248         std::string taskTitle = task.getTituloId();\par
249         std::cout << taskTitle;\par
250       \}\par
251       {\cf19 else}\par
252       \{\par
253         std::cout << std::left << std::setw(columnWidth) << std::setfill({\cf23 ' '});\par
254         std::cout << {\cf22 ""};\par
255       \}\par
256     \}\par
257     std::cout << std::endl;\par
258   \}\par
259 \par
260   {\cf19 if}(numColumn < 4)\{\par
261     std::cout << {\cf22 "+-------------------------------------------------------------------------------------------------------------------------+\\n"};\par
262   \}{\cf19 else}\{\par
263     std::cout << {\cf22 "+-----------------------------------------------------------------------------------------------------------------------------------------+\\n"};\par
264   \}\par
265 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a13653cefc8ac7b1fb3b1b34e39c61b2b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a13653cefc8ac7b1fb3b1b34e39c61b2b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printColumn\:KanbanBoard}
{\xe \v KanbanBoard\:printColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::printColumn (int  {\i columnIndex}) const}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que imprime as tarefas em uma coluna espec\'EDfica do Quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i columnIndex} \cell }{\'CDndice da coluna que deseja-se imprimir.\cell }
{\row }
}
Ap\'F3s descobrir qual a coluna desejada pelo usu\'E1rio atrav\'E9s do \'EDndice, um 'for' percorre a lista de tarefas utilizando o m\'E9todo getTituloId para imprimir o t\'EDtulo e id de cada tarefa. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34 \{\par
35   {\cf17 const} KanbanColumn &column = columns.get(columnIndex);\par
36 \par
37   std::cout << {\cf22 "Coluna "} << (columnIndex + 1) << {\cf22 " - "} << column.name << {\cf22 ":\\n"};\par
38   for ({\cf18 int} i = 0; i < column.tasks.getSize(); ++i)\par
39   \{\par
40     {\cf17 const} KanbanTask &task = column.tasks.get(i);\par
41     std::cout << task.getTituloId() << {\cf22 "\\n"};\par
42   \}\par
43   std::cout << std::endl;\par
44 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_ad0cac8fde1059a5f0f3d2208a25752ee_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_ad0cac8fde1059a5f0f3d2208a25752ee_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v removeTask\:KanbanBoard}
{\xe \v KanbanBoard\:removeTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool KanbanBoard::removeTask (int  {\i taskId})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que exclui uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i taskId} \cell }{ID da tarefa a ser exclu\'EDda.\cell }
{\row }
}
A tarefa \'E9 encontrada com a chamada do m\'E9todo {\b findTask()} e depois exclu\'EDda com o m\'E9todo removeValue(). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true ou false, dependendo se a tarefa foi removido com sucesso ou n\'E3o. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 106 \{\par
107   KanbanTask *tarefa = findTask(taskId);\par
108 \par
109   {\cf19 if} (tarefa == NULL)\par
110     {\cf19 return} {\cf17 false};\par
111 \par
112   KanbanColumn *coluna = findTaskColumn(taskId);\par
113   coluna->tasks.removeValue(*tarefa);\par
114   {\cf19 return} {\cf17 true};\par
115 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a0c87862faa96b8225faeedc9de929812_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a0c87862faa96b8225faeedc9de929812_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v saveToFile\:KanbanBoard}
{\xe \v KanbanBoard\:saveToFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::saveToFile (const std::string &  {\i filename}) const}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva as informa\'E7\'F5es do Quadro Kanban em um arquivo '.bin'. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{Nome do arquivo em que deseja-se salvar o quadro.\cell }
{\row }
}
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O m\'E9todo cria um arquivo de sa\'EDda com o nome fornecido e o abre em modo bin\'E1rio para grava\'E7\'E3o dos dados do quadro Kanban.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Em seguida, o n\'FAmero de colunas do quadro \'E9 gravado no arquivo como um valor inteiro.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O m\'E9todo percorre cada coluna do quadro e grava os dados da coluna e suas tarefas associadas no arquivo.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Em seguida, cada tarefa \'E9 percorrida e seus dados, como ID, t\'EDtulo, descri\'E7\'E3o, prioridade e data de vencimento, s\'E3o gravados no arquivo.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ap\'F3s a grava\'E7\'E3o de todos os dados, o arquivo \'E9 fechado. \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 270 \{\par
271     std::ofstream file(filename.c_str(), std::ios::binary);\par
272     {\cf19 if} (!file) \{\par
273         std::cout << {\cf22 "Erro ao abrir o arquivo de salvamento."} << std::endl;\par
274         {\cf19 return};\par
275     \}\par
276 \par
277     {\cf18 int} numColumns = columns.getSize();\par
278     file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&numColumns), {\cf17 sizeof}(numColumns));\par
279 \par
280     {\cf20 // Faz a grava\'E7\'E3o dos dados}\par
281     {\cf19 for} ({\cf18 int} i = 0; i < numColumns; i++)\par
282     \{\par
283         {\cf17 const} KanbanColumn& column = columns.get(i);\par
284         {\cf18 int} columnNameSize = column.name.size();\par
285         file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&columnNameSize), {\cf17 sizeof}(columnNameSize));\par
286         file.write(column.name.c_str(), columnNameSize);\par
287 \par
288         {\cf17 const} ListaDuplamenteEncadeada<KanbanTask>& tasks = column.tasks;\par
289         {\cf18 int} columnSize = tasks.getSize();\par
290         file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&columnSize), {\cf17 sizeof}(columnSize));\par
291 \par
292         {\cf19 for} ({\cf18 int} j = 0; j < columnSize; j++)\{\par
293             {\cf17 const} KanbanTask& task = tasks.get(j);\par
294 \par
295             {\cf20 // Escrever os dados da tarefa no arquivo}\par
296             {\cf18 int} taskId = task.getId();\par
297             file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&taskId), {\cf17 sizeof}(taskId));\par
298 \par
299             std::string taskTitle = task.getTitulo();\par
300             {\cf18 int} taskTitleSize = taskTitle.size();\par
301             file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&taskTitleSize), {\cf17 sizeof}(taskTitleSize));\par
302             file.write(taskTitle.c_str(), taskTitleSize);\par
303 \par
304             std::string taskDescription = task.getDescricao();\par
305             {\cf18 int} taskDescriptionSize = taskDescription.size();\par
306             file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&taskDescriptionSize), {\cf17 sizeof}(taskDescriptionSize));\par
307             file.write(taskDescription.c_str(), taskDescriptionSize);\par
308 \par
309             {\cf18 int} taskPriority = task.getPrioridade();\par
310             file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&taskPriority), {\cf17 sizeof}(taskPriority));\par
311 \par
312             std::string taskDueDate = task.getVencimento();\par
313             {\cf18 int} taskDueDateSize = taskDueDate.size();\par
314             file.write({\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&taskDueDateSize), {\cf17 sizeof}(taskDueDateSize));\par
315             file.write(taskDueDate.c_str(), taskDueDateSize);\par
316         \}\par
317     \}\par
318 \par
319     file.close();\par
320 \par
321     std::cout << ANSI_GREEN << {\cf22 "Quadro Kanban salvo no arquivo '"} << filename << {\cf22 "' com sucesso."} << ANSI_RESET << std::endl;\par
322 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a0b38a51b177c2a45ec706cd98c8076a2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a0b38a51b177c2a45ec706cd98c8076a2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v saveToFileTxt\:KanbanBoard}
{\xe \v KanbanBoard\:saveToFileTxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::saveToFileTxt (const std::string &  {\i fileName}) const}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que salva o Quadro Kanban em um arquivo '.txt' para a visualiza\'E7ao. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{O nome do arquivo no qual ser\'E1 gravado o quadro.\cell }
{\row }
}
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O m\'E9todo cria um arquivo de sa\'EDda com o nome fornecido e o abre em modo de texto para grava\'E7\'E3o dos dados do quadro Kanban.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O m\'E9todo percorre cada coluna do quadro e grava as informa\'E7\'F5es da coluna e suas tarefas associadas no arquivo de texto.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Para cada coluna, \'E9 gravado um cabe\'E7alho indicando o n\'FAmero da coluna e o nome da coluna.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Em seguida, cada tarefa \'E9 percorrida e suas informa\'E7\'F5es, como t\'EDtulo e descri\'E7\'E3o, s\'E3o gravadas no arquivo de texto.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Cada tarefa \'E9 delimitada por uma linha horizontal para melhorar a legibilidade. \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 395 \{\par
396           std::ofstream file(fileName.c_str());\par
397           \par
398           {\cf19 if} (!file) \{\par
399               std::cout << {\cf22 "Erro ao abrir o arquivo "} << fileName << std::endl;\par
400               {\cf19 return};\par
401           \}\par
402 \par
403           {\cf18 int} numTasks = 1;\par
404           {\cf20 // Imprime no arquivo txt}\par
405           {\cf19 for} ({\cf18 int} i = 0; i < columns.getSize(); i++) \{\par
406               {\cf17 const} KanbanColumn& column = columns.get(i);\par
407               file << {\cf22 "*======================================*\\n"};\par
408               file << {\cf22 "           Coluna "} << (i + 1) << {\cf22 ": "} << column.name << std::endl;\par
409               file << {\cf22 "\\n"} << std::endl;\par
410               {\cf17 const} ListaDuplamenteEncadeada<KanbanTask>& tasks = column.tasks;\par
411               for ({\cf18 int} j = 0; j < tasks.getSize(); j++) \{\par
412                   {\cf17 const} KanbanTask& task = tasks.get(j);\par
413                   {\cf20 /*file << "  - Tarefa " << (j + 1) << ": " << task.getDescricao() << std::endl;}\par
414 {\cf20                   file << "  - Tarefa " << (numTasks) << ": " << task.getTitulo() << std::endl;}\par
415 {\cf20                   file << "          " << task.getDescricao() << std::endl;*/}\par
416                   file << {\cf22 "+-------------------------------------+\\n"};\par
417                   file << {\cf22 "|              Tarefa "} << numTasks << {\cf22 "               |\\n"}; \par
418                   file << {\cf22 "+-------------------------------------+\\n"};\par
419                   file << {\cf22 " T\'EDtulo: "} << task.getTitulo() << {\cf22 "\\n"};\par
420                   file << {\cf22 " Descri\'E7\'E3o: "} << task.getDescricao() << {\cf22 "\\n"};\par
421                   file << {\cf22 "+-------------------------------------+\\n\\n"};\par
422                   numTasks++; \par
423               \}\par
424               file << std::endl;\par
425               file << {\cf22 "*======================================*\\n"};\par
426               file << {\cf22 "\\n"} << std::endl;\par
427           \}\par
428 \par
429           file.close();\par
430 \par
431           std::cout << ANSI_GREEN << {\cf22 "Tabela salva no arquivo "} << fileName << {\cf22 " com sucesso."} << ANSI_RESET << std::endl;\par
432 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_ac52cb43d40eb69b8663f67ab4dc88647_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_ac52cb43d40eb69b8663f67ab4dc88647_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sortColumn\:KanbanBoard}
{\xe \v KanbanBoard\:sortColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanBoard::sortColumn (int  {\i columnIndex}, int  {\i flag})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que ordena uma coluna escolhida com base na prioridade das taredas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i columnIndex} \cell }{\'CDndice da coluna que deseja-se ordenar. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i flag} \cell }{Flag para sinalizar se a ordena\'E7\'E3o deve ser por prioridade crescente ou decrescente.\cell }
{\row }
}
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
A tarefa a ser movida \'E9 encontrada atrav\'E9s da chamada da fun\'E7\'E3o findTask\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Encontra-se a coluna de origem com a chamada da fun\'E7\'E3o findTaskColumn\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Adiciona-se a tarefa a coluna de destino com o m\'E9todo pushback e deleta-se a tarefa da coluna de origem com o m\'E9todo removeValue(). \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70                                                      \{\par
71 \par
72   {\cf19 if} (columnIndex < 0 || columnIndex >= columns.getSize())\{\par
73     std::cout << {\cf22 "Coluna inv\'E1lida."} << std::endl;\par
74     {\cf19 return};\par
75   \}\par
76 \par
77   KanbanColumn &column = columns.get(columnIndex);\par
78   ListaDuplamenteEncadeada<KanbanTask> &tasks = column.tasks;\par
79   {\cf18 int} numTasks = tasks.getSize();\par
80 \par
81   {\cf20 // Chama o algoritmo de ordena\'E7\'E3o apropriado com base na flag}\par
82   {\cf19 switch} (flag)\{\par
83 \par
84   {\cf19 case} 1: {\cf20 // Ordenar da prioridade mais baixa para a mais alta (crescente)}\par
85     AlgoritmosDeOrdenacao<KanbanTask>::bubbleSort(tasks, numTasks);\par
86     {\cf19 break};\par
87 \par
88   {\cf19 case} 2: {\cf20 // Ordenar da prioridade mais alta para a mais baixa (decrescente)}\par
89     AlgoritmosDeOrdenacao<KanbanTask>::selectionSort(tasks, numTasks);\par
90     {\cf19 break};\par
91 \par
92   {\cf19 default}:\par
93     {\cf19 return};\par
94   \}\par
95 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a0c3f9292b3e44370fcdf66162beeef12_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanBoard_a0c3f9292b3e44370fcdf66162beeef12_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v columns\:KanbanBoard}
{\xe \v KanbanBoard\:columns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaDuplamenteEncadeada}<{\b KanbanColumn}> KanbanBoard::columns{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lista duplamente encadeada de colunas do quadro Kanban \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b kanbanboard.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/src/{\b kanbanboard.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura KanbanBoard::KanbanColumn\par \pard\plain 
{\tc\tcl2 \v KanbanBoard::KanbanColumn}
{\xe \v KanbanBoard::KanbanColumn}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura interna que representa uma coluna do quadro Kanban. Cada coluna possui um nome e uma lista duplamente encadeada de tarefas. }}\par
Diagrama de colabora\'E7\'E3o para KanbanBoard::KanbanColumn:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structKanbanBoard_1_1KanbanColumn__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanColumn} (const std::string &columnName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da estrutura {\b KanbanColumn}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaDuplamenteEncadeada}< {\b KanbanTask} > & {\b getTasks} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m a lista de tarefas da coluna. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaDuplamenteEncadeada}< {\b KanbanTask} > {\b tasks}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura interna que representa uma coluna do quadro Kanban. Cada coluna possui um nome e uma lista duplamente encadeada de tarefas. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v KanbanColumn\:KanbanBoard::KanbanColumn}
{\xe \v KanbanBoard::KanbanColumn\:KanbanColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanBoard::KanbanColumn::KanbanColumn (const std::string &  {\i columnName}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da estrutura {\b KanbanColumn}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i columnName} \cell }{Nome da coluna. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70 : name(columnName) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v getTasks\:KanbanBoard::KanbanColumn}
{\xe \v KanbanBoard::KanbanColumn\:getTasks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaDuplamenteEncadeada}<{\b KanbanTask}>& KanbanBoard::KanbanColumn::getTasks (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obt\'E9m a lista de tarefas da coluna. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Refer\'EAncia para a lista de tarefas da coluna. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 78     \{\par
79       {\cf19 return} tasks;\par
80     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v name\:KanbanBoard::KanbanColumn}
{\xe \v KanbanBoard::KanbanColumn\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string KanbanBoard::KanbanColumn::name}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tasks\:KanbanBoard::KanbanColumn}
{\xe \v KanbanBoard::KanbanColumn\:tasks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaDuplamenteEncadeada}<{\b KanbanTask}> KanbanBoard::KanbanColumn::tasks}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b kanbanboard.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe KanbanTask\par \pard\plain 
{\tc\tcl2 \v KanbanTask}
{\xe \v KanbanTask}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanTask} representa uma tarefa espec\'EDfica para o Kanban. }}\par
{
{\f2 #include <kanbantask.h>}}\par
Diagrama de hierarquia para KanbanTask:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanTask__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Diagrama de colabora\'E7\'E3o para KanbanTask:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanTask__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanTask} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor padr\'E3o de {\b KanbanTask}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanTask} (int {\b id}, const std::string &{\b titulo})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID e o t\'EDtulo especificados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanTask} (int {\b id}, const std::string &{\b titulo}, const std::string &{\b descricao})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID, o t\'EDtulo e a descri\'E7\'E3o especificados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanTask} (int {\b id}, const std::string &{\b titulo}, const std::string &{\b descricao}, int {\b prioridade})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID, o t\'EDtulo, a descri\'E7\'E3o e a prioridade especificados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanTask} (int {\b id}, const std::string &{\b titulo}, const std::string &{\b descricao}, int {\b prioridade}, const std::string &{\b dataVencimento})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID, o t\'EDtulo, a descri\'E7\'E3o, a prioridade e a data de vencimento especificados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KanbanTask} (const {\b KanbanTask} &other)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor de c\'F3pia que cria um novo objeto {\b KanbanTask} com os mesmos atributos de outro objeto {\b KanbanTask}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~KanbanTask} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor padr\'E3o de {\b KanbanTask}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setId} (int {\b id})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define o ID da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getId} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o ID da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTituloId} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que retorna o t\'EDtulo da tarefa junto com o ID. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b KanbanTask} &other) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga do operador de compara\'E7\'E3o "==" para verificar igualdade entre duas KanbanTasks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printTask} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementa\'E7\'E3o do m\'E9todo virtual puro {\b printTask()} da classe base {\b Task} para imprimir os detalhes da tarefa, adicionando o atributo ID. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTitulo} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o t\'EDtulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getDescricao} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a descri\'E7\'E3o da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPrioridade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getVencimento} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a data de vencimento da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string {\b titulo})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define o t\'EDtulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDescricao} (std::string {\b descricao})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a descri\'E7\'E3o da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPrioridade} (int {\b prioridade})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVencimento} (std::string {\b dataVencimento})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a data de vencimento da tarefa. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b titulo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b descricao}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b prioridade}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b dataVencimento}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Privados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigas\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &os, const {\b KanbanTask} &task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga do operador de inser\'E7\'E3o "<<" para imprimir os detalhes da {\b KanbanTask} em um fluxo de sa\'EDda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::istream & {\b operator>>} (std::istream &is, {\b KanbanTask} &task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga do operador de extra\'E7\'E3o ">>" para ler os detalhes da {\b KanbanTask} de um fluxo de entrada. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanTask} representa uma tarefa espec\'EDfica para o Kanban. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta classe \'E9 uma classe derivada da classe {\b Task} e representa uma tarefa espec\'EDfica para o Kanban. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v KanbanTask\:KanbanTask}
{\xe \v KanbanTask\:KanbanTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanTask::KanbanTask (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor padr\'E3o de {\b KanbanTask}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39 \{\}\par
}
}
{\xe \v KanbanTask\:KanbanTask}
{\xe \v KanbanTask\:KanbanTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanTask::KanbanTask (int  {\i id}, const std::string &  {\i titulo})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID e o t\'EDtulo especificados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{Identifica\'E7\'E3o \'FAnica da tarefa no Kanban. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 : Task(titulo), id({\cf18 id}) \{\}\par
}
}
{\xe \v KanbanTask\:KanbanTask}
{\xe \v KanbanTask\:KanbanTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanTask::KanbanTask (int  {\i id}, const std::string &  {\i titulo}, const std::string &  {\i descricao})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID, o t\'EDtulo e a descri\'E7\'E3o especificados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{Identifica\'E7\'E3o \'FAnica da tarefa no Kanban. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18     : Task(titulo, descricao), id({\cf18 id}) \{\}\par
}
}
{\xe \v KanbanTask\:KanbanTask}
{\xe \v KanbanTask\:KanbanTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanTask::KanbanTask (int  {\i id}, const std::string &  {\i titulo}, const std::string &  {\i descricao}, int  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID, o t\'EDtulo, a descri\'E7\'E3o e a prioridade especificados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{Identifica\'E7\'E3o \'FAnica da tarefa no Kanban. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{Prioridade da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21     : Task(titulo, descricao, prioridade), id({\cf18 id}) \{\}\par
}
}
{\xe \v KanbanTask\:KanbanTask}
{\xe \v KanbanTask\:KanbanTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanTask::KanbanTask (int  {\i id}, const std::string &  {\i titulo}, const std::string &  {\i descricao}, int  {\i prioridade}, const std::string &  {\i dataVencimento})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b KanbanTask} com o ID, o t\'EDtulo, a descri\'E7\'E3o, a prioridade e a data de vencimento especificados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{Identifica\'E7\'E3o \'FAnica da tarefa no Kanban. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{Prioridade da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataVencimento} \cell }{Data de vencimento da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24     : Task(titulo, descricao, prioridade, dataVencimento), id({\cf18 id}) \{\}\par
}
}
{\xe \v KanbanTask\:KanbanTask}
{\xe \v KanbanTask\:KanbanTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanTask::KanbanTask (const {\b KanbanTask} &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor de c\'F3pia que cria um novo objeto {\b KanbanTask} com os mesmos atributos de outro objeto {\b KanbanTask}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i other} \cell }{Objeto {\b KanbanTask} a ser copiado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85       : Task(other), id(other.id) \{\}\par
}
}
{\xe \v ~KanbanTask\:KanbanTask}
{\xe \v KanbanTask\:~KanbanTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
KanbanTask::~KanbanTask ()}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor padr\'E3o de {\b KanbanTask}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v getDescricao\:KanbanTask}
{\xe \v KanbanTask\:getDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::getDescricao () const{\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a descri\'E7\'E3o da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Descri\'E7\'E3o da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 \{ {\cf19 return} descricao; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_aef987b238c10ab8427885a65f8ec23bc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getId\:KanbanTask}
{\xe \v KanbanTask\:getId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int KanbanTask::getId () const}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o ID da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Identifica\'E7\'E3o \'FAnica da tarefa no Kanban. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66 \{ {\cf19 return} id; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanTask_ad80bc5d5fd2e7866dc41d30452f04fe6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPrioridade\:KanbanTask}
{\xe \v KanbanTask\:getPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Task::getPrioridade () const{\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a prioridade da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Prioridade da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32 \{ {\cf19 return} prioridade; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a0da052621e550d4a26b0c3a276097cae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getTitulo\:KanbanTask}
{\xe \v KanbanTask\:getTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::getTitulo () const{\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o t\'EDtulo da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
T\'EDtulo da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30 \{ {\cf19 return} titulo; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a2322021265eee6cc17865d0a832d712f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getTituloId\:KanbanTask}
{\xe \v KanbanTask\:getTituloId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string KanbanTask::getTituloId () const}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que retorna o t\'EDtulo da tarefa junto com o ID. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
T\'EDtulo da tarefa concatenado com o ID. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70 \{\par
71   std::stringstream ss;\par
72   ss << id;\par
73   {\cf19 if} (prioridade == 1)\par
74   \{\par
75     {\cf19 return} ANSI_GREEN + titulo + {\cf22 " (ID:"} + ss.str() + {\cf22 ")"} + ANSI_RESET;\par
76   \}\par
77   {\cf19 else} {\cf19 if} (prioridade == 2)\par
78   \{\par
79     {\cf19 return} ANSI_YELLOW + titulo + {\cf22 " (ID:"} + ss.str() + {\cf22 ")"} + ANSI_RESET;\par
80   \}\par
81   {\cf19 else}\par
82   \{\par
83     {\cf19 return} ANSI_RED + titulo + {\cf22 " (ID:"} + ss.str() + {\cf22 ")"} + ANSI_RESET;\par
84   \}\par
85 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanTask_af316e839e8504c7e956f7ee6196b8629_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getVencimento\:KanbanTask}
{\xe \v KanbanTask\:getVencimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::getVencimento () const{\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a data de vencimento da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Data de vencimento da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33 \{ {\cf19 return} dataVencimento; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a0fec1429f2e820fd564f9f13f0aec2e3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator==\:KanbanTask}
{\xe \v KanbanTask\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool KanbanTask::operator== (const {\b KanbanTask} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga do operador de compara\'E7\'E3o "==" para verificar igualdade entre duas KanbanTasks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i other} \cell }{{\b KanbanTask} a ser comparada. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se as tasks forem iguais, false caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 60 \{\par
61   {\cf19 return} this->{\cf18 id} == other.id && this->titulo == other.titulo && this->descricao == other.descricao;\par
62 \}\par
}
}
{\xe \v printTask\:KanbanTask}
{\xe \v KanbanTask\:printTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanTask::printTask () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementa\'E7\'E3o do m\'E9todo virtual puro {\b printTask()} da classe base {\b Task} para imprimir os detalhes da tarefa, adicionando o atributo ID. }}\par
{
Implementa {\b Task} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 \{\par
32   std::cout << {\cf22 "ID: "} << {\cf18 id} << std::endl;\par
33   std::cout << {\cf22 "T\'EDtulo: "} << titulo << std::endl;\par
34   std::cout << {\cf22 "Descri\'E7\'E3o: "} << descricao << std::endl;\par
35   std::cout << {\cf22 "Prioridade: "};\par
36   {\cf20 /*Imprime uma cor de acordo com a prioridade}\par
37 {\cf20       Prioridade baixa: VERDE}\par
38 {\cf20       Prioridade m\'E9dia: AMARELO}\par
39 {\cf20       Prioridade alta: VERMELHO */}\par
40   {\cf19 switch} (prioridade)\par
41   \{\par
42   {\cf19 case} 1:\par
43     std::cout << ANSI_GREEN << {\cf22 "1 - Baixa"} << ANSI_RESET << std::endl;\par
44     {\cf19 break};\par
45   {\cf19 case} 2:\par
46     std::cout << ANSI_YELLOW << {\cf22 "2 - M\'E9dia"} << ANSI_RESET << std::endl;\par
47     {\cf19 break};\par
48 \par
49   {\cf19 case} 3:\par
50     std::cout << ANSI_RED << {\cf22 "3 - Alta"} << ANSI_RESET << std::endl;\par
51     {\cf19 break};\par
52   {\cf19 default}:\par
53     {\cf19 break};\par
54   \}\par
55   std::cout << {\cf22 "Data de vencimento: "} << dataVencimento << std::endl;\par
56 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanTask_af8db51050f3e27975c3bd6631ce3971e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setDescricao\:KanbanTask}
{\xe \v KanbanTask\:setDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setDescricao (std::string  {\i descricao}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a descri\'E7\'E3o da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37 \{ this->descricao = descricao; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_ae406177534ada5f25a57f87704f8b604_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setId\:KanbanTask}
{\xe \v KanbanTask\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void KanbanTask::setId (int  {\i id})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define o ID da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{Identifica\'E7\'E3o \'FAnica da tarefa no Kanban. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65 \{ this->{\cf18 id} = id; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classKanbanTask_a3176329dd62fafcd3a308dbc96a3ce54_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPrioridade\:KanbanTask}
{\xe \v KanbanTask\:setPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setPrioridade (int  {\i prioridade}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a prioridade da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{Prioridade da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38 \{ this->prioridade = prioridade; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_aecc701a21bd98779172a1376dc03d096_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setTitulo\:KanbanTask}
{\xe \v KanbanTask\:setTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setTitulo (std::string  {\i titulo}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define o t\'EDtulo da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36 \{ this->titulo = titulo; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a47f5d2599626b2dec1bc27be18adad09_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setVencimento\:KanbanTask}
{\xe \v KanbanTask\:setVencimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setVencimento (std::string  {\i dataVencimento}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a data de vencimento da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataVencimento} \cell }{Data de vencimento da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39 \{ this->dataVencimento = dataVencimento; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a5c248a9dae8386b36d896d607907e223_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigas e Fun\'E7\'F5es Relacionadas\par
\pard\plain 
{\xe \v operator<<\:KanbanTask}
{\xe \v KanbanTask\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream& operator<< (std::ostream &  {\i os}, const {\b KanbanTask} &  {\i task}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga do operador de inser\'E7\'E3o "<<" para imprimir os detalhes da {\b KanbanTask} em um fluxo de sa\'EDda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i os} \cell }{Fluxo de sa\'EDda. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{{\b KanbanTask} a ser impressa. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Fluxo de sa\'EDda com os detalhes da {\b KanbanTask} impressos. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129                                                                           \{\par
130         os << task.id << {\cf22 " "} << task.titulo << {\cf22 " "} << task.descricao << {\cf22 " "} << task.prioridade << {\cf22 " "} << task.dataVencimento;\par
131         {\cf19 return} os;\par
132     \}\par
}
}
{\xe \v operator>>\:KanbanTask}
{\xe \v KanbanTask\:operator>>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::istream& operator>> (std::istream &  {\i is}, {\b KanbanTask} &  {\i task}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga do operador de extra\'E7\'E3o ">>" para ler os detalhes da {\b KanbanTask} de um fluxo de entrada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i is} \cell }{Fluxo de entrada. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{{\b KanbanTask} a ser preenchida com os detalhes lidos. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Fluxo de entrada ap\'F3s a leitura dos detalhes da {\b KanbanTask}. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                                                                     \{\par
142         is >> task.id >> task.titulo >> task.descricao >> task.prioridade >> task.dataVencimento;\par
143         {\cf19 return} is;\par
144     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v dataVencimento\:KanbanTask}
{\xe \v KanbanTask\:dataVencimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::dataVencimento{\f2 [protected]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data de vencimento da tarefa \par
}}
{\xe \v descricao\:KanbanTask}
{\xe \v KanbanTask\:descricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::descricao{\f2 [protected]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descri\'E7\'E3o da tarefa \par
}}
{\xe \v id\:KanbanTask}
{\xe \v KanbanTask\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int KanbanTask::id{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identifica\'E7\'E3o \'FAnica da tarefa \par
}}
{\xe \v prioridade\:KanbanTask}
{\xe \v KanbanTask\:prioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Task::prioridade{\f2 [protected]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prioridade da tarefa \par
}}
{\xe \v titulo\:KanbanTask}
{\xe \v KanbanTask\:titulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::titulo{\f2 [protected]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
T\'EDtulo da tarefa \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b kanbantask.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/src/{\b kanbantask.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe ListaDuplamenteEncadeada< T >\par \pard\plain 
{\tc\tcl2 \v ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma lista duplamente encadeada. }}\par
{
{\f2 #include <estruturas_tads.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaDuplamenteEncadeada} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b ListaDuplamenteEncadeada}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ListaDuplamenteEncadeada} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b ListaDuplamenteEncadeada}. Remove todos os elementos da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No}< T > * {\b getHead} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o ponteiro para o primeiro elemento da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b get} (int index) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo para obter o elemento em um \'EDndice espec\'EDfico da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pushFront} (T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona um novo elemento no in\'EDcio da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pushBack} (T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona um novo elemento no final da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeFront} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove o primeiro elemento da lista. Se a lista estiver vazia, uma mensagem de erro \'E9 exibida. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeBack} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove o \'FAltimo elemento da lista. Se a lista estiver vazia, uma mensagem de erro \'E9 exibida. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se a lista est\'E1 vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que imprime os elementos da lista. Se a lista estiver vazia, uma mensagem informando isso \'E9 exibida. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getSize} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que retorna o tamanho da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeValue} (const T &value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove um valor espec\'EDfico da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove todos os elementos da lista. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Privados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No}< T > * {\b head}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No}< T > * {\b tail}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class ListaDuplamenteEncadeada< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma lista duplamente encadeada. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A classe {\b ListaDuplamenteEncadeada} possui um ponteiro para o primeiro elemento (head) e um ponteiro para o \'FAltimo elemento (tail) da lista. Ela permite adicionar elementos no in\'EDcio (pushFront) e no final (pushBack), remover o primeiro elemento (removeFront) e o \'FAltimo elemento (removeBack), verificar se a lista est\'E1 vazia (isEmpty), imprimir os elementos da lista (print), obter o tamanho da lista (getSize), remover um valor espec\'EDfico (removeValue) e limpar toda a lista (clear). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros do <em>template</em>\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{O tipo de dado armazenado na lista. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ListaDuplamenteEncadeada\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:ListaDuplamenteEncadeada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b ListaDuplamenteEncadeada}< T >::{\b ListaDuplamenteEncadeada} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b ListaDuplamenteEncadeada}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58 : head(NULL), tail(NULL)\{\}\par
}
}
{\xe \v ~ListaDuplamenteEncadeada\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:~ListaDuplamenteEncadeada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b ListaDuplamenteEncadeada}< T >::~{\b ListaDuplamenteEncadeada} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b ListaDuplamenteEncadeada}. Remove todos os elementos da lista. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                \{\par
66       clear();\par
67     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v clear\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaDuplamenteEncadeada}< T >::clear (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove todos os elementos da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove todos os elementos da lista, liberando a mem\'F3ria alocada por cada n\'F3. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 285                 \{\par
286       No<T>* current = head;\par
287 \par
288       {\cf19 while}(current != NULL) \{\par
289         No<T>* nextNo = current->next;\par
290         {\cf17 delete} current;\par
291         current = nextNo;\par
292       \}\par
293 \par
294       head = tail = NULL;\par
295     \}\par
}
}
{\xe \v get\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T& {\b ListaDuplamenteEncadeada}< T >::get (int  {\i index}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo para obter o elemento em um \'EDndice espec\'EDfico da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{O \'EDndice do elemento desejado. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uma refer\'EAncia para o elemento do \'EDndice especificado. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exce\'E7\'F5es\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::out_of_range} \cell }{caso o \'EDndice esteja fora dos limites da lista. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                             \{\par
86         {\cf19 if} (index < 0 || index >= getSize()) \{\par
87             {\cf19 throw} std::out_of_range({\cf22 "Index n\'E3o encontrado."});\par
88         \}\par
89 \par
90         No<T>* current = head;\par
91         {\cf18 int} currentIndex = 0;\par
92 \par
93         {\cf19 while} (current != NULL) \{\par
94             {\cf19 if} (currentIndex == index) \{\par
95                 {\cf19 return} current->valor;\par
96             \}\par
97             current = current->next;\par
98             currentIndex++;\par
99         \}\par
100 \par
101         {\cf19 throw} std::out_of_range({\cf22 "Index n\'E3o encontrado."});\par
102     \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListaDuplamenteEncadeada_ab31872ac12372cfca22051c24cdf066f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getHead\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:getHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}<T>* {\b ListaDuplamenteEncadeada}< T >::getHead () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o ponteiro para o primeiro elemento da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O ponteiro para o primeiro elemento da lista. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                            \{\par
75       {\cf19 return} head;\par
76     \}\par
}
}
{\xe \v getSize\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:getSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > int {\b ListaDuplamenteEncadeada}< T >::getSize () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que retorna o tamanho da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O tamanho da lista. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 218                        \{\par
219       {\cf18 int} size = 0;\par
220       No<T>* current = head;\par
221 \par
222       {\cf19 while}(current != NULL) \{\par
223         size++;\par
224         current = current->next;\par
225       \}\par
226 \par
227       {\cf19 return} size;\par
228     \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListaDuplamenteEncadeada_ae2494348caf48de3d5b164c71f2dae73_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isEmpty\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > bool {\b ListaDuplamenteEncadeada}< T >::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que verifica se a lista est\'E1 vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se a lista estiver vazia, false caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 186                          \{\par
187       {\cf19 if}(head == NULL)\{\par
188         {\cf19 return} {\cf17 true};\par
189       \}{\cf19 else}\{\par
190         {\cf19 return} {\cf17 false};\par
191       \}\par
192     \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListaDuplamenteEncadeada_a33bdec8304da84a90385565208807075_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaDuplamenteEncadeada}< T >::print () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que imprime os elementos da lista. Se a lista estiver vazia, uma mensagem informando isso \'E9 exibida. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 199                       \{\par
200       {\cf19 if}(isEmpty())\{\par
201         std::cout << {\cf22 "A lista est\'E1 vazia."} << std::endl;\par
202         {\cf19 return};\par
203       \}\par
204 \par
205       No<T>* current = head;\par
206       {\cf19 while} (current != NULL) \{\par
207         std::cout << current->valor << {\cf22 " "};\par
208         current = current->next;\par
209       \}\par
210       std::cout << std::endl;\par
211     \}\par
}
}
{\xe \v pushBack\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:pushBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaDuplamenteEncadeada}< T >::pushBack (T  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona um novo elemento no final da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{O valor do novo elemento a ser adicionado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                           \{\par
126       No<T>* newNo = {\cf17 new} No<T>(value);\par
127         {\cf19 if}(isEmpty())\{\par
128           head = tail = newNo;\par
129         \}{\cf19 else}\{\par
130           tail->next = newNo;\par
131           newNo->prev = tail;\par
132           tail = newNo;\par
133         \}\par
134     \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListaDuplamenteEncadeada_a0706e7da8b9025cb6a98e12ef2e35f42_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pushFront\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:pushFront}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaDuplamenteEncadeada}< T >::pushFront (T  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que adiciona um novo elemento no in\'EDcio da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{O valor do novo elemento a ser adicionado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 109                            \{\par
110       No<T>* newNo = {\cf17 new} No<T>(value);\par
111         {\cf19 if} (isEmpty())\{\par
112           head = tail = newNo;\par
113         \}{\cf19 else}\{\par
114           newNo->next = head;\par
115           head->prev = newNo;\par
116           head = newNo;\par
117         \}\par
118     \}  \par
}
}
{\xe \v removeBack\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:removeBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaDuplamenteEncadeada}< T >::removeBack (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove o \'FAltimo elemento da lista. Se a lista estiver vazia, uma mensagem de erro \'E9 exibida. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 163                       \{\par
164       {\cf19 if}(isEmpty())\{\par
165         std::cout << {\cf22 "A lista est\'E1 vazia."} << std::endl;\par
166         {\cf19 return};\par
167       \}\par
168 \par
169       No<T>* temp = tail;\par
170       tail = tail->prev;\par
171 \par
172       {\cf19 if}(tail == NULL)\{ {\cf20 //Caso s\'F3 tenha um elemento}\par
173         head = NULL;\par
174       \}{\cf19 else}\{\par
175         tail->next = NULL;\par
176       \}\par
177 \par
178       {\cf17 delete} temp;\par
179     \}\par
}
}
{\xe \v removeFront\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:removeFront}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b ListaDuplamenteEncadeada}< T >::removeFront (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove o primeiro elemento da lista. Se a lista estiver vazia, uma mensagem de erro \'E9 exibida. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                        \{\par
142       {\cf19 if}(isEmpty())\{\par
143         std::cout << {\cf22 "A lista est\'E1 vazia."} << std::endl;\par
144         {\cf19 return};\par
145       \}\par
146 \par
147       No<T>* temp = head;\par
148       head = head->next;\par
149 \par
150       {\cf19 if} (head == NULL)\{ {\cf20 //Caso s\'F3 tenha um elemento}\par
151         tail = NULL;\par
152       \}{\cf19 else}\{\par
153         head->prev = NULL;\par
154       \}\par
155       {\cf17 delete} temp;\par
156     \}\par
}
}
{\xe \v removeValue\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:removeValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > bool {\b ListaDuplamenteEncadeada}< T >::removeValue (const T &  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo que remove um valor espec\'EDfico da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{O valor a ser removido. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se o valor foi removido com sucesso, false caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 236                                     \{\par
237       {\cf19 if}(isEmpty())\{\par
238         {\cf19 return} {\cf17 false};\par
239       \}\par
240 \par
241       No<T>* current = head;\par
242 \par
243       {\cf20 // Caso o valor a ser removido esteja na cabe\'E7a da lista}\par
244       {\cf19 if}(current->valor == value)\{\par
245         head = current->next;\par
246 \par
247         {\cf19 if}(head != NULL)\{\par
248           head->prev = NULL;\par
249         \}{\cf19 else}\{\par
250           tail = NULL;\par
251         \}\par
252 \par
253         {\cf17 delete} current;\par
254         {\cf19 return} {\cf17 true};\par
255       \}\par
256 \par
257       {\cf19 while}(current != NULL) \{\par
258         {\cf19 if}(current->valor == value) \{\par
259           No<T>* prevNo = current->prev;\par
260           No<T>* nextNo = current->next;\par
261 \par
262           {\cf19 if}(prevNo != NULL) \{\par
263             prevNo->next = nextNo;\par
264           \}\par
265 \par
266           {\cf19 if}(nextNo != NULL) \{\par
267             nextNo->prev = prevNo;\par
268           \}{\cf19 else}\{\par
269             tail = prevNo;\par
270           \}\par
271 \par
272           {\cf17 delete} current;\par
273           {\cf19 return} {\cf17 true};\par
274         \}\par
275         current = current->next;\par
276       \}\par
277       {\cf19 return} {\cf17 false};\par
278     \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classListaDuplamenteEncadeada_abeea4d2e76fca397e7ad5048d9ce3d65_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v head\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}<T>* {\b ListaDuplamenteEncadeada}< T >::head{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tail\:ListaDuplamenteEncadeada< T >}
{\xe \v ListaDuplamenteEncadeada< T >\:tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}<T>* {\b ListaDuplamenteEncadeada}< T >::tail{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b estruturas_tads.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Fila< T >::No\par \pard\plain 
{\tc\tcl2 \v Fila< T >::No}
{\xe \v Fila< T >::No}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da fila. }}\par
Diagrama de colabora\'E7\'E3o para Fila< T >::No:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structFila_1_1No__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} (T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b No}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b valor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
struct Fila< T >::No\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da fila. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v No\:Fila< T >::No}
{\xe \v Fila< T >::No\:No}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Fila}< T >::No::No (T  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b No}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{O valor a ser armazenado no n\'F3. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 427 : valor(value), next(NULL)\{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v next\:Fila< T >::No}
{\xe \v Fila< T >::No\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}* {\b Fila}< T >::No::next}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valor\:Fila< T >::No}
{\xe \v Fila< T >::No\:valor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T {\b Fila}< T >::No::valor}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b estruturas_tads.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe No< T >\par \pard\plain 
{\tc\tcl2 \v No< T >}
{\xe \v No< T >}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da lista duplamente encadeada. }}\par
{
{\f2 #include <estruturas_tads.hpp>}}\par
Diagrama de colabora\'E7\'E3o para No< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classNo__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} (T {\b valor})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b No}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~No} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b No}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b valor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} * {\b prev}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class No< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da lista duplamente encadeada. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A classe {\b No} possui um valor do tipo gen\'E9rico T, e ponteiros para o n\'F3 anterior (prev) e pr\'F3ximo (next). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros do <em>template</em>\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{O tipo de dado armazenado no n\'F3. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v No\:No< T >}
{\xe \v No< T >\:No}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}< T >::{\b No} (T  {\i valor}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b No}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i valor} \cell }{O valor a ser armazenado no n\'F3. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 : valor(valor), prev(NULL), next(NULL)\{\}\par
}
}
{\xe \v ~No\:No< T >}
{\xe \v No< T >\:~No}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}< T >::~{\b No} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b No}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v next\:No< T >}
{\xe \v No< T >\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}* {\b No}< T >::next}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v prev\:No< T >}
{\xe \v No< T >\:prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}* {\b No}< T >::prev}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valor\:No< T >}
{\xe \v No< T >\:valor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T {\b No}< T >::valor}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b estruturas_tads.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Pilha< T >::No\par \pard\plain 
{\tc\tcl2 \v Pilha< T >::No}
{\xe \v Pilha< T >::No}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da pilha. }}\par
Diagrama de colabora\'E7\'E3o para Pilha< T >::No:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structPilha_1_1No__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} (T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b No}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b valor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
struct Pilha< T >::No\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da pilha. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v No\:Pilha< T >::No}
{\xe \v Pilha< T >::No\:No}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Pilha}< T >::No::No (T  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b No}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{O valor a ser armazenado no n\'F3. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 324 : valor(value), next(NULL)\{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v next\:Pilha< T >::No}
{\xe \v Pilha< T >::No\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}* {\b Pilha}< T >::No::next}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valor\:Pilha< T >::No}
{\xe \v Pilha< T >::No\:valor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T {\b Pilha}< T >::No::valor}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b estruturas_tads.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do <em>Template</em> da Classe Pilha< T >\par \pard\plain 
{\tc\tcl2 \v Pilha< T >}
{\xe \v Pilha< T >}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma pilha utilizando a estrutura de lista encadeada. }}\par
{
{\f2 #include <estruturas_tads.hpp>}}\par
Diagrama de colabora\'E7\'E3o para Pilha< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPilha__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b No}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da pilha. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Pilha} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b Pilha}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Pilha} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b Pilha}. Remove todos os elementos da pilha. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a pilha est\'E1 vazia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b push} (T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um elemento no topo da pilha. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pop} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove o elemento do topo da pilha. Se a pilha estiver vazia, uma mensagem de erro \'E9 exibida. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b peek} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o elemento do topo da pilha. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Privados\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} * {\b top}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class Pilha< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma pilha utilizando a estrutura de lista encadeada. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros do <em>template</em>\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{O tipo de dado armazenado na pilha. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Pilha\:Pilha< T >}
{\xe \v Pilha< T >\:Pilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Pilha}< T >::{\b Pilha} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b Pilha}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 333 : top(NULL)\{\}\par
}
}
{\xe \v ~Pilha\:Pilha< T >}
{\xe \v Pilha< T >\:~Pilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Pilha}< T >::~{\b Pilha} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b Pilha}. Remove todos os elementos da pilha. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 340             \{\par
341       {\cf19 while}(!isEmpty()) \{\par
342         pop();\par
343       \}\par
344     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v isEmpty\:Pilha< T >}
{\xe \v Pilha< T >\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > bool {\b Pilha}< T >::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a pilha est\'E1 vazia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se a pilha estiver vazia, false caso contr\'E1rio. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 351                          \{\par
352       {\cf19 if}(top == NULL)\{\par
353         {\cf19 return} {\cf17 true};\par
354       \}{\cf19 else}\{\par
355         {\cf19 return} {\cf17 false};\par
356       \}\par
357     \}\par
}
}
{\xe \v peek\:Pilha< T >}
{\xe \v Pilha< T >\:peek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T& {\b Pilha}< T >::peek (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retorna o elemento do topo da pilha. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uma refer\'EAncia para o elemento do topo. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exce\'E7\'F5es\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{Se a pilha estiver vazia. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 392              \{\par
393         {\cf19 if} (isEmpty()) \{\par
394             {\cf19 throw} std::runtime_error({\cf22 "A pilha est\'E1 vazia."});\par
395         \}\par
396         {\cf19 return} top->valor;\par
397     \}\par
}
}
{\xe \v pop\:Pilha< T >}
{\xe \v Pilha< T >\:pop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b Pilha}< T >::pop (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove o elemento do topo da pilha. Se a pilha estiver vazia, uma mensagem de erro \'E9 exibida. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 375                \{\par
376       {\cf19 if}(isEmpty())\{\par
377         std::cout << {\cf22 "A pilha est\'E1 vazia."} << std::endl;\par
378         {\cf19 return};\par
379       \}\par
380       No* temp = top;\par
381       top = top->next;\par
382       {\cf17 delete} temp;\par
383     \}\par
}
}
{\xe \v push\:Pilha< T >}
{\xe \v Pilha< T >\:push}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b Pilha}< T >::push (T  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um elemento no topo da pilha. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{O valor do elemento a ser adicionado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 364                        \{\par
365         No* newNo = {\cf17 new} No(value);\par
366         newNo->next = top;\par
367         top = newNo;\par
368     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v top\:Pilha< T >}
{\xe \v Pilha< T >\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b No}* {\b Pilha}< T >::top{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b estruturas_tads.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Task\par \pard\plain 
{\tc\tcl2 \v Task}
{\xe \v Task}
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe abstrata {\b Task} representa uma tarefa. }}\par
{
{\f2 #include <task.h>}}\par
Diagrama de hierarquia para Task:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Task} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor padr\'E3o de {\b Task}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Task} (const std::string &{\b titulo}, const std::string &{\b descricao}, int {\b prioridade}, const std::string &{\b dataVencimento})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com os atributos especificados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Task} (const std::string &{\b titulo}, const std::string &{\b descricao}, int {\b prioridade})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com os atributos especificados, sem a data de vencimento. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Task} (const std::string &{\b titulo}, const std::string &{\b descricao})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com os atributos especificados, sem a prioridade e a data de vencimento. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Task} (const std::string &{\b titulo})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com o t\'EDtulo especificado, sem a descri\'E7\'E3o, a prioridade e a data de vencimento. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Task} (const {\b Task} &other)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor de c\'F3pia que cria um novo objeto {\b Task} com os mesmos atributos de outro objeto {\b Task}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Task} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor virtual que permite a destrui\'E7\'E3o adequada dos objetos derivados. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTitulo} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o t\'EDtulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getDescricao} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a descri\'E7\'E3o da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPrioridade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getVencimento} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a data de vencimento da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string {\b titulo})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define o t\'EDtulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDescricao} (std::string {\b descricao})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a descri\'E7\'E3o da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPrioridade} (int {\b prioridade})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVencimento} (std::string {\b dataVencimento})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a data de vencimento da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b printTask} () const =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo virtual puro que deve ser implementado pelas classes derivadas para imprimir os detalhes da tarefa. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b titulo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b descricao}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b prioridade}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b dataVencimento}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe abstrata {\b Task} representa uma tarefa. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta classe representa uma tarefa gen\'E9rica. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Task\:Task}
{\xe \v Task\:Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task::Task ()}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor padr\'E3o de {\b Task}. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\}\par
}
}
{\xe \v Task\:Task}
{\xe \v Task\:Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task::Task (const std::string &  {\i titulo}, const std::string &  {\i descricao}, int  {\i prioridade}, const std::string &  {\i dataVencimento})}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com os atributos especificados. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{Prioridade da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataVencimento} \cell }{Data de vencimento da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18     : titulo(titulo), descricao(descricao), prioridade(prioridade), dataVencimento(dataVencimento) \{\}\par
}
}
{\xe \v Task\:Task}
{\xe \v Task\:Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task::Task (const std::string &  {\i titulo}, const std::string &  {\i descricao}, int  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com os atributos especificados, sem a data de vencimento. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{Prioridade da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21     : titulo(titulo), descricao(descricao), prioridade(prioridade) \{\}\par
}
}
{\xe \v Task\:Task}
{\xe \v Task\:Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task::Task (const std::string &  {\i titulo}, const std::string &  {\i descricao})}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com os atributos especificados, sem a prioridade e a data de vencimento. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24     : titulo(titulo), descricao(descricao) \{\}\par
}
}
{\xe \v Task\:Task}
{\xe \v Task\:Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task::Task (const std::string &  {\i titulo})}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor que cria um objeto {\b Task} com o t\'EDtulo especificado, sem a descri\'E7\'E3o, a prioridade e a data de vencimento. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27     : titulo(titulo) \{\}\par
}
}
{\xe \v Task\:Task}
{\xe \v Task\:Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task::Task (const {\b Task} &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor de c\'F3pia que cria um novo objeto {\b Task} com os mesmos atributos de outro objeto {\b Task}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i other} \cell }{Objeto {\b Task} a ser copiado. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76         : titulo(other.titulo), descricao(other.descricao), prioridade(other.prioridade), dataVencimento(other.dataVencimento)\{\}\par
}
}
{\xe \v ~Task\:Task}
{\xe \v Task\:~Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Task::~Task (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor virtual que permite a destrui\'E7\'E3o adequada dos objetos derivados. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v getDescricao\:Task}
{\xe \v Task\:getDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::getDescricao () const}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a descri\'E7\'E3o da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Descri\'E7\'E3o da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 \{ {\cf19 return} descricao; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_aef987b238c10ab8427885a65f8ec23bc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPrioridade\:Task}
{\xe \v Task\:getPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Task::getPrioridade () const}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a prioridade da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Prioridade da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32 \{ {\cf19 return} prioridade; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a0da052621e550d4a26b0c3a276097cae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getTitulo\:Task}
{\xe \v Task\:getTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::getTitulo () const}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna o t\'EDtulo da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
T\'EDtulo da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30 \{ {\cf19 return} titulo; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a2322021265eee6cc17865d0a832d712f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getVencimento\:Task}
{\xe \v Task\:getVencimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::getVencimento () const}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo getter que retorna a data de vencimento da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Data de vencimento da tarefa. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33 \{ {\cf19 return} dataVencimento; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a0fec1429f2e820fd564f9f13f0aec2e3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printTask\:Task}
{\xe \v Task\:printTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Task::printTask () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo virtual puro que deve ser implementado pelas classes derivadas para imprimir os detalhes da tarefa. }}\par
{
Implementado por {\b KanbanTask} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setDescricao\:Task}
{\xe \v Task\:setDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setDescricao (std::string  {\i descricao})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a descri\'E7\'E3o da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i descricao} \cell }{Descri\'E7\'E3o da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37 \{ this->descricao = descricao; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_ae406177534ada5f25a57f87704f8b604_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPrioridade\:Task}
{\xe \v Task\:setPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setPrioridade (int  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a prioridade da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{Prioridade da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38 \{ this->prioridade = prioridade; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_aecc701a21bd98779172a1376dc03d096_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setTitulo\:Task}
{\xe \v Task\:setTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setTitulo (std::string  {\i titulo})}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define o t\'EDtulo da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i titulo} \cell }{T\'EDtulo da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36 \{ this->titulo = titulo; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a47f5d2599626b2dec1bc27be18adad09_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setVencimento\:Task}
{\xe \v Task\:setVencimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Task::setVencimento (std::string  {\i dataVencimento})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo setter que define a data de vencimento da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dataVencimento} \cell }{Data de vencimento da tarefa. \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39 \{ this->dataVencimento = dataVencimento; \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTask_a5c248a9dae8386b36d896d607907e223_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v dataVencimento\:Task}
{\xe \v Task\:dataVencimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::dataVencimento{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data de vencimento da tarefa \par
}}
{\xe \v descricao\:Task}
{\xe \v Task\:descricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::descricao{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descri\'E7\'E3o da tarefa \par
}}
{\xe \v prioridade\:Task}
{\xe \v Task\:prioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Task::prioridade{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prioridade da tarefa \par
}}
{\xe \v titulo\:Task}
{\xe \v Task\:titulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Task::titulo{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
T\'EDtulo da tarefa \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/include/{\b task.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
/home/isa/\'C1rea de Trabalho/Kanban/src/{\b task.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/data/README.md\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/data/README.md}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/data/README.md}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/README.md\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/README.md}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/README.md}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/include/estruturas_tads.hpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/include/estruturas_tads.hpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/include/estruturas_tads.hpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementa\'E7\'E3o de templates dos Tipos Abstratos de Dados: Lista Duplamente Encadeada, {\b Pilha} e {\b Fila}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para estruturas_tads.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "estruturas__tads_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Este grafo mostra quais arquivos est\'E3o direta ou indiretamente relacionados com esse arquivo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "estruturas__tads_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b No< T >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da lista duplamente encadeada. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaDuplamenteEncadeada< T >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma lista duplamente encadeada. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Pilha< T >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma pilha utilizando a estrutura de lista encadeada. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Pilha< T >::No}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da pilha. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Fila< T >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa uma fila utilizando a estrutura de lista encadeada. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Fila< T >::No}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que representa um n\'F3 da fila. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementa\'E7\'E3o de templates dos Tipos Abstratos de Dados: Lista Duplamente Encadeada, {\b Pilha} e {\b Fila}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/include/functions.h\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/include/functions.h}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/include/functions.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'F5es desenvolvidas a fim de modularizar a fun\'E7\'E3o Main, em sua maioria se tratam de intera\'E7\'F5es com o usu\'E1rio. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <dirent.h>}\par
{\f2 #include "menus.h"}\par
{\f2 #include "kanbanboard.h"}\par
{\f2 #include "estruturas_tads.hpp"}\par
{\f2 #include "templates.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para functions.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Este grafo mostra quais arquivos est\'E3o direta ou indiretamente relacionados com esse arquivo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RESET}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RED}\~ "\\033[31m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_GREEN}\~ "\\033[32m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_YELLOW}\~ "\\033[33m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_BLUE}\~ "\\033[34m"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaDuplamenteEncadeada}< std::string > {\b listarArquivos} (const std::string &pasta)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que retorna uma lista dos arquivos em uma pasta. Utilizado para listar os nomes dos arquivos (.bin) salvos com informa\'E7\'F5es para preenchimento do quadro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b receiveNumColumns} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio qual n\'FAmero de colunas do Quadro Kanban que o mesmo deseja. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b receiveColumns} ({\b KanbanBoard} *kanbanBoard, int numColunas)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio os nomes das colunas do quadro Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stringMaiusculo} (std::string &texto)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que converte uma string em letras mai\'FAsculas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearTerminal} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que limpa o terminal em diferentes sistemas operacionais. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b askForValidColumn} (const {\b KanbanBoard} &kanbanBoard, int flag)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio o n\'FAmero da coluna em que se deseja realizar alguma opera\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getUserChoice} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio a escolha de uma opera\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b executarOperacao} (int choice, {\b KanbanBoard} *kanbanBoard)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o \'E9 um grande switch case utilizado para manejar as opera\'E7\'F5es no Quadro Kanban. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'F5es desenvolvidas a fim de modularizar a fun\'E7\'E3o Main, em sua maioria se tratam de intera\'E7\'F5es com o usu\'E1rio. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ANSI_BLUE\:functions.h}
{\xe \v functions.h\:ANSI_BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_BLUE\~ "\\033[34m"}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_GREEN\:functions.h}
{\xe \v functions.h\:ANSI_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_GREEN\~ "\\033[32m"}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RED\:functions.h}
{\xe \v functions.h\:ANSI_RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RED\~ "\\033[31m"}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RESET\:functions.h}
{\xe \v functions.h\:ANSI_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RESET\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_YELLOW\:functions.h}
{\xe \v functions.h\:ANSI_YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_YELLOW\~ "\\033[33m"}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v askForValidColumn\:functions.h}
{\xe \v functions.h\:askForValidColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int askForValidColumn (const {\b KanbanBoard} &  {\i kanbanBoard}, int  {\i flag})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio o n\'FAmero da coluna em que se deseja realizar alguma opera\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i kanbanBoard} \cell }{Refer\'EAncia a um objeto do tipo {\b KanbanBoard}, utilizado para obter o n\'FAmero de colunas \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i flag} \cell }{Vari\'E1vel que ser\'E1 utilizada no switch case para indicar de qual opera\'E7\'E3o a fun\'E7\'E3o vai se tratar no momento em que foi chamada\cell }
{\row }
}
Essa fun\'E7\'E3o foi amplamente utilizada durante o programa para solicitar ao usu\'E1rio uma coluna.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Inicialmente, descobre-se o n\'FAmero de colunas no objeto kanbanBoard\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utiliza-se a flag passada como par\'E2metro em um switch case para descobrir de qual opera\'E7\'E3o se trata\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
L\'EA-se o n\'FAmero da coluna digitado pelo usu\'E1rio e o atribui a uma vari\'E1vel do tipo int chamada "columnIndex". Caso o n\'FAmero digitado seja inv\'E1lido pede por um novo n\'FAmero at\'E9 que o mesmo seja v\'E1lido\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Diminui-se -1 do n\'FAmero digitado pelo usu\'E1rio pois os \'EDndices come\'E7am em 0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ind\'EDce da coluna em que deve ser realizada alguma opera\'E7\'E3o. \par
}}}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93 \{\par
94     {\cf18 int} columnIndex;\par
95     {\cf18 int} numColumns = kanbanBoard.getNumColumns();\par
96 \par
97     {\cf19 switch} (flag)\par
98     \{\par
99     {\cf19 case} 1:\par
100         std::cout << {\cf22 "Tarefa criada. Informe agora o n\'FAmero da coluna que voc\'EA deseja adicionar (1-"} << numColumns << {\cf22 "): "};\par
101         {\cf19 break};\par
102     {\cf19 case} 2:\par
103         std::cout << {\cf22 "\\nDigite o n\'FAmero da coluna de destino (1-"} << numColumns << {\cf22 "): "};\par
104         {\cf19 break};\par
105     {\cf19 case} 3:\par
106         std::cout << {\cf22 "Digite o n\'FAmero da coluna que voc\'EA deseja ordenar (ou digite -1 para sair): "};\par
107         {\cf19 break};\par
108     {\cf19 default}:\par
109         std::cout << {\cf22 "Digite o n\'FAmero da coluna (1-"} << numColumns << {\cf22 "): "};\par
110         {\cf19 break};\par
111     \}\par
112 \par
113     {\cf19 do}\par
114     \{\par
115         std::cin >> columnIndex;\par
116         {\cf19 if} (columnIndex == -1)\par
117         \{ {\cf20 //"Digite -1 para sair"}\par
118             {\cf19 return} -1;\par
119         \}\par
120         {\cf19 if} (columnIndex <= 0 || columnIndex > numColumns)\par
121         \{\par
122             std::cout << ANSI_RED << {\cf22 "|!| Coluna inv\'E1lida. Digite um n\'FAmero de coluna v\'E1lido: "} << ANSI_RESET;\par
123         \}\par
124     \} {\cf19 while} (columnIndex <= 0 || columnIndex > numColumns);\par
125 \par
126     columnIndex -= 1;\par
127     {\cf19 return} columnIndex;\par
128 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a1ea6093903cc01b2fec1e1db7f6bfe9d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a1ea6093903cc01b2fec1e1db7f6bfe9d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearTerminal\:functions.h}
{\xe \v functions.h\:clearTerminal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clearTerminal ()}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que limpa o terminal em diferentes sistemas operacionais. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o foi criada com fins est\'E9ticos e compatibilidade, para que tanto em sistemas Windows como em sistemas Linux, o terminal possa ser limpado periodicamente tornando-se mais agrad\'E1vel aos olhos do usu\'E1rio.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Para sistemas Windows, o comando "cls" \'E9 utilizado para limpar o terminal.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Para sistemas Unix (Linux, macOS, etc.), o comando "clear" \'E9 utilizado \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82 \{\par
83 {\cf21 #ifdef _WIN32 }{\cf20 // Para Windows}\par
84     system({\cf22 "cls"});\par
85 {\cf21 #else }{\cf20 // Para sistemas Unix (Linux, macOS, etc.)}\par
86     system({\cf22 "clear"});\par
87 {\cf21 #endif}\par
88 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_aad531f6562212b82c481588c13bfa284_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v executarOperacao\:functions.h}
{\xe \v functions.h\:executarOperacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void executarOperacao (int  {\i choice}, {\b KanbanBoard} *  {\i kanbanBoard})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o \'E9 um grande switch case utilizado para manejar as opera\'E7\'F5es no Quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i choice} \cell }{Vari\'E1vel utilizada como parametro para a escolha do caso no primeiro switch case. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i kanbanBoard} \cell }{Ponteiro de um objeto do tipo {\b KanbanBoard}, ser\'E1 utilizado para realizar manipula\'E7\'F5es no Quadro Kanban.\cell }
{\row }
}
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} switch case principal, realizadas 6 tipos de opera\'E7\'F5es diferentes:\par}
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Adicionar uma tarefa\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Editar uma tarefa existente Neste caso \'E9 aberto outro switch case com novas op\'E7\'F5es: A. Editar informa\'E7\'F5es de uma tarefa (Um novo switch case \'E9 aberto com os atributos edit\'E1veis: id, t\'EDtulo, descri\'E7\'E3o, prioridade, data de vencimento e "voltar") B. Mover tarefa C. Excluir tarefa D. Voltar\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Ver informa\'E7\'F5es de uma tarefa\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Ordenar tarefas por prioridade (utiliza os algoritmos de ordena\'E7\'E3o Bubble Sort e Selection Sort)\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Exibir o Quadro Kanban\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Salvar o Quadro Kanban Neste caso \'E9 aberto um novo switch case com op\'E7\'F5es de salvamento: A. Arquivo 'bin' existente B. Arquivo 'bin' novo C. Arquivo 'txt' D. Voltar\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab Sair\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
8.\tab Caso uma op\'E7\'E3o inv\'E1lida seja digitada, \'E9 solicitado uma nova op\'E7\'E3o ao usu\'E1rio at\'E9 que seja digitada uma das existentes. \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 143 \{\par
144 \par
145     {\cf20 /*Dados utilizados*/}\par
146     {\cf18 int} numColunas = kanbanBoard->getNumColumns();\par
147     {\cf18 bool} arquivoExiste;\par
148     std::ifstream arquivo;\par
149     {\cf18 int} escolha, escolha2;\par
150     {\cf18 int} id, prioridade, indexTask;\par
151     {\cf18 int} novoid, novaprioridade, colunadestino = 0;\par
152     std::string novotitulo, novadescricao, novadata;\par
153     std::string titulo, descricao, dataVencimento;\par
154     std::string nameFile, caminhoFile;\par
155     KanbanTask *taskChoice;\par
156     KanbanTask task;\par
157 \par
158 \par
159     {\cf20 // ==== SWITCH PRINCIPAL ====}\par
160     {\cf19 switch} (choice)\par
161     \{\par
162     {\cf20 // ==== CASO: ADICIONAR TAREFAS ====}\par
163     {\cf19 case} 1:\par
164 \par
165         std::cout << {\cf22 "==========="} << ANSI_GREEN << {\cf22 " Preencha os dados da tarefa "} << ANSI_RESET << {\cf22 "===========\\n"};\par
166         std::cout << {\cf22 "ID (inteiro): "};\par
167         {\cf19 do}\par
168         \{\par
169             std::cin >> id;\par
170             {\cf19 if} (kanbanBoard->existeIdDuplicado({\cf18 id}))\par
171             \{\par
172                 std::cout << ANSI_RED << {\cf22 "|!| ID j\'E1 existente. Digite um ID diferente: "} << ANSI_RESET;\par
173             \}\par
174             {\cf19 else}\par
175             \{\par
176                 task.setId({\cf18 id});\par
177             \}\par
178         \} {\cf19 while} (kanbanBoard->existeIdDuplicado({\cf18 id}));\par
179 \par
180         std::cout << {\cf22 "*=================================*"};\par
181         std::cout << {\cf22 "\\nT\'EDtulo: "};\par
182         std::cin.ignore(); {\cf20 // Limpar o buffer do teclado}\par
183         getline(std::cin, titulo);\par
184         task.setTitulo(titulo);\par
185 \par
186         std::cout << {\cf22 "*=================================*"};\par
187         std::cout << {\cf22 "\\nDescri\'E7\'E3o: "};\par
188         getline(std::cin, descricao);\par
189         task.setDescricao(descricao);\par
190 \par
191         std::cout << {\cf22 "*=================================*"};\par
192         std::cout << {\cf22 "\\n("} << ANSI_GREEN << {\cf22 "1: Baixa"} << ANSI_RESET << {\cf22 ","} << ANSI_YELLOW << {\cf22 " 2: M\'E9dia"} << ANSI_RESET << {\cf22 ","} << ANSI_RED << {\cf22 " 3: Alta"} << ANSI_RESET << {\cf22 ")"};\par
193         std::cout << {\cf22 "\\nPrioridade: "};\par
194         {\cf19 while} ({\cf17 true})\par
195         \{\par
196             std::cin >> prioridade;\par
197             {\cf19 if} (prioridade < 1 || prioridade > 3)\par
198             \{\par
199                 std::cout << ANSI_RED << {\cf22 "|!| Digite uma prioridade v\'E1lida: "} << ANSI_RESET;\par
200             \}\par
201             {\cf19 else}\par
202             \{\par
203                 task.setPrioridade(prioridade);\par
204                 {\cf19 break};\par
205             \}\par
206         \}\par
207 \par
208         std::cout << {\cf22 "*=================================*"};\par
209         std::cout << {\cf22 "\\nData de vencimento (dd/mm/aaaa): "};\par
210         std::cin.ignore(); {\cf20 // Limpar o buffer do teclado}\par
211         getline(std::cin, dataVencimento);\par
212         task.setVencimento(dataVencimento);\par
213 \par
214         clearTerminal();\par
215 \par
216         {\cf20 // Imprime todas as colunas}\par
217         {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
218         \{\par
219             kanbanBoard->printColumn(i);\par
220         \}\par
221 \par
222         {\cf20 // Pede o index da coluna para o usu\'E1rio}\par
223         colunadestino = askForValidColumn(*kanbanBoard, 1);\par
224         kanbanBoard->addTaskToColumn(colunadestino, task);\par
225         clearTerminal();\par
226 \par
227         std::cout << {\cf22 "======="} << ANSI_GREEN << {\cf22 " Tarefa adicionada na coluna "} << ANSI_RESET << {\cf22 "======= \\n"};\par
228         kanbanBoard->printColumn(colunadestino);\par
229 \par
230         {\cf19 break};\par
231 \par
232 \par
233 \par
234     {\cf20 // ==== CASO: EDITAR TAREFAS EXISTENTES ====}\par
235     {\cf19 case} 2:\par
236         {\cf19 if} (kanbanBoard->isBoardEmpty())\par
237         \{\par
238             clearTerminal();\par
239             std::cout << ANSI_RED << {\cf22 "|!| Seu quadro est\'E1 vazio, adicione uma tarefa primeiro. |!|"} << ANSI_RESET << std::endl;\par
240             {\cf19 break};\par
241         \}\par
242 \par
243         printMenuTarefa();\par
244         escolha = getUserChoice();\par
245 \par
246         {\cf19 switch} (escolha)\par
247         \{\par
248 \par
249         {\cf20 // ==== CASO: EDITAR INFORMA\'C7\'D5ES DA TAREFA ====}\par
250         {\cf19 case} 1:\par
251 \par
252             clearTerminal();\par
253             {\cf19 while} ({\cf17 true})\par
254             \{\par
255 \par
256                 kanbanBoard->printBoard();\par
257                 std::cout << {\cf22 "\\nDigite o ID da tarefa que deseja editar (ou digite -1 para sair): "};\par
258                 std::cin >> indexTask;\par
259 \par
260                 {\cf19 if} (indexTask == -1)\par
261                 \{\par
262                     clearTerminal();\par
263                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
264                               << ANSI_RESET << std::endl;\par
265                     {\cf19 break}; {\cf20 // Sai do loop}\par
266                 \}\par
267 \par
268                 {\cf20 // Localizando a tarefa solicitada}\par
269                 taskChoice = kanbanBoard->findTask(indexTask);\par
270                 {\cf19 if} (taskChoice == NULL)\par
271                 \{\par
272                     clearTerminal();\par
273                     std::cout << ANSI_RED << {\cf22 "|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|\\n"}\par
274                               << ANSI_RESET << std::endl;\par
275                 \}\par
276                 {\cf19 else}\par
277                 \{\par
278 \par
279                     clearTerminal();\par
280                     taskChoice->printTask();\par
281                     printMenuEditar();\par
282                     escolha2 = getUserChoice();\par
283 \par
284                     clearTerminal();\par
285                     taskChoice->printTask();\par
286                     {\cf19 switch} (escolha2)\par
287                     \{\par
288 \par
289                     {\cf19 case} 1: {\cf20 // ==== CASO: EDITAR ID ====}\par
290                         std::cout << {\cf22 "\\nInforme um novo ID: "};\par
291                         {\cf19 while} ({\cf17 true})\par
292                         \{\par
293                             std::cin >> novoid;\par
294                             {\cf19 if} (kanbanBoard->existeIdDuplicado(novoid))\par
295                             \{\par
296                                 std::cout << ANSI_RED << {\cf22 "|!| ID j\'E1 existente. Digite um ID diferente: "} << ANSI_RESET;\par
297                             \}\par
298                             {\cf19 else}\par
299                             \{\par
300                                 taskChoice->setId(novoid);\par
301                                 {\cf19 break};\par
302                             \}\par
303                         \}\par
304 \par
305                         clearTerminal();\par
306                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
307                         taskChoice->printTask();\par
308                         {\cf19 break};\par
309 \par
310                     {\cf19 case} 2: {\cf20 // ==== CASO: EDITAR T\'CDTULO ====}\par
311                         std::cout << {\cf22 "\\nInforme o novo t\'EDtulo: "};\par
312                         std::cin.ignore();\par
313                         getline(std::cin, novotitulo);\par
314                         taskChoice->setTitulo(novotitulo);\par
315                         clearTerminal();\par
316                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
317                         taskChoice->printTask();\par
318                         {\cf19 break};\par
319 \par
320                     {\cf19 case} 3: {\cf20 // ==== CASO: EDITAR DESCRICAO ====}\par
321                         std::cout << {\cf22 "\\nInforme a nova descri\'E7\'E3o: "};\par
322                         std::cin.ignore();\par
323                         getline(std::cin, novadescricao);\par
324                         taskChoice->setDescricao(novadescricao);\par
325                         clearTerminal();\par
326                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
327                         taskChoice->printTask();\par
328                         {\cf19 break};\par
329 \par
330                     {\cf19 case} 4: {\cf20 // ==== CASO: EDITAR PRIORIDADE ====}\par
331                         std::cout << {\cf22 "\\n("} << ANSI_GREEN << {\cf22 "1: Baixa"} << ANSI_RESET << {\cf22 ","} << ANSI_YELLOW << {\cf22 " 2: M\'E9dia"} << ANSI_RESET << {\cf22 ","} << ANSI_RED << {\cf22 " 3: Alta"} << ANSI_RESET << {\cf22 ")"};\par
332                         std::cout << {\cf22 "\\nInforme a nova prioridade: "};\par
333                         {\cf19 while} ({\cf17 true})\par
334                         \{\par
335                             std::cin >> novaprioridade;\par
336                             {\cf19 if} (novaprioridade < 1 || novaprioridade > 3)\par
337                             \{\par
338                                 std::cout << ANSI_RED << {\cf22 "|!| Digite uma prioridade v\'E1lida: "} << ANSI_RESET;\par
339                             \}\par
340                             {\cf19 else}\par
341                             \{\par
342                                 taskChoice->setPrioridade(novaprioridade);\par
343                                 {\cf19 break};\par
344                             \}\par
345                         \}\par
346                         clearTerminal();\par
347                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
348                         taskChoice->printTask();\par
349                         {\cf19 break};\par
350 \par
351                     {\cf19 case} 5: {\cf20 // ==== CASO: EDITAR DATA DE VENCIMENTO ====}\par
352                         std::cout << {\cf22 "\\nInforme a nova data de vencimento: "};\par
353                         std::cin >> novadata;\par
354                         taskChoice->setVencimento(novadata);\par
355                         clearTerminal();\par
356                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
357                         taskChoice->printTask();\par
358                         {\cf19 break};\par
359 \par
360                     {\cf19 case} 6: {\cf20 // ==== CASO: VOLTAR ====}\par
361                         clearTerminal();\par
362                         {\cf19 break};\par
363                     {\cf19 default}:\par
364                         std::cout << ANSI_RED << {\cf22 "|!| Informe uma op\'E7\'E3o v\'E1lida. |!|"} << ANSI_RESET << std::endl;\par
365                         {\cf19 break};\par
366                     \}\par
367                 \}\par
368             \}\par
369             {\cf19 break};\par
370 \par
371         {\cf20 // ==== CASO: MOVER TAREFA ====}\par
372         {\cf19 case} 2:\par
373             clearTerminal();\par
374             {\cf19 while} ({\cf17 true})\par
375             \{\par
376                 indexTask = 0;\par
377 \par
378                 {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
379                 \{\par
380                     kanbanBoard->printColumn(i);\par
381                 \}\par
382 \par
383                 std::cout << std::endl\par
384                           << {\cf22 "Digite o ID da tarefa que deseja mover (ou digite -1 para sair): "};\par
385                 std::cin >> indexTask;\par
386 \par
387                 {\cf19 if} (indexTask == -1)\par
388                 \{\par
389                     clearTerminal();\par
390                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
391                               << ANSI_RESET << std::endl;\par
392                     {\cf19 break}; {\cf20 // Sai do loop}\par
393                 \}\par
394 \par
395                 taskChoice = kanbanBoard->findTask(indexTask);\par
396                 {\cf19 if} (taskChoice == NULL)\par
397                 \{\par
398                     clearTerminal();\par
399                     std::cout << ANSI_RED << {\cf22 "|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|\\n"}\par
400                               << ANSI_RESET << std::endl;\par
401                 \}\par
402                 {\cf19 else}\par
403                 \{\par
404 \par
405                     std::cout << ANSI_BLUE << {\cf22 "==> Tarefa escolhida: "} << taskChoice->getTituloId() << ANSI_BLUE << {\cf22 " <=="} << ANSI_RESET << std::endl;\par
406 \par
407                     {\cf20 // Pede a coluna de destino para o usu\'E1rio}\par
408                     colunadestino = askForValidColumn(*kanbanBoard, 2);\par
409 \par
410                     kanbanBoard->moveTask(indexTask, colunadestino);\par
411 \par
412                     clearTerminal();\par
413 \par
414                     std::cout << ANSI_GREEN << {\cf22 "\\nTarefa movida.\\n"}\par
415                               << ANSI_RESET;\par
416                     kanbanBoard->printBoard();\par
417                     std::cout << std::endl;\par
418                 \}\par
419             \}\par
420 \par
421             {\cf19 break};\par
422 \par
423         {\cf20 // ==== CASO: EXCLUIR TAREFA ====}\par
424         {\cf19 case} 3:\par
425 \par
426             clearTerminal();\par
427 \par
428             {\cf19 while} ({\cf17 true})\par
429             \{\par
430                 kanbanBoard->printBoard();\par
431                 std::cout << {\cf22 "\\nDigite o ID da tarefa que deseja excluir (ou digite -1 para sair): "};\par
432                 std::cin >> indexTask;\par
433 \par
434                 {\cf19 if} (indexTask == -1)\par
435                 \{\par
436                     clearTerminal();\par
437                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
438                               << ANSI_RESET << std::endl;\par
439                     {\cf19 break}; {\cf20 // Sai do loop}\par
440                 \}\par
441                 taskChoice = kanbanBoard->findTask(indexTask);\par
442 \par
443                 {\cf19 if} (taskChoice == NULL)\par
444                 \{ {\cf20 // Verifica se o ID existe}\par
445                     clearTerminal();\par
446                     std::cout << ANSI_RED << {\cf22 "\\n|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|"} << ANSI_GREEN << std::endl;\par
447                 \}\par
448                 {\cf19 else}\par
449                 \{\par
450                     kanbanBoard->removeTask(indexTask);\par
451                     clearTerminal();\par
452                     std::cout << ANSI_GREEN << {\cf22 "\\nTarefa exclu\'EDda.\\n"}\par
453                               << ANSI_RESET << std::endl;\par
454                     kanbanBoard->printBoard();\par
455                     {\cf19 break};\par
456                 \}\par
457             \}\par
458 \par
459             {\cf19 break};\par
460 \par
461         {\cf20 //==== CASO: VOLTAR ====}\par
462         {\cf19 case} 4:\par
463             clearTerminal();\par
464             {\cf19 break};\par
465         {\cf19 default}:\par
466             clearTerminal();\par
467             std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida. Por favor, escolha uma op\'E7\'E3o v\'E1lida. |!|"} << ANSI_RESET << std::endl;\par
468             {\cf19 break};\par
469         \}\par
470 \par
471         {\cf19 break};\par
472 \par
473 \par
474 \par
475     {\cf20 // ==== CASO: EXIBIR INFORMA\'C7\'D5ES DA TAREFA ====}\par
476     {\cf19 case} 3:\par
477         {\cf19 if} (kanbanBoard->isBoardEmpty())\par
478         \{\par
479             clearTerminal();\par
480             std::cout << ANSI_RED << {\cf22 "|!| Seu quadro est\'E1 vazio, adicione uma tarefa primeiro. |!|"} << ANSI_RESET << std::endl;\par
481             {\cf19 break};\par
482         \}\par
483         clearTerminal();\par
484 \par
485         {\cf19 while} ({\cf17 true})\par
486         \{\par
487             kanbanBoard->printBoard();\par
488             std::cout << {\cf22 "\\nDigite o ID da tarefa que deseja ver as informa\'E7\'F5es (ou digite -1 para sair): "};\par
489             std::cin >> indexTask;\par
490 \par
491             {\cf19 if} (indexTask == -1)\par
492             \{\par
493                 clearTerminal();\par
494                 std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
495                           << ANSI_RESET << std::endl;\par
496                 {\cf19 break}; {\cf20 // Sai do loop}\par
497             \}\par
498 \par
499             taskChoice = kanbanBoard->findTask(indexTask);\par
500 \par
501             {\cf19 if} (taskChoice == NULL)\par
502             \{ {\cf20 // Verifica se o ID existe}\par
503                 clearTerminal();\par
504                 std::cout << ANSI_RED << {\cf22 "\\n|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|"} << ANSI_RESET << std::endl;\par
505             \}\par
506             {\cf19 else}\par
507             \{\par
508                 clearTerminal();\par
509                 taskChoice->printTask();\par
510             \}\par
511         \}\par
512         {\cf19 break};\par
513 \par
514 \par
515 \par
516     {\cf20 // ==== CASO: ORDERNAR TAREFAS POR PRIORIDADE ====}\par
517     {\cf19 case} 4:\par
518         {\cf19 if} (kanbanBoard->isBoardEmpty())\par
519         \{\par
520             clearTerminal();\par
521             std::cout << ANSI_RED << {\cf22 "|!| Seu quadro est\'E1 vazio, adicione uma tarefa primeiro. |!|"} << ANSI_RESET << std::endl;\par
522             {\cf19 break};\par
523         \}\par
524 \par
525         printMenuOrdenar();\par
526         escolha = getUserChoice();\par
527         clearTerminal();\par
528 \par
529         {\cf19 switch} (escolha)\par
530         \{\par
531 \par
532         {\cf19 case} 1: {\cf20 // ==== CASO: CRESCENTE ====}\par
533             {\cf19 while} ({\cf17 true})\par
534             \{\par
535                 {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
536                 \{\par
537                     kanbanBoard->printColumn(i);\par
538                 \}\par
539                 {\cf20 // Pede a coluna para o usu\'E1rio}\par
540                 colunadestino = askForValidColumn(*kanbanBoard, 3);\par
541 \par
542                 {\cf19 if} (colunadestino == -1)\par
543                 \{\par
544                     clearTerminal();\par
545                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
546                               << ANSI_RESET << std::endl;\par
547                     {\cf19 break}; {\cf20 // Sai do loop}\par
548                 \}\par
549 \par
550                 {\cf19 if} (kanbanBoard->columnEmpty(colunadestino))\par
551                 \{\par
552                     clearTerminal();\par
553                     std::cout << ANSI_RED << {\cf22 "|!| A coluna est\'E1 vazia. N\'E3o \'E9 poss\'EDvel realizar a ordena\'E7\'E3o. |!|\\n"}\par
554                               << ANSI_RESET << std::endl;\par
555                     {\cf19 continue}; {\cf20 // Volta para o in\'EDcio do loop}\par
556                 \}\par
557 \par
558                 kanbanBoard->sortColumn(colunadestino, 1);\par
559                 clearTerminal();\par
560                 std::cout << {\cf22 "\'D3timo, a coluna "} << (colunadestino + 1) << {\cf22 " foi ordenada de forma crescente.\\n"};\par
561                 std::cout << std::endl;\par
562             \}\par
563 \par
564             {\cf19 break};\par
565 \par
566         {\cf19 case} 2: {\cf20 // ==== CASO: DECRESCENTE ====}\par
567             {\cf19 while} ({\cf17 true})\par
568             \{\par
569                 {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
570                 \{\par
571                     kanbanBoard->printColumn(i);\par
572                 \}\par
573                 {\cf20 // Pede a coluna para o usu\'E1rio}\par
574                 colunadestino = askForValidColumn(*kanbanBoard, 3);\par
575 \par
576                 {\cf19 if} (colunadestino == -1)\par
577                 \{\par
578                     clearTerminal();\par
579                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
580                               << ANSI_RESET << std::endl;\par
581                     {\cf19 break}; {\cf20 // Sai do loop}\par
582                 \}\par
583 \par
584                 {\cf19 if} (kanbanBoard->columnEmpty(colunadestino))\par
585                 \{\par
586                     clearTerminal();\par
587                     std::cout << ANSI_RED << {\cf22 "|!| A coluna est\'E1 vazia. N\'E3o \'E9 poss\'EDvel realizar a ordena\'E7\'E3o. |!|\\n"}\par
588                               << ANSI_RESET << std::endl;\par
589                     {\cf19 continue}; {\cf20 // Volta para o in\'EDcio do loop}\par
590                 \}\par
591 \par
592                 kanbanBoard->sortColumn(colunadestino, 2);\par
593                 clearTerminal();\par
594                 std::cout << {\cf22 "\'D3timo, a coluna "} << (colunadestino + 1) << {\cf22 " foi ordenada de forma decrescente.\\n"};\par
595                 std::cout << std::endl;\par
596             \}\par
597             {\cf19 break};\par
598 \par
599         {\cf19 case} 3: {\cf20 // ==== CASO: ORDENAR TODAS AS COLUNAS ====}\par
600             clearTerminal();\par
601             kanbanBoard->printBoard();\par
602             {\cf19 while} ({\cf17 true})\par
603             \{\par
604 \par
605                 std::cout << {\cf22 "\\n\\n\\n1. Crescente ("} << ANSI_GREEN << {\cf22 "1: Baixo"} << ANSI_RESET << {\cf22 " - "} << ANSI_RED << {\cf22 "3: Alto)"} << ANSI_RESET;\par
606                 std::cout << {\cf22 "\\n2. Decrescente ("} << ANSI_RED << {\cf22 "3: Alto"} << ANSI_RESET << {\cf22 " - "} << ANSI_GREEN << {\cf22 "1: Baixo)"} << ANSI_RESET;\par
607                 std::cout << {\cf22 "\\nVoc\'EA deseja ordenar de qual forma (ou digite -1 para sair): "};\par
608                 std::cin >> escolha;\par
609 \par
610                 {\cf19 if} (escolha == -1)\par
611                 \{\par
612                     clearTerminal();\par
613                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
614                               << ANSI_RESET << std::endl;\par
615                     {\cf19 break}; {\cf20 // Sai do loop}\par
616                 \}\par
617 \par
618                 {\cf19 switch} (escolha)\par
619                 \{\par
620                 {\cf19 case} 1:\par
621                     {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
622                     \{\par
623                         kanbanBoard->sortColumn(i, 1);\par
624                     \}\par
625                     clearTerminal();\par
626                     std::cout << {\cf22 "\'D3timo, todas as colunas foram ordenadas de forma crescente."};\par
627                     kanbanBoard->printBoard();\par
628                     {\cf19 break};\par
629                 {\cf19 case} 2:\par
630                     {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
631                     \{\par
632                         kanbanBoard->sortColumn(i, 2);\par
633                     \}\par
634                     clearTerminal();\par
635                     std::cout << {\cf22 "\'D3timo, todas as colunas foram ordenadas de forma decrescente."};\par
636                     kanbanBoard->printBoard();\par
637                     {\cf19 break};\par
638                 {\cf19 default}:\par
639                     clearTerminal();\par
640                     std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida |!|"} << ANSI_RESET << std::endl;\par
641                     kanbanBoard->printBoard();\par
642                     {\cf19 break};\par
643                 \}\par
644             \}\par
645             {\cf19 break};\par
646 \par
647         {\cf19 case} 4: {\cf20 // ==== CASO: VOLTAR ====}\par
648             clearTerminal();\par
649             {\cf19 break};\par
650         {\cf19 default}:\par
651             clearTerminal();\par
652             std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida. Por favor, escolha uma op\'E7\'E3o v\'E1lida. |!|"} << ANSI_RESET << std::endl;\par
653             {\cf19 break};\par
654         \}\par
655 \par
656         {\cf19 break};\par
657 \par
658 \par
659 \par
660     {\cf20 // ==== CASO: EXIBIR QUADRO KANBAN ====}\par
661     {\cf19 case} 5:\par
662         {\cf19 while} ({\cf17 true})\par
663         \{\par
664             kanbanBoard->printBoard();\par
665             std::cout << {\cf22 "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nDigite -1 para sair: "};\par
666             std::cin >> indexTask;\par
667 \par
668             {\cf19 if} (indexTask == -1)\par
669             \{\par
670                 {\cf19 break}; {\cf20 // Sai do loop}\par
671             \}\par
672             clearTerminal();\par
673         \}\par
674         clearTerminal();\par
675 \par
676         {\cf19 break};\par
677 \par
678 \par
679 \par
680     {\cf20 // ==== CASO: SALVAR EM UM ARQUIVO ====}\par
681     {\cf19 case} 6:\par
682     \par
683         clearTerminal();\par
684         {\cf19 while} ({\cf17 true})\{\par
685             printMenuSalvar();\par
686             escolha = getUserChoice();\par
687 \par
688             {\cf19 if}(escolha == 4)\{\par
689                 clearTerminal();\par
690                 std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"} << ANSI_RESET << std::endl;\par
691                 {\cf19 break}; {\cf20 // Sai do loop}\par
692             \}\par
693 \par
694             {\cf19 switch} (escolha)\{\par
695                 {\cf19 case} 1:\par
696                     clearTerminal();\par
697                     std::cout << ANSI_BLUE << {\cf22 "|!| Todas os arquivos '.bin' s\'E3o salvos na pasta '/data/bin' |!|\\n"}<< ANSI_RESET << std::endl;\par
698 \par
699                     std::cout << {\cf22 "Insira o nome do arquivo para salvar os dados (exemplo.bin): "};\par
700                     std::cin >> nameFile;\par
701 \par
702                     caminhoFile = {\cf22 "data/bin/"} + nameFile;\par
703 \par
704                     arquivoExiste = {\cf17 false};\par
705                     {\cf19 while}(!arquivoExiste)\{\par
706                         {\cf20 // Verifique se o arquivo existe}\par
707             \par
708                         arquivo.open(caminhoFile.c_str());\par
709                         {\cf20 //Arquivo existe}\par
710                         {\cf19 if} (arquivo.is_open()) \{\par
711                             std::cout << ANSI_RED << {\cf22 "\\nIsso apagar\'E1 todo o conte\'FAdo gravado em "} << nameFile << {\cf22 ". Voc\'EA tem certeza? "} << ANSI_RESET << std::endl;\par
712                             std::cout << {\cf22 "1. Sim"} << std::endl;\par
713                             std::cout << {\cf22 "2. N\'E3o"} << std::endl;\par
714 \par
715                             {\cf19 do}\{\par
716                                 std::cin >> escolha;\par
717 \par
718                                 {\cf19 if}(escolha == 2)\{\par
719                                     clearTerminal();\par
720                                     std::cout << ANSI_RED << {\cf22 "|!| Opera\'E7\'E3o cancelada |!|"} << ANSI_RESET << std::endl;\par
721                                     {\cf19 break};\par
722                                 \}{\cf19 else} {\cf19 if} (escolha == 1)\{\par
723                                     clearTerminal();\par
724                                     kanbanBoard->saveToFile(caminhoFile);\par
725                                     {\cf19 break};\par
726                                 \}{\cf19 else}\{\par
727                                     std::cout << ANSI_RED << {\cf22 "|!| Digite uma op\'E7\'E3o v\'E1lida: "}<< ANSI_RESET;\par
728                                 \}\par
729                                 \par
730                             \}{\cf19 while}(escolha != 1 || escolha != 2);\par
731                            \par
732                             arquivoExiste = {\cf17 true};\par
733                             arquivo.close();\par
734                             {\cf19 break};\par
735 \par
736                         \} {\cf19 else} \{\par
737                             clearTerminal();\par
738                             std::cout << ANSI_RED << {\cf22 "|!| O arquivo "} << nameFile << {\cf22 " n\'E3o existe |!|"} << ANSI_RESET << std::endl;\par
739                             {\cf19 break};\par
740                         \}\par
741                     \}\par
742 \par
743                     \par
744                     {\cf19 break};\par
745 \par
746                 {\cf19 case} 2:\par
747                     clearTerminal();\par
748 \par
749                     {\cf19 do}\{\par
750                         std::cout << ANSI_BLUE << {\cf22 "|!| Todas os arquivos '.bin' s\'E3o salvos na pasta '/data/bin' |!|\\n"}<< ANSI_RESET << std::endl;\par
751                         std::cout << {\cf22 "Insira o nome do arquivo para salvar os dados (exemplo.bin): "};\par
752                         std::cin >> nameFile;\par
753 \par
754                         {\cf19 if} (nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".bin"}) \{\par
755                             clearTerminal();\par
756                             std::cout << ANSI_RED << {\cf22 "|!| Nome de arquivo inv\'E1lido! Por favor, inclua a extens\'E3o '.bin' |!|"} << ANSI_RESET << std::endl;\par
757                         \}\par
758 \par
759                     \}{\cf19 while}(nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".bin"});\par
760 \par
761                     caminhoFile = {\cf22 "data/bin/"} + nameFile;\par
762 \par
763                     arquivo.open(caminhoFile.c_str());\par
764                     {\cf19 if}(arquivo.is_open())\{\par
765                         clearTerminal();\par
766                         std::cout << ANSI_RED << {\cf22 "|!| O arquivo "} << nameFile << {\cf22 " j\'E1 existe. Entre na primeira op\'E7\'E3o para salvar em um arquivo existente |!|"} << ANSI_RESET << std::endl;\par
767                         {\cf19 break};\par
768                     \}\par
769 \par
770                     clearTerminal();\par
771                     kanbanBoard->saveToFile(caminhoFile);\par
772 \par
773                     {\cf19 break};\par
774 \par
775                 {\cf19 case} 3:\par
776                     clearTerminal();\par
777                     arquivoExiste = {\cf17 false};\par
778 \par
779                     {\cf19 do}\{\par
780                         std::cout << ANSI_BLUE << {\cf22 "|!| Todas os arquivos '.txt' s\'E3o salvos na pasta '/data/txt' |!|\\n"}<< ANSI_RESET << std::endl;\par
781                         std::cout << {\cf22 "Insira o nome do arquivo que o programa escrever\'E1 (exemplo.txt): "};\par
782                         std::cin >> nameFile;\par
783                          \par
784                         {\cf19 if} (nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".txt"}) \{\par
785                             clearTerminal();\par
786                             std::cout << ANSI_RED << {\cf22 "|!| Nome de arquivo inv\'E1lido! Por favor, inclua a extens\'E3o '.txt' |!|"} << ANSI_RESET << std::endl;\par
787                         \}\par
788 \par
789                     \}{\cf19 while}(nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".txt"});\par
790 \par
791 \par
792                     caminhoFile = {\cf22 "data/txt/"} + nameFile;\par
793 \par
794                     clearTerminal();\par
795                     kanbanBoard->saveToFileTxt(caminhoFile);\par
796                     {\cf19 break};\par
797                     \par
798                     {\cf19 break};\par
799 \par
800                 {\cf19 case} 4:\par
801 \par
802                     {\cf19 break}; {\cf20 // Sai do loop}\par
803                 \par
804                 {\cf19 default}:\par
805                     clearTerminal();\par
806                     std::cout << ANSI_RED << {\cf22 "|!| Digite uma op\'E7\'E3o v\'E1lida |!|\\n"}<< ANSI_RESET << std::endl;\par
807                     {\cf19 break};\par
808             \par
809             \}\par
810         \}\par
811 \par
812         {\cf19 break};  \par
813 \par
814 \par
815 \par
816     {\cf20 // ==== CASO: SAIR ====}\par
817     {\cf19 case} 7:\par
818         std::cout << ANSI_RED << {\cf22 "Encerrando o programa..."} << ANSI_RESET << std::endl;\par
819         {\cf17 delete} kanbanBoard; {\cf20 // Libera a mem\'F3ria alocada}\par
820         kanbanBoard = NULL;\par
821         std::exit(0);\par
822         {\cf19 break};\par
823 \par
824 \par
825 \par
826     {\cf20 // ==== CASO: OP\'C7\'C3O INV\'C1LIDA ====}\par
827     {\cf19 default}:\par
828         std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida. Por favor, escolha uma op\'E7\'E3o v\'E1lida. |!|\\n"}\par
829                   << ANSI_RESET << std::endl;\par
830         {\cf19 break};\par
831     \}\par
832 \par
833 \par
834 \par
835     {\cf20 // ==== FIM DO SWITCH PRINCIPAL ====}\par
836     std::cout << {\cf22 "\\n"};\par
837 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a44b96e022f354245afa90fae9d21575e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a44b96e022f354245afa90fae9d21575e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getUserChoice\:functions.h}
{\xe \v functions.h\:getUserChoice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getUserChoice ()}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio a escolha de uma opera\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o solicita e l\'EA o n\'FAmero de uma opera\'E7\'E3o escolhido pelo usu\'E1rio. \'C9 utlizada posteriormente a impress\'E3o de um menu de op\'E7\'F5es. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero da opera\'E7\'E3o que o usu\'E1rio deseja realizar \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133 \{\par
134     {\cf18 int} operacao;\par
135     std::cout << ANSI_GREEN << {\cf22 "Digite o n\'FAmero da opera\'E7\'E3o: "} << ANSI_RESET;\par
136     std::cin >> operacao;\par
137     {\cf19 return} operacao;\par
138 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a86d0de416ac3f84fbea7eafd2325946c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v listarArquivos\:functions.h}
{\xe \v functions.h\:listarArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaDuplamenteEncadeada}<std::string> listarArquivos (const std::string &  {\i pasta})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que retorna uma lista dos arquivos em uma pasta. Utilizado para listar os nomes dos arquivos (.bin) salvos com informa\'E7\'F5es para preenchimento do quadro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pasta} \cell }{Diret\'F3rio que cont\'E9m os arquivos onde o programa far\'E1 a leitura\cell }
{\row }
}
A l\'F3gica proposta \'E9 uma vez aberto o diret\'F3rio passado como par\'E2metro, l\'EA-se o nome de cada arquivo, o atribui a uma string e no final adiciona-se a string ao final da lista duplamente encadeada chamada "arquivos" \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uma lista duplamente encadeada de nomes de arquivos presentes no diret\'F3rio passado como par\'E2metro \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\par
16     ListaDuplamenteEncadeada<std::string> arquivos;\par
17 \par
18     DIR* dir;\par
19     {\cf17 struct }dirent* entrada;\par
20     {\cf19 if} ((dir = opendir(pasta.c_str())) != NULL) \{\par
21         {\cf19 while} ((entrada = readdir(dir)) != NULL) \{\par
22 \par
23             std::string nomeArquivo = entrada->d_name;\par
24 \par
25             {\cf19 if} (nomeArquivo != {\cf22 "."} && nomeArquivo != {\cf22 ".."}) \{\par
26                 arquivos.pushBack(nomeArquivo);\par
27             \}\par
28 \par
29         \}\par
30         closedir(dir);\par
31 \par
32     \} {\cf19 else} \{\par
33         std::cout << {\cf22 "Erro ao abrir a pasta: "} << pasta << std::endl;\par
34     \}\par
35 \par
36     {\cf19 return} arquivos;\par
37 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_aa1fbbb2203c4879b8bf3566732284ac3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_aa1fbbb2203c4879b8bf3566732284ac3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v receiveColumns\:functions.h}
{\xe \v functions.h\:receiveColumns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void receiveColumns ({\b KanbanBoard} *  {\i kanbanBoard}, int  {\i numColunas})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio os nomes das colunas do quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i kanbanBoard} \cell }{Ponteiro do tipo "KanbanBoard" que ser\'E1 usado para adicionar colunas ao Quadro Kanban. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i numColunas} \cell }{Vari\'E1vel do tipo inteiro contendo o n\'FAmero de colunas escolhido pelo usu\'E1rio, foi obtido previamente pela fun\'E7\'E3o "receiveNumColumns"\cell }
{\row }
}
Fun\'E7\'E3o utilizada no in\'EDcio do programa, logo ap\'F3s a fun\'E7\'E3o "receiveNumColumns", pede-se que o usu\'E1rio nomeie as colunas uma a uma e conforme isso vai acontecendo, uma nova coluna \'E9 adicionada ao objeto "kanbanBoard" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54 \{\par
55     std::cout << {\cf22 "==========="} << ANSI_GREEN << {\cf22 " Informe os nomes das colunas "} << ANSI_RESET << {\cf22 "===========\\n"};\par
56     {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
57     \{\par
58         std::string coluna;\par
59         std::cout << (i + 1) << {\cf22 "\'AA coluna: "};\par
60         std::getline(std::cin, coluna);\par
61         stringMaiusculo(coluna);\par
62         kanbanBoard->addColumn(coluna);\par
63     \}\par
64 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a90237cd431706bf89edc6d2df56555d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a90237cd431706bf89edc6d2df56555d9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v receiveNumColumns\:functions.h}
{\xe \v functions.h\:receiveNumColumns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int receiveNumColumns ()}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio qual n\'FAmero de colunas do Quadro Kanban que o mesmo deseja. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o utilizada no in\'EDcio do programa para definir o n\'FAmero de colunas que o Quadro Kanban deve ter, escolhido pelo usu\'E1rio. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero de colunas. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42 \{\par
43     {\cf18 int} numColunas;\par
44     std::cout << {\cf22 "==========="} << ANSI_GREEN << {\cf22 " Bem vindo ao gerenciador de tarefas Kanban! "} << ANSI_RESET << {\cf22 "===========\\n"};\par
45     std::cout << {\cf22 "Quantas colunas voc\'EA deseja adicionar no seu gerenciador?\\n"};\par
46     std::cin >> numColunas;\par
47     std::cin.ignore(); {\cf20 // Descarta o caractere de nova linha ap\'F3s a leitura do n\'FAmero}\par
48     {\cf19 return} numColunas;\par
49 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_ae0e51e3688204d8be9b0c6fc6786585f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stringMaiusculo\:functions.h}
{\xe \v functions.h\:stringMaiusculo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void stringMaiusculo (std::string &  {\i texto})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que converte uma string em letras mai\'FAsculas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i texto} \cell }{String que deseja-se converter\cell }
{\row }
}
Essa fun\'E7\'E3o foi criada para fins est\'E9ticos da exibi\'E7\'E3o do Quadro Kanban, para que tudo fique padronizado em letras mai\'FAsculas e mais agrad\'E1vel de ser exibido. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69 \{\par
70     {\cf19 for} ({\cf18 size_t} i = 0; i < texto.length(); ++i)\par
71     \{\par
72         {\cf19 if} (texto[i] >= {\cf23 'a'} && texto[i] <= {\cf23 'z'})\par
73         \{\par
74             texto[i] = texto[i] - {\cf23 'a'} + {\cf23 'A'};\par
75         \}\par
76     \}\par
77 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8h_a228d1e0c636daad6578c44e22644fbc5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/include/kanbanboard.h\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/include/kanbanboard.h}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/include/kanbanboard.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe {\b KanbanBoard}, que representa o Quadro Kanban. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include "kanbantask.h"}\par
{\f2 #include "estruturas_tads.hpp"}\par
{\f2 #include "templates.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para kanbanboard.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kanbanboard_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Este grafo mostra quais arquivos est\'E3o direta ou indiretamente relacionados com esse arquivo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kanbanboard_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KanbanBoard}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanBoard} representa o Quadro Kanban que cont\'E9m colunas e tarefas. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b KanbanBoard::KanbanColumn}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estrutura interna que representa uma coluna do quadro Kanban. Cada coluna possui um nome e uma lista duplamente encadeada de tarefas. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RESET}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RED}\~ "\\033[31m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_GREEN}\~ "\\033[32m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_YELLOW}\~ "\\033[33m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_BLUE}\~ "\\033[34m"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe {\b KanbanBoard}, que representa o Quadro Kanban. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ANSI_BLUE\:kanbanboard.h}
{\xe \v kanbanboard.h\:ANSI_BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_BLUE\~ "\\033[34m"}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_GREEN\:kanbanboard.h}
{\xe \v kanbanboard.h\:ANSI_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_GREEN\~ "\\033[32m"}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RED\:kanbanboard.h}
{\xe \v kanbanboard.h\:ANSI_RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RED\~ "\\033[31m"}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RESET\:kanbanboard.h}
{\xe \v kanbanboard.h\:ANSI_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RESET\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_YELLOW\:kanbanboard.h}
{\xe \v kanbanboard.h\:ANSI_YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_YELLOW\~ "\\033[33m"}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/include/kanbantask.h\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/include/kanbantask.h}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/include/kanbantask.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe {\b KanbanTask}, que representa uma tarefa espec\'EDfica do Kanban. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include "task.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para kanbantask.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kanbantask_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Este grafo mostra quais arquivos est\'E3o direta ou indiretamente relacionados com esse arquivo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kanbantask_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KanbanTask}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b KanbanTask} representa uma tarefa espec\'EDfica para o Kanban. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RESET}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RED}\~ "\\033[31m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_GREEN}\~ "\\033[32m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_YELLOW}\~ "\\033[33m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_BLUE}\~ "\\033[34m"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe {\b KanbanTask}, que representa uma tarefa espec\'EDfica do Kanban. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ANSI_BLUE\:kanbantask.h}
{\xe \v kanbantask.h\:ANSI_BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_BLUE\~ "\\033[34m"}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_GREEN\:kanbantask.h}
{\xe \v kanbantask.h\:ANSI_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_GREEN\~ "\\033[32m"}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RED\:kanbantask.h}
{\xe \v kanbantask.h\:ANSI_RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RED\~ "\\033[31m"}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RESET\:kanbantask.h}
{\xe \v kanbantask.h\:ANSI_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RESET\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_YELLOW\:kanbantask.h}
{\xe \v kanbantask.h\:ANSI_YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_YELLOW\~ "\\033[33m"}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/include/menus.h\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/include/menus.h}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/include/menus.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m fun\'E7\'F5es para imprimir os menus de opera\'E7\'F5es do Quadro Kanban. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para menus.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Este grafo mostra quais arquivos est\'E3o direta ou indiretamente relacionados com esse arquivo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RESET}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RED}\~ "\\033[31m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_GREEN}\~ "\\033[32m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_YELLOW}\~ "\\033[33m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_BLUE}\~ "\\033[34m"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenu} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu principal do sistema Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuEditar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu para editar informa\'E7\'F5es de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuTarefa} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para editar uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuOrdenar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para ordenar as tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuSalvar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para salvar o quadro Kanban. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m fun\'E7\'F5es para imprimir os menus de opera\'E7\'F5es do Quadro Kanban. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ANSI_BLUE\:menus.h}
{\xe \v menus.h\:ANSI_BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_BLUE\~ "\\033[34m"}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_GREEN\:menus.h}
{\xe \v menus.h\:ANSI_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_GREEN\~ "\\033[32m"}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RED\:menus.h}
{\xe \v menus.h\:ANSI_RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RED\~ "\\033[31m"}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RESET\:menus.h}
{\xe \v menus.h\:ANSI_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RESET\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_YELLOW\:menus.h}
{\xe \v menus.h\:ANSI_YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_YELLOW\~ "\\033[33m"}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v printMenu\:menus.h}
{\xe \v menus.h\:printMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenu ()}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu principal do sistema Kanban. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15   std::cout << std::endl;\par
16   std::cout << {\cf22 "*=========================================*"} << std::endl;\par
17   std::cout << {\cf22 "|         "} << ANSI_BLUE << {\cf22 "MENU DE OPERA\'C7\'D5ES KANBAN"} << ANSI_RESET << {\cf22 "        |"} << std::endl;\par
18   std::cout << {\cf22 "*=========================================*"} << std::endl;\par
19   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:           |"} << std::endl;\par
20   std::cout << {\cf22 "|                                         |"} << std::endl;\par
21   std::cout << {\cf22 "|  1. Adicionar nova tarefa               |"} << std::endl;\par
22   std::cout << {\cf22 "|  2. Editar tarefa existente             |"} << std::endl;\par
23   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa       |"} << std::endl;\par
24   std::cout << {\cf22 "|  4. Ordernar tarefas por prioridade     |"} << std::endl;\par
25   std::cout << {\cf22 "|  5. Exibir o quadro Kanban              |"} << std::endl;\par
26   std::cout << {\cf22 "|  6. Salvar o quadro Kanban              |"} << std::endl;\par
27   std::cout << {\cf22 "|  7. Sair                                |"} << std::endl;\par
28   std::cout << {\cf22 "|                                         |"} << std::endl;\par
29   std::cout << {\cf22 "*=========================================*"} << std::endl;\par
30 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8h_ab13e858612c64eeef73aff1d8a03945e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuEditar\:menus.h}
{\xe \v menus.h\:printMenuEditar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuEditar ()}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu para editar informa\'E7\'F5es de uma tarefa. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34 \{\par
35   std::cout << std::endl;\par
36   std::cout << {\cf22 "*===================================*"} << std::endl;\par
37   std::cout << {\cf22 "|           "} << ANSI_BLUE << {\cf22 "EDITAR TAREFA"} << ANSI_RESET << {\cf22 "           |"} << std::endl;\par
38   std::cout << {\cf22 "*===================================*"} << std::endl;\par
39   std::cout << {\cf22 "|  Escolha a altera\'E7\'E3o desejada:    |"} << std::endl;\par
40   std::cout << {\cf22 "|                                   |"} << std::endl;\par
41   std::cout << {\cf22 "|  1. Editar ID                     |"} << std::endl;\par
42   std::cout << {\cf22 "|  2. Editar t\'EDtulo                 |"} << std::endl;\par
43   std::cout << {\cf22 "|  3. Editar descri\'E7\'E3o              |"} << std::endl;\par
44   std::cout << {\cf22 "|  4. Editar prioridade             |"} << std::endl;\par
45   std::cout << {\cf22 "|  5. Editar data de vencimento     |"} << std::endl;\par
46   std::cout << {\cf22 "|  6. Voltar                        |"} << std::endl;\par
47   std::cout << {\cf22 "|                                   |"} << std::endl;\par
48   std::cout << {\cf22 "*===================================*"} << std::endl;\par
49 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8h_a7ab907c433f9f51b038d0962c2159877_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuOrdenar\:menus.h}
{\xe \v menus.h\:printMenuOrdenar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuOrdenar ()}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para ordenar as tarefas. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74 \{\par
75   std::cout << std::endl\par
76             << {\cf22 "\\n"};\par
77   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
78   std::cout << {\cf22 "|        MENU DE OPERA\'C7\'D5ES KANBAN        |        |         "} << ANSI_BLUE << {\cf22 "ORDENAR TAREFAS"} << ANSI_RESET << {\cf22 "         |"} << std::endl;\par
79   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
80   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:          |        |  Escolha a ordena\'E7\'E3o desejada:  |"} << std::endl;\par
81   std::cout << {\cf22 "|                                        |        |                                 |"} << std::endl;\par
82   std::cout << {\cf22 "|  1. Adicionar nova tarefa              |        |  1. Ordena\'E7\'E3o crescente "} << ANSI_GREEN << {\cf22 "(1-3)"} << ANSI_RESET << {\cf22 "   |"} << std::endl;\par
83   std::cout << {\cf22 "|  2. Editar tarefa existente            |        |  2. Ordena\'E7\'E3o decrescente "} << ANSI_RED << {\cf22 "(3-1)"} << ANSI_RESET << {\cf22 " |"} << std::endl;\par
84   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa      |        |  3. Ordenar todas as colunas    |"} << std::endl;\par
85   std::cout << {\cf22 "|  "} << ANSI_BLUE << {\cf22 "4. Ordernar tarefas por prioridade ---------->"} << ANSI_RESET << {\cf22 " |  4. Voltar                      |"} << std::endl;\par
86   std::cout << {\cf22 "|  5. Exibir o quadro Kanban             |        |                                 |"} << std::endl;\par
87   std::cout << {\cf22 "|  6. Salvar o quadro Kanban             |        *=================================*"} << std::endl;\par
88   std::cout << {\cf22 "|  7. Sair                               |"} << std::endl;\par
89   std::cout << {\cf22 "|                                        |                                           "} << std::endl;\par
90   std::cout << {\cf22 "*========================================*                                           "} << std::endl;\par
91 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8h_a707396c394b23ba47a461a3423903a9b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuSalvar\:menus.h}
{\xe \v menus.h\:printMenuSalvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuSalvar ()}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para salvar o quadro Kanban. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95 \{\par
96   std::cout << std::endl << {\cf22 "\\n"};\par
97   std::cout << {\cf22 "*========================================*"} << std::endl;\par
98   std::cout << {\cf22 "|        MENU DE OPERA\'C7\'D5ES KANBAN        |        *=================================*"} << std::endl;\par
99   std::cout << {\cf22 "*========================================*        |         "} << ANSI_BLUE << {\cf22 "SALVAR O QUADRO"} << ANSI_RESET << {\cf22 "         |"} << std::endl;\par
100   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:          |        *=================================*"} << std::endl;\par
101   std::cout << {\cf22 "|                                        |        |  Escolha como deseja salvar:    |"} << std::endl;\par
102   std::cout << {\cf22 "|  1. Adicionar nova tarefa              |        |                                 |"} << std::endl;\par
103   std::cout << {\cf22 "|  2. Editar tarefa existente            |        |  1. Arquivo 'bin' existente     |"} << std::endl;\par
104   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa      |        |  2. Arquivo 'bin' novo          |"} << std::endl;\par
105   std::cout << {\cf22 "|  4. Ordernar tarefas por prioridade    |        |  3. Arquivo 'txt'               |"} << std::endl;\par
106   std::cout << {\cf22 "|  5. Exibir o quadro Kanban             |        |  4. Voltar                      |"} << std::endl;\par
107   std::cout << {\cf22 "|  "} << ANSI_BLUE << {\cf22 "6. Salvar o quadro Kanban ------------------->"} << ANSI_RESET << {\cf22 " |                                 |"} << std::endl;\par
108   std::cout << {\cf22 "|  7. Sair                               |        *=================================*"} << std::endl;\par
109   std::cout << {\cf22 "|                                        |"} << std::endl;\par
110   std::cout << {\cf22 "*========================================*                                            "} << std::endl;\par
111 \par
112 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8h_af925906122711aca7c59ea138c248f0d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuTarefa\:menus.h}
{\xe \v menus.h\:printMenuTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuTarefa ()}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para editar uma tarefa. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53 \{\par
54   std::cout << std::endl\par
55             << {\cf22 "\\n"};\par
56   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
57   std::cout << {\cf22 "|        MENU DE OPERA\'C7\'D5ES KANBAN        |        |          "} << ANSI_BLUE << {\cf22 "EDITAR TAREFA"} << ANSI_RESET << {\cf22 "          |"} << std::endl;\par
58   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
59   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:          |        |  Escolha a altera\'E7\'E3o desejada:  |"} << std::endl;\par
60   std::cout << {\cf22 "|                                        |        |                                 |"} << std::endl;\par
61   std::cout << {\cf22 "|  1. Adicionar nova tarefa              |        |  1. Editar informa\'E7\'F5es          |"} << std::endl;\par
62   std::cout << {\cf22 "|  "} << ANSI_BLUE << {\cf22 "2. Editar tarefa existente ------------------>"} << ANSI_RESET << {\cf22 " |  2. Mover tarefa                |"} << std::endl;\par
63   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa      |        |  3. Excluir tarefa              |"} << std::endl;\par
64   std::cout << {\cf22 "|  4. Ordernar tarefas por prioridade    |        |  4. Voltar                      |"} << std::endl;\par
65   std::cout << {\cf22 "|  5. Exibir o quadro Kanban             |        |                                 |"} << std::endl;\par
66   std::cout << {\cf22 "|  6. Salvar o quadro Kanban             |        *=================================*"} << std::endl;\par
67   std::cout << {\cf22 "|  7. Sair                               |"} << std::endl;\par
68   std::cout << {\cf22 "|                                        |                                           "} << std::endl;\par
69   std::cout << {\cf22 "*========================================*                                           "} << std::endl;\par
70 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8h_a3ebc3966cac22ea92469516f1f93c245_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/include/task.h\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/include/task.h}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/include/task.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe abstrata {\b Task}, que representa uma tarefa gen\'E9rica. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para task.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Este grafo mostra quais arquivos est\'E3o direta ou indiretamente relacionados com esse arquivo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Task}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe abstrata {\b Task} representa uma tarefa. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a declara\'E7\'E3o da classe abstrata {\b Task}, que representa uma tarefa gen\'E9rica. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/include/templates.hpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/include/templates.hpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/include/templates.hpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C\'F3digo-fonte auxiliar com templates gen\'E9ricos de algoritmos de ordena\'E7\'E3o e busca. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "estruturas_tads.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para templates.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "templates_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Este grafo mostra quais arquivos est\'E3o direta ou indiretamente relacionados com esse arquivo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "templates_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AlgoritmosDeOrdenacao< T >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmos de ordena\'E7\'E3o. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AlgoritmosDeBuscaBinaria< T >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template de classe para algoritmo de busca bin\'E1ria gen\'E9rico. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C\'F3digo-fonte auxiliar com templates gen\'E9ricos de algoritmos de ordena\'E7\'E3o e busca. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/src/functions.cpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/src/functions.cpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/src/functions.cpp}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o das fun\'E7\'F5es desenvolvidas. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/functions.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para functions.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaDuplamenteEncadeada}< std::string > {\b listarArquivos} (const std::string &pasta)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que retorna uma lista dos arquivos em uma pasta. Utilizado para listar os nomes dos arquivos (.bin) salvos com informa\'E7\'F5es para preenchimento do quadro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b receiveNumColumns} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio qual n\'FAmero de colunas do Quadro Kanban que o mesmo deseja. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b receiveColumns} ({\b KanbanBoard} *kanbanBoard, int numColunas)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio os nomes das colunas do quadro Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stringMaiusculo} (std::string &texto)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que converte uma string em letras mai\'FAsculas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearTerminal} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que limpa o terminal em diferentes sistemas operacionais. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b askForValidColumn} (const {\b KanbanBoard} &kanbanBoard, int flag)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio o n\'FAmero da coluna em que se deseja realizar alguma opera\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getUserChoice} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio a escolha de uma opera\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b executarOperacao} (int choice, {\b KanbanBoard} *kanbanBoard)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o \'E9 um grande switch case utilizado para manejar as opera\'E7\'F5es no Quadro Kanban. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o das fun\'E7\'F5es desenvolvidas. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v askForValidColumn\:functions.cpp}
{\xe \v functions.cpp\:askForValidColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int askForValidColumn (const {\b KanbanBoard} &  {\i kanbanBoard}, int  {\i flag})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio o n\'FAmero da coluna em que se deseja realizar alguma opera\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i kanbanBoard} \cell }{Refer\'EAncia a um objeto do tipo {\b KanbanBoard}, utilizado para obter o n\'FAmero de colunas \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i flag} \cell }{Vari\'E1vel que ser\'E1 utilizada no switch case para indicar de qual opera\'E7\'E3o a fun\'E7\'E3o vai se tratar no momento em que foi chamada\cell }
{\row }
}
Essa fun\'E7\'E3o foi amplamente utilizada durante o programa para solicitar ao usu\'E1rio uma coluna.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Inicialmente, descobre-se o n\'FAmero de colunas no objeto kanbanBoard\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Utiliza-se a flag passada como par\'E2metro em um switch case para descobrir de qual opera\'E7\'E3o se trata\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
L\'EA-se o n\'FAmero da coluna digitado pelo usu\'E1rio e o atribui a uma vari\'E1vel do tipo int chamada "columnIndex". Caso o n\'FAmero digitado seja inv\'E1lido pede por um novo n\'FAmero at\'E9 que o mesmo seja v\'E1lido\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Diminui-se -1 do n\'FAmero digitado pelo usu\'E1rio pois os \'EDndices come\'E7am em 0. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ind\'EDce da coluna em que deve ser realizada alguma opera\'E7\'E3o. \par
}}}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93 \{\par
94     {\cf18 int} columnIndex;\par
95     {\cf18 int} numColumns = kanbanBoard.getNumColumns();\par
96 \par
97     {\cf19 switch} (flag)\par
98     \{\par
99     {\cf19 case} 1:\par
100         std::cout << {\cf22 "Tarefa criada. Informe agora o n\'FAmero da coluna que voc\'EA deseja adicionar (1-"} << numColumns << {\cf22 "): "};\par
101         {\cf19 break};\par
102     {\cf19 case} 2:\par
103         std::cout << {\cf22 "\\nDigite o n\'FAmero da coluna de destino (1-"} << numColumns << {\cf22 "): "};\par
104         {\cf19 break};\par
105     {\cf19 case} 3:\par
106         std::cout << {\cf22 "Digite o n\'FAmero da coluna que voc\'EA deseja ordenar (ou digite -1 para sair): "};\par
107         {\cf19 break};\par
108     {\cf19 default}:\par
109         std::cout << {\cf22 "Digite o n\'FAmero da coluna (1-"} << numColumns << {\cf22 "): "};\par
110         {\cf19 break};\par
111     \}\par
112 \par
113     {\cf19 do}\par
114     \{\par
115         std::cin >> columnIndex;\par
116         {\cf19 if} (columnIndex == -1)\par
117         \{ {\cf20 //"Digite -1 para sair"}\par
118             {\cf19 return} -1;\par
119         \}\par
120         {\cf19 if} (columnIndex <= 0 || columnIndex > numColumns)\par
121         \{\par
122             std::cout << ANSI_RED << {\cf22 "|!| Coluna inv\'E1lida. Digite um n\'FAmero de coluna v\'E1lido: "} << ANSI_RESET;\par
123         \}\par
124     \} {\cf19 while} (columnIndex <= 0 || columnIndex > numColumns);\par
125 \par
126     columnIndex -= 1;\par
127     {\cf19 return} columnIndex;\par
128 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a1ea6093903cc01b2fec1e1db7f6bfe9d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a1ea6093903cc01b2fec1e1db7f6bfe9d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearTerminal\:functions.cpp}
{\xe \v functions.cpp\:clearTerminal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clearTerminal ()}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que limpa o terminal em diferentes sistemas operacionais. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o foi criada com fins est\'E9ticos e compatibilidade, para que tanto em sistemas Windows como em sistemas Linux, o terminal possa ser limpado periodicamente tornando-se mais agrad\'E1vel aos olhos do usu\'E1rio.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Para sistemas Windows, o comando "cls" \'E9 utilizado para limpar o terminal.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Para sistemas Unix (Linux, macOS, etc.), o comando "clear" \'E9 utilizado \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82 \{\par
83 {\cf21 #ifdef _WIN32 }{\cf20 // Para Windows}\par
84     system({\cf22 "cls"});\par
85 {\cf21 #else }{\cf20 // Para sistemas Unix (Linux, macOS, etc.)}\par
86     system({\cf22 "clear"});\par
87 {\cf21 #endif}\par
88 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_aad531f6562212b82c481588c13bfa284_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v executarOperacao\:functions.cpp}
{\xe \v functions.cpp\:executarOperacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void executarOperacao (int  {\i choice}, {\b KanbanBoard} *  {\i kanbanBoard})}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o \'E9 um grande switch case utilizado para manejar as opera\'E7\'F5es no Quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i choice} \cell }{Vari\'E1vel utilizada como parametro para a escolha do caso no primeiro switch case. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i kanbanBoard} \cell }{Ponteiro de um objeto do tipo {\b KanbanBoard}, ser\'E1 utilizado para realizar manipula\'E7\'F5es no Quadro Kanban.\cell }
{\row }
}
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b No} switch case principal, realizadas 6 tipos de opera\'E7\'F5es diferentes:\par}
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab Adicionar uma tarefa\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab Editar uma tarefa existente Neste caso \'E9 aberto outro switch case com novas op\'E7\'F5es: A. Editar informa\'E7\'F5es de uma tarefa (Um novo switch case \'E9 aberto com os atributos edit\'E1veis: id, t\'EDtulo, descri\'E7\'E3o, prioridade, data de vencimento e "voltar") B. Mover tarefa C. Excluir tarefa D. Voltar\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab Ver informa\'E7\'F5es de uma tarefa\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
4.\tab Ordenar tarefas por prioridade (utiliza os algoritmos de ordena\'E7\'E3o Bubble Sort e Selection Sort)\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
5.\tab Exibir o Quadro Kanban\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
6.\tab Salvar o Quadro Kanban Neste caso \'E9 aberto um novo switch case com op\'E7\'F5es de salvamento: A. Arquivo 'bin' existente B. Arquivo 'bin' novo C. Arquivo 'txt' D. Voltar\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
7.\tab Sair\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
8.\tab Caso uma op\'E7\'E3o inv\'E1lida seja digitada, \'E9 solicitado uma nova op\'E7\'E3o ao usu\'E1rio at\'E9 que seja digitada uma das existentes. \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 143 \{\par
144 \par
145     {\cf20 /*Dados utilizados*/}\par
146     {\cf18 int} numColunas = kanbanBoard->getNumColumns();\par
147     {\cf18 bool} arquivoExiste;\par
148     std::ifstream arquivo;\par
149     {\cf18 int} escolha, escolha2;\par
150     {\cf18 int} id, prioridade, indexTask;\par
151     {\cf18 int} novoid, novaprioridade, colunadestino = 0;\par
152     std::string novotitulo, novadescricao, novadata;\par
153     std::string titulo, descricao, dataVencimento;\par
154     std::string nameFile, caminhoFile;\par
155     KanbanTask *taskChoice;\par
156     KanbanTask task;\par
157 \par
158 \par
159     {\cf20 // ==== SWITCH PRINCIPAL ====}\par
160     {\cf19 switch} (choice)\par
161     \{\par
162     {\cf20 // ==== CASO: ADICIONAR TAREFAS ====}\par
163     {\cf19 case} 1:\par
164 \par
165         std::cout << {\cf22 "==========="} << ANSI_GREEN << {\cf22 " Preencha os dados da tarefa "} << ANSI_RESET << {\cf22 "===========\\n"};\par
166         std::cout << {\cf22 "ID (inteiro): "};\par
167         {\cf19 do}\par
168         \{\par
169             std::cin >> id;\par
170             {\cf19 if} (kanbanBoard->existeIdDuplicado({\cf18 id}))\par
171             \{\par
172                 std::cout << ANSI_RED << {\cf22 "|!| ID j\'E1 existente. Digite um ID diferente: "} << ANSI_RESET;\par
173             \}\par
174             {\cf19 else}\par
175             \{\par
176                 task.setId({\cf18 id});\par
177             \}\par
178         \} {\cf19 while} (kanbanBoard->existeIdDuplicado({\cf18 id}));\par
179 \par
180         std::cout << {\cf22 "*=================================*"};\par
181         std::cout << {\cf22 "\\nT\'EDtulo: "};\par
182         std::cin.ignore(); {\cf20 // Limpar o buffer do teclado}\par
183         getline(std::cin, titulo);\par
184         task.setTitulo(titulo);\par
185 \par
186         std::cout << {\cf22 "*=================================*"};\par
187         std::cout << {\cf22 "\\nDescri\'E7\'E3o: "};\par
188         getline(std::cin, descricao);\par
189         task.setDescricao(descricao);\par
190 \par
191         std::cout << {\cf22 "*=================================*"};\par
192         std::cout << {\cf22 "\\n("} << ANSI_GREEN << {\cf22 "1: Baixa"} << ANSI_RESET << {\cf22 ","} << ANSI_YELLOW << {\cf22 " 2: M\'E9dia"} << ANSI_RESET << {\cf22 ","} << ANSI_RED << {\cf22 " 3: Alta"} << ANSI_RESET << {\cf22 ")"};\par
193         std::cout << {\cf22 "\\nPrioridade: "};\par
194         {\cf19 while} ({\cf17 true})\par
195         \{\par
196             std::cin >> prioridade;\par
197             {\cf19 if} (prioridade < 1 || prioridade > 3)\par
198             \{\par
199                 std::cout << ANSI_RED << {\cf22 "|!| Digite uma prioridade v\'E1lida: "} << ANSI_RESET;\par
200             \}\par
201             {\cf19 else}\par
202             \{\par
203                 task.setPrioridade(prioridade);\par
204                 {\cf19 break};\par
205             \}\par
206         \}\par
207 \par
208         std::cout << {\cf22 "*=================================*"};\par
209         std::cout << {\cf22 "\\nData de vencimento (dd/mm/aaaa): "};\par
210         std::cin.ignore(); {\cf20 // Limpar o buffer do teclado}\par
211         getline(std::cin, dataVencimento);\par
212         task.setVencimento(dataVencimento);\par
213 \par
214         clearTerminal();\par
215 \par
216         {\cf20 // Imprime todas as colunas}\par
217         {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
218         \{\par
219             kanbanBoard->printColumn(i);\par
220         \}\par
221 \par
222         {\cf20 // Pede o index da coluna para o usu\'E1rio}\par
223         colunadestino = askForValidColumn(*kanbanBoard, 1);\par
224         kanbanBoard->addTaskToColumn(colunadestino, task);\par
225         clearTerminal();\par
226 \par
227         std::cout << {\cf22 "======="} << ANSI_GREEN << {\cf22 " Tarefa adicionada na coluna "} << ANSI_RESET << {\cf22 "======= \\n"};\par
228         kanbanBoard->printColumn(colunadestino);\par
229 \par
230         {\cf19 break};\par
231 \par
232 \par
233 \par
234     {\cf20 // ==== CASO: EDITAR TAREFAS EXISTENTES ====}\par
235     {\cf19 case} 2:\par
236         {\cf19 if} (kanbanBoard->isBoardEmpty())\par
237         \{\par
238             clearTerminal();\par
239             std::cout << ANSI_RED << {\cf22 "|!| Seu quadro est\'E1 vazio, adicione uma tarefa primeiro. |!|"} << ANSI_RESET << std::endl;\par
240             {\cf19 break};\par
241         \}\par
242 \par
243         printMenuTarefa();\par
244         escolha = getUserChoice();\par
245 \par
246         {\cf19 switch} (escolha)\par
247         \{\par
248 \par
249         {\cf20 // ==== CASO: EDITAR INFORMA\'C7\'D5ES DA TAREFA ====}\par
250         {\cf19 case} 1:\par
251 \par
252             clearTerminal();\par
253             {\cf19 while} ({\cf17 true})\par
254             \{\par
255 \par
256                 kanbanBoard->printBoard();\par
257                 std::cout << {\cf22 "\\nDigite o ID da tarefa que deseja editar (ou digite -1 para sair): "};\par
258                 std::cin >> indexTask;\par
259 \par
260                 {\cf19 if} (indexTask == -1)\par
261                 \{\par
262                     clearTerminal();\par
263                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
264                               << ANSI_RESET << std::endl;\par
265                     {\cf19 break}; {\cf20 // Sai do loop}\par
266                 \}\par
267 \par
268                 {\cf20 // Localizando a tarefa solicitada}\par
269                 taskChoice = kanbanBoard->findTask(indexTask);\par
270                 {\cf19 if} (taskChoice == NULL)\par
271                 \{\par
272                     clearTerminal();\par
273                     std::cout << ANSI_RED << {\cf22 "|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|\\n"}\par
274                               << ANSI_RESET << std::endl;\par
275                 \}\par
276                 {\cf19 else}\par
277                 \{\par
278 \par
279                     clearTerminal();\par
280                     taskChoice->printTask();\par
281                     printMenuEditar();\par
282                     escolha2 = getUserChoice();\par
283 \par
284                     clearTerminal();\par
285                     taskChoice->printTask();\par
286                     {\cf19 switch} (escolha2)\par
287                     \{\par
288 \par
289                     {\cf19 case} 1: {\cf20 // ==== CASO: EDITAR ID ====}\par
290                         std::cout << {\cf22 "\\nInforme um novo ID: "};\par
291                         {\cf19 while} ({\cf17 true})\par
292                         \{\par
293                             std::cin >> novoid;\par
294                             {\cf19 if} (kanbanBoard->existeIdDuplicado(novoid))\par
295                             \{\par
296                                 std::cout << ANSI_RED << {\cf22 "|!| ID j\'E1 existente. Digite um ID diferente: "} << ANSI_RESET;\par
297                             \}\par
298                             {\cf19 else}\par
299                             \{\par
300                                 taskChoice->setId(novoid);\par
301                                 {\cf19 break};\par
302                             \}\par
303                         \}\par
304 \par
305                         clearTerminal();\par
306                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
307                         taskChoice->printTask();\par
308                         {\cf19 break};\par
309 \par
310                     {\cf19 case} 2: {\cf20 // ==== CASO: EDITAR T\'CDTULO ====}\par
311                         std::cout << {\cf22 "\\nInforme o novo t\'EDtulo: "};\par
312                         std::cin.ignore();\par
313                         getline(std::cin, novotitulo);\par
314                         taskChoice->setTitulo(novotitulo);\par
315                         clearTerminal();\par
316                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
317                         taskChoice->printTask();\par
318                         {\cf19 break};\par
319 \par
320                     {\cf19 case} 3: {\cf20 // ==== CASO: EDITAR DESCRICAO ====}\par
321                         std::cout << {\cf22 "\\nInforme a nova descri\'E7\'E3o: "};\par
322                         std::cin.ignore();\par
323                         getline(std::cin, novadescricao);\par
324                         taskChoice->setDescricao(novadescricao);\par
325                         clearTerminal();\par
326                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
327                         taskChoice->printTask();\par
328                         {\cf19 break};\par
329 \par
330                     {\cf19 case} 4: {\cf20 // ==== CASO: EDITAR PRIORIDADE ====}\par
331                         std::cout << {\cf22 "\\n("} << ANSI_GREEN << {\cf22 "1: Baixa"} << ANSI_RESET << {\cf22 ","} << ANSI_YELLOW << {\cf22 " 2: M\'E9dia"} << ANSI_RESET << {\cf22 ","} << ANSI_RED << {\cf22 " 3: Alta"} << ANSI_RESET << {\cf22 ")"};\par
332                         std::cout << {\cf22 "\\nInforme a nova prioridade: "};\par
333                         {\cf19 while} ({\cf17 true})\par
334                         \{\par
335                             std::cin >> novaprioridade;\par
336                             {\cf19 if} (novaprioridade < 1 || novaprioridade > 3)\par
337                             \{\par
338                                 std::cout << ANSI_RED << {\cf22 "|!| Digite uma prioridade v\'E1lida: "} << ANSI_RESET;\par
339                             \}\par
340                             {\cf19 else}\par
341                             \{\par
342                                 taskChoice->setPrioridade(novaprioridade);\par
343                                 {\cf19 break};\par
344                             \}\par
345                         \}\par
346                         clearTerminal();\par
347                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
348                         taskChoice->printTask();\par
349                         {\cf19 break};\par
350 \par
351                     {\cf19 case} 5: {\cf20 // ==== CASO: EDITAR DATA DE VENCIMENTO ====}\par
352                         std::cout << {\cf22 "\\nInforme a nova data de vencimento: "};\par
353                         std::cin >> novadata;\par
354                         taskChoice->setVencimento(novadata);\par
355                         clearTerminal();\par
356                         std::cout << {\cf22 "Aqui est\'E1 sua tarefa atualizada:\\n"};\par
357                         taskChoice->printTask();\par
358                         {\cf19 break};\par
359 \par
360                     {\cf19 case} 6: {\cf20 // ==== CASO: VOLTAR ====}\par
361                         clearTerminal();\par
362                         {\cf19 break};\par
363                     {\cf19 default}:\par
364                         std::cout << ANSI_RED << {\cf22 "|!| Informe uma op\'E7\'E3o v\'E1lida. |!|"} << ANSI_RESET << std::endl;\par
365                         {\cf19 break};\par
366                     \}\par
367                 \}\par
368             \}\par
369             {\cf19 break};\par
370 \par
371         {\cf20 // ==== CASO: MOVER TAREFA ====}\par
372         {\cf19 case} 2:\par
373             clearTerminal();\par
374             {\cf19 while} ({\cf17 true})\par
375             \{\par
376                 indexTask = 0;\par
377 \par
378                 {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
379                 \{\par
380                     kanbanBoard->printColumn(i);\par
381                 \}\par
382 \par
383                 std::cout << std::endl\par
384                           << {\cf22 "Digite o ID da tarefa que deseja mover (ou digite -1 para sair): "};\par
385                 std::cin >> indexTask;\par
386 \par
387                 {\cf19 if} (indexTask == -1)\par
388                 \{\par
389                     clearTerminal();\par
390                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
391                               << ANSI_RESET << std::endl;\par
392                     {\cf19 break}; {\cf20 // Sai do loop}\par
393                 \}\par
394 \par
395                 taskChoice = kanbanBoard->findTask(indexTask);\par
396                 {\cf19 if} (taskChoice == NULL)\par
397                 \{\par
398                     clearTerminal();\par
399                     std::cout << ANSI_RED << {\cf22 "|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|\\n"}\par
400                               << ANSI_RESET << std::endl;\par
401                 \}\par
402                 {\cf19 else}\par
403                 \{\par
404 \par
405                     std::cout << ANSI_BLUE << {\cf22 "==> Tarefa escolhida: "} << taskChoice->getTituloId() << ANSI_BLUE << {\cf22 " <=="} << ANSI_RESET << std::endl;\par
406 \par
407                     {\cf20 // Pede a coluna de destino para o usu\'E1rio}\par
408                     colunadestino = askForValidColumn(*kanbanBoard, 2);\par
409 \par
410                     kanbanBoard->moveTask(indexTask, colunadestino);\par
411 \par
412                     clearTerminal();\par
413 \par
414                     std::cout << ANSI_GREEN << {\cf22 "\\nTarefa movida.\\n"}\par
415                               << ANSI_RESET;\par
416                     kanbanBoard->printBoard();\par
417                     std::cout << std::endl;\par
418                 \}\par
419             \}\par
420 \par
421             {\cf19 break};\par
422 \par
423         {\cf20 // ==== CASO: EXCLUIR TAREFA ====}\par
424         {\cf19 case} 3:\par
425 \par
426             clearTerminal();\par
427 \par
428             {\cf19 while} ({\cf17 true})\par
429             \{\par
430                 kanbanBoard->printBoard();\par
431                 std::cout << {\cf22 "\\nDigite o ID da tarefa que deseja excluir (ou digite -1 para sair): "};\par
432                 std::cin >> indexTask;\par
433 \par
434                 {\cf19 if} (indexTask == -1)\par
435                 \{\par
436                     clearTerminal();\par
437                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
438                               << ANSI_RESET << std::endl;\par
439                     {\cf19 break}; {\cf20 // Sai do loop}\par
440                 \}\par
441                 taskChoice = kanbanBoard->findTask(indexTask);\par
442 \par
443                 {\cf19 if} (taskChoice == NULL)\par
444                 \{ {\cf20 // Verifica se o ID existe}\par
445                     clearTerminal();\par
446                     std::cout << ANSI_RED << {\cf22 "\\n|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|"} << ANSI_GREEN << std::endl;\par
447                 \}\par
448                 {\cf19 else}\par
449                 \{\par
450                     kanbanBoard->removeTask(indexTask);\par
451                     clearTerminal();\par
452                     std::cout << ANSI_GREEN << {\cf22 "\\nTarefa exclu\'EDda.\\n"}\par
453                               << ANSI_RESET << std::endl;\par
454                     kanbanBoard->printBoard();\par
455                     {\cf19 break};\par
456                 \}\par
457             \}\par
458 \par
459             {\cf19 break};\par
460 \par
461         {\cf20 //==== CASO: VOLTAR ====}\par
462         {\cf19 case} 4:\par
463             clearTerminal();\par
464             {\cf19 break};\par
465         {\cf19 default}:\par
466             clearTerminal();\par
467             std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida. Por favor, escolha uma op\'E7\'E3o v\'E1lida. |!|"} << ANSI_RESET << std::endl;\par
468             {\cf19 break};\par
469         \}\par
470 \par
471         {\cf19 break};\par
472 \par
473 \par
474 \par
475     {\cf20 // ==== CASO: EXIBIR INFORMA\'C7\'D5ES DA TAREFA ====}\par
476     {\cf19 case} 3:\par
477         {\cf19 if} (kanbanBoard->isBoardEmpty())\par
478         \{\par
479             clearTerminal();\par
480             std::cout << ANSI_RED << {\cf22 "|!| Seu quadro est\'E1 vazio, adicione uma tarefa primeiro. |!|"} << ANSI_RESET << std::endl;\par
481             {\cf19 break};\par
482         \}\par
483         clearTerminal();\par
484 \par
485         {\cf19 while} ({\cf17 true})\par
486         \{\par
487             kanbanBoard->printBoard();\par
488             std::cout << {\cf22 "\\nDigite o ID da tarefa que deseja ver as informa\'E7\'F5es (ou digite -1 para sair): "};\par
489             std::cin >> indexTask;\par
490 \par
491             {\cf19 if} (indexTask == -1)\par
492             \{\par
493                 clearTerminal();\par
494                 std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
495                           << ANSI_RESET << std::endl;\par
496                 {\cf19 break}; {\cf20 // Sai do loop}\par
497             \}\par
498 \par
499             taskChoice = kanbanBoard->findTask(indexTask);\par
500 \par
501             {\cf19 if} (taskChoice == NULL)\par
502             \{ {\cf20 // Verifica se o ID existe}\par
503                 clearTerminal();\par
504                 std::cout << ANSI_RED << {\cf22 "\\n|!| Tarefa n\'E3o encontrada. Digite o ID novamente. |!|"} << ANSI_RESET << std::endl;\par
505             \}\par
506             {\cf19 else}\par
507             \{\par
508                 clearTerminal();\par
509                 taskChoice->printTask();\par
510             \}\par
511         \}\par
512         {\cf19 break};\par
513 \par
514 \par
515 \par
516     {\cf20 // ==== CASO: ORDERNAR TAREFAS POR PRIORIDADE ====}\par
517     {\cf19 case} 4:\par
518         {\cf19 if} (kanbanBoard->isBoardEmpty())\par
519         \{\par
520             clearTerminal();\par
521             std::cout << ANSI_RED << {\cf22 "|!| Seu quadro est\'E1 vazio, adicione uma tarefa primeiro. |!|"} << ANSI_RESET << std::endl;\par
522             {\cf19 break};\par
523         \}\par
524 \par
525         printMenuOrdenar();\par
526         escolha = getUserChoice();\par
527         clearTerminal();\par
528 \par
529         {\cf19 switch} (escolha)\par
530         \{\par
531 \par
532         {\cf19 case} 1: {\cf20 // ==== CASO: CRESCENTE ====}\par
533             {\cf19 while} ({\cf17 true})\par
534             \{\par
535                 {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
536                 \{\par
537                     kanbanBoard->printColumn(i);\par
538                 \}\par
539                 {\cf20 // Pede a coluna para o usu\'E1rio}\par
540                 colunadestino = askForValidColumn(*kanbanBoard, 3);\par
541 \par
542                 {\cf19 if} (colunadestino == -1)\par
543                 \{\par
544                     clearTerminal();\par
545                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
546                               << ANSI_RESET << std::endl;\par
547                     {\cf19 break}; {\cf20 // Sai do loop}\par
548                 \}\par
549 \par
550                 {\cf19 if} (kanbanBoard->columnEmpty(colunadestino))\par
551                 \{\par
552                     clearTerminal();\par
553                     std::cout << ANSI_RED << {\cf22 "|!| A coluna est\'E1 vazia. N\'E3o \'E9 poss\'EDvel realizar a ordena\'E7\'E3o. |!|\\n"}\par
554                               << ANSI_RESET << std::endl;\par
555                     {\cf19 continue}; {\cf20 // Volta para o in\'EDcio do loop}\par
556                 \}\par
557 \par
558                 kanbanBoard->sortColumn(colunadestino, 1);\par
559                 clearTerminal();\par
560                 std::cout << {\cf22 "\'D3timo, a coluna "} << (colunadestino + 1) << {\cf22 " foi ordenada de forma crescente.\\n"};\par
561                 std::cout << std::endl;\par
562             \}\par
563 \par
564             {\cf19 break};\par
565 \par
566         {\cf19 case} 2: {\cf20 // ==== CASO: DECRESCENTE ====}\par
567             {\cf19 while} ({\cf17 true})\par
568             \{\par
569                 {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
570                 \{\par
571                     kanbanBoard->printColumn(i);\par
572                 \}\par
573                 {\cf20 // Pede a coluna para o usu\'E1rio}\par
574                 colunadestino = askForValidColumn(*kanbanBoard, 3);\par
575 \par
576                 {\cf19 if} (colunadestino == -1)\par
577                 \{\par
578                     clearTerminal();\par
579                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
580                               << ANSI_RESET << std::endl;\par
581                     {\cf19 break}; {\cf20 // Sai do loop}\par
582                 \}\par
583 \par
584                 {\cf19 if} (kanbanBoard->columnEmpty(colunadestino))\par
585                 \{\par
586                     clearTerminal();\par
587                     std::cout << ANSI_RED << {\cf22 "|!| A coluna est\'E1 vazia. N\'E3o \'E9 poss\'EDvel realizar a ordena\'E7\'E3o. |!|\\n"}\par
588                               << ANSI_RESET << std::endl;\par
589                     {\cf19 continue}; {\cf20 // Volta para o in\'EDcio do loop}\par
590                 \}\par
591 \par
592                 kanbanBoard->sortColumn(colunadestino, 2);\par
593                 clearTerminal();\par
594                 std::cout << {\cf22 "\'D3timo, a coluna "} << (colunadestino + 1) << {\cf22 " foi ordenada de forma decrescente.\\n"};\par
595                 std::cout << std::endl;\par
596             \}\par
597             {\cf19 break};\par
598 \par
599         {\cf19 case} 3: {\cf20 // ==== CASO: ORDENAR TODAS AS COLUNAS ====}\par
600             clearTerminal();\par
601             kanbanBoard->printBoard();\par
602             {\cf19 while} ({\cf17 true})\par
603             \{\par
604 \par
605                 std::cout << {\cf22 "\\n\\n\\n1. Crescente ("} << ANSI_GREEN << {\cf22 "1: Baixo"} << ANSI_RESET << {\cf22 " - "} << ANSI_RED << {\cf22 "3: Alto)"} << ANSI_RESET;\par
606                 std::cout << {\cf22 "\\n2. Decrescente ("} << ANSI_RED << {\cf22 "3: Alto"} << ANSI_RESET << {\cf22 " - "} << ANSI_GREEN << {\cf22 "1: Baixo)"} << ANSI_RESET;\par
607                 std::cout << {\cf22 "\\nVoc\'EA deseja ordenar de qual forma (ou digite -1 para sair): "};\par
608                 std::cin >> escolha;\par
609 \par
610                 {\cf19 if} (escolha == -1)\par
611                 \{\par
612                     clearTerminal();\par
613                     std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"}\par
614                               << ANSI_RESET << std::endl;\par
615                     {\cf19 break}; {\cf20 // Sai do loop}\par
616                 \}\par
617 \par
618                 {\cf19 switch} (escolha)\par
619                 \{\par
620                 {\cf19 case} 1:\par
621                     {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
622                     \{\par
623                         kanbanBoard->sortColumn(i, 1);\par
624                     \}\par
625                     clearTerminal();\par
626                     std::cout << {\cf22 "\'D3timo, todas as colunas foram ordenadas de forma crescente."};\par
627                     kanbanBoard->printBoard();\par
628                     {\cf19 break};\par
629                 {\cf19 case} 2:\par
630                     {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
631                     \{\par
632                         kanbanBoard->sortColumn(i, 2);\par
633                     \}\par
634                     clearTerminal();\par
635                     std::cout << {\cf22 "\'D3timo, todas as colunas foram ordenadas de forma decrescente."};\par
636                     kanbanBoard->printBoard();\par
637                     {\cf19 break};\par
638                 {\cf19 default}:\par
639                     clearTerminal();\par
640                     std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida |!|"} << ANSI_RESET << std::endl;\par
641                     kanbanBoard->printBoard();\par
642                     {\cf19 break};\par
643                 \}\par
644             \}\par
645             {\cf19 break};\par
646 \par
647         {\cf19 case} 4: {\cf20 // ==== CASO: VOLTAR ====}\par
648             clearTerminal();\par
649             {\cf19 break};\par
650         {\cf19 default}:\par
651             clearTerminal();\par
652             std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida. Por favor, escolha uma op\'E7\'E3o v\'E1lida. |!|"} << ANSI_RESET << std::endl;\par
653             {\cf19 break};\par
654         \}\par
655 \par
656         {\cf19 break};\par
657 \par
658 \par
659 \par
660     {\cf20 // ==== CASO: EXIBIR QUADRO KANBAN ====}\par
661     {\cf19 case} 5:\par
662         {\cf19 while} ({\cf17 true})\par
663         \{\par
664             kanbanBoard->printBoard();\par
665             std::cout << {\cf22 "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nDigite -1 para sair: "};\par
666             std::cin >> indexTask;\par
667 \par
668             {\cf19 if} (indexTask == -1)\par
669             \{\par
670                 {\cf19 break}; {\cf20 // Sai do loop}\par
671             \}\par
672             clearTerminal();\par
673         \}\par
674         clearTerminal();\par
675 \par
676         {\cf19 break};\par
677 \par
678 \par
679 \par
680     {\cf20 // ==== CASO: SALVAR EM UM ARQUIVO ====}\par
681     {\cf19 case} 6:\par
682     \par
683         clearTerminal();\par
684         {\cf19 while} ({\cf17 true})\{\par
685             printMenuSalvar();\par
686             escolha = getUserChoice();\par
687 \par
688             {\cf19 if}(escolha == 4)\{\par
689                 clearTerminal();\par
690                 std::cout << ANSI_RED << {\cf22 "\\nOpera\'E7\'E3o cancelada.\\n"} << ANSI_RESET << std::endl;\par
691                 {\cf19 break}; {\cf20 // Sai do loop}\par
692             \}\par
693 \par
694             {\cf19 switch} (escolha)\{\par
695                 {\cf19 case} 1:\par
696                     clearTerminal();\par
697                     std::cout << ANSI_BLUE << {\cf22 "|!| Todas os arquivos '.bin' s\'E3o salvos na pasta '/data/bin' |!|\\n"}<< ANSI_RESET << std::endl;\par
698 \par
699                     std::cout << {\cf22 "Insira o nome do arquivo para salvar os dados (exemplo.bin): "};\par
700                     std::cin >> nameFile;\par
701 \par
702                     caminhoFile = {\cf22 "data/bin/"} + nameFile;\par
703 \par
704                     arquivoExiste = {\cf17 false};\par
705                     {\cf19 while}(!arquivoExiste)\{\par
706                         {\cf20 // Verifique se o arquivo existe}\par
707             \par
708                         arquivo.open(caminhoFile.c_str());\par
709                         {\cf20 //Arquivo existe}\par
710                         {\cf19 if} (arquivo.is_open()) \{\par
711                             std::cout << ANSI_RED << {\cf22 "\\nIsso apagar\'E1 todo o conte\'FAdo gravado em "} << nameFile << {\cf22 ". Voc\'EA tem certeza? "} << ANSI_RESET << std::endl;\par
712                             std::cout << {\cf22 "1. Sim"} << std::endl;\par
713                             std::cout << {\cf22 "2. N\'E3o"} << std::endl;\par
714 \par
715                             {\cf19 do}\{\par
716                                 std::cin >> escolha;\par
717 \par
718                                 {\cf19 if}(escolha == 2)\{\par
719                                     clearTerminal();\par
720                                     std::cout << ANSI_RED << {\cf22 "|!| Opera\'E7\'E3o cancelada |!|"} << ANSI_RESET << std::endl;\par
721                                     {\cf19 break};\par
722                                 \}{\cf19 else} {\cf19 if} (escolha == 1)\{\par
723                                     clearTerminal();\par
724                                     kanbanBoard->saveToFile(caminhoFile);\par
725                                     {\cf19 break};\par
726                                 \}{\cf19 else}\{\par
727                                     std::cout << ANSI_RED << {\cf22 "|!| Digite uma op\'E7\'E3o v\'E1lida: "}<< ANSI_RESET;\par
728                                 \}\par
729                                 \par
730                             \}{\cf19 while}(escolha != 1 || escolha != 2);\par
731                            \par
732                             arquivoExiste = {\cf17 true};\par
733                             arquivo.close();\par
734                             {\cf19 break};\par
735 \par
736                         \} {\cf19 else} \{\par
737                             clearTerminal();\par
738                             std::cout << ANSI_RED << {\cf22 "|!| O arquivo "} << nameFile << {\cf22 " n\'E3o existe |!|"} << ANSI_RESET << std::endl;\par
739                             {\cf19 break};\par
740                         \}\par
741                     \}\par
742 \par
743                     \par
744                     {\cf19 break};\par
745 \par
746                 {\cf19 case} 2:\par
747                     clearTerminal();\par
748 \par
749                     {\cf19 do}\{\par
750                         std::cout << ANSI_BLUE << {\cf22 "|!| Todas os arquivos '.bin' s\'E3o salvos na pasta '/data/bin' |!|\\n"}<< ANSI_RESET << std::endl;\par
751                         std::cout << {\cf22 "Insira o nome do arquivo para salvar os dados (exemplo.bin): "};\par
752                         std::cin >> nameFile;\par
753 \par
754                         {\cf19 if} (nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".bin"}) \{\par
755                             clearTerminal();\par
756                             std::cout << ANSI_RED << {\cf22 "|!| Nome de arquivo inv\'E1lido! Por favor, inclua a extens\'E3o '.bin' |!|"} << ANSI_RESET << std::endl;\par
757                         \}\par
758 \par
759                     \}{\cf19 while}(nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".bin"});\par
760 \par
761                     caminhoFile = {\cf22 "data/bin/"} + nameFile;\par
762 \par
763                     arquivo.open(caminhoFile.c_str());\par
764                     {\cf19 if}(arquivo.is_open())\{\par
765                         clearTerminal();\par
766                         std::cout << ANSI_RED << {\cf22 "|!| O arquivo "} << nameFile << {\cf22 " j\'E1 existe. Entre na primeira op\'E7\'E3o para salvar em um arquivo existente |!|"} << ANSI_RESET << std::endl;\par
767                         {\cf19 break};\par
768                     \}\par
769 \par
770                     clearTerminal();\par
771                     kanbanBoard->saveToFile(caminhoFile);\par
772 \par
773                     {\cf19 break};\par
774 \par
775                 {\cf19 case} 3:\par
776                     clearTerminal();\par
777                     arquivoExiste = {\cf17 false};\par
778 \par
779                     {\cf19 do}\{\par
780                         std::cout << ANSI_BLUE << {\cf22 "|!| Todas os arquivos '.txt' s\'E3o salvos na pasta '/data/txt' |!|\\n"}<< ANSI_RESET << std::endl;\par
781                         std::cout << {\cf22 "Insira o nome do arquivo que o programa escrever\'E1 (exemplo.txt): "};\par
782                         std::cin >> nameFile;\par
783                          \par
784                         {\cf19 if} (nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".txt"}) \{\par
785                             clearTerminal();\par
786                             std::cout << ANSI_RED << {\cf22 "|!| Nome de arquivo inv\'E1lido! Por favor, inclua a extens\'E3o '.txt' |!|"} << ANSI_RESET << std::endl;\par
787                         \}\par
788 \par
789                     \}{\cf19 while}(nameFile.length() <= 4 || nameFile.substr(nameFile.length() - 4) != {\cf22 ".txt"});\par
790 \par
791 \par
792                     caminhoFile = {\cf22 "data/txt/"} + nameFile;\par
793 \par
794                     clearTerminal();\par
795                     kanbanBoard->saveToFileTxt(caminhoFile);\par
796                     {\cf19 break};\par
797                     \par
798                     {\cf19 break};\par
799 \par
800                 {\cf19 case} 4:\par
801 \par
802                     {\cf19 break}; {\cf20 // Sai do loop}\par
803                 \par
804                 {\cf19 default}:\par
805                     clearTerminal();\par
806                     std::cout << ANSI_RED << {\cf22 "|!| Digite uma op\'E7\'E3o v\'E1lida |!|\\n"}<< ANSI_RESET << std::endl;\par
807                     {\cf19 break};\par
808             \par
809             \}\par
810         \}\par
811 \par
812         {\cf19 break};  \par
813 \par
814 \par
815 \par
816     {\cf20 // ==== CASO: SAIR ====}\par
817     {\cf19 case} 7:\par
818         std::cout << ANSI_RED << {\cf22 "Encerrando o programa..."} << ANSI_RESET << std::endl;\par
819         {\cf17 delete} kanbanBoard; {\cf20 // Libera a mem\'F3ria alocada}\par
820         kanbanBoard = NULL;\par
821         std::exit(0);\par
822         {\cf19 break};\par
823 \par
824 \par
825 \par
826     {\cf20 // ==== CASO: OP\'C7\'C3O INV\'C1LIDA ====}\par
827     {\cf19 default}:\par
828         std::cout << ANSI_RED << {\cf22 "|!| Op\'E7\'E3o inv\'E1lida. Por favor, escolha uma op\'E7\'E3o v\'E1lida. |!|\\n"}\par
829                   << ANSI_RESET << std::endl;\par
830         {\cf19 break};\par
831     \}\par
832 \par
833 \par
834 \par
835     {\cf20 // ==== FIM DO SWITCH PRINCIPAL ====}\par
836     std::cout << {\cf22 "\\n"};\par
837 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a44b96e022f354245afa90fae9d21575e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a44b96e022f354245afa90fae9d21575e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getUserChoice\:functions.cpp}
{\xe \v functions.cpp\:getUserChoice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getUserChoice ()}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que solicita ao usu\'E1rio a escolha de uma opera\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Essa fun\'E7\'E3o solicita e l\'EA o n\'FAmero de uma opera\'E7\'E3o escolhido pelo usu\'E1rio. \'C9 utlizada posteriormente a impress\'E3o de um menu de op\'E7\'F5es. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero da opera\'E7\'E3o que o usu\'E1rio deseja realizar \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133 \{\par
134     {\cf18 int} operacao;\par
135     std::cout << ANSI_GREEN << {\cf22 "Digite o n\'FAmero da opera\'E7\'E3o: "} << ANSI_RESET;\par
136     std::cin >> operacao;\par
137     {\cf19 return} operacao;\par
138 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a86d0de416ac3f84fbea7eafd2325946c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v listarArquivos\:functions.cpp}
{\xe \v functions.cpp\:listarArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ListaDuplamenteEncadeada}<std::string> listarArquivos (const std::string &  {\i pasta})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que retorna uma lista dos arquivos em uma pasta. Utilizado para listar os nomes dos arquivos (.bin) salvos com informa\'E7\'F5es para preenchimento do quadro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pasta} \cell }{Diret\'F3rio que cont\'E9m os arquivos onde o programa far\'E1 a leitura\cell }
{\row }
}
A l\'F3gica proposta \'E9 uma vez aberto o diret\'F3rio passado como par\'E2metro, l\'EA-se o nome de cada arquivo, o atribui a uma string e no final adiciona-se a string ao final da lista duplamente encadeada chamada "arquivos" \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uma lista duplamente encadeada de nomes de arquivos presentes no diret\'F3rio passado como par\'E2metro \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\par
16     ListaDuplamenteEncadeada<std::string> arquivos;\par
17 \par
18     DIR* dir;\par
19     {\cf17 struct }dirent* entrada;\par
20     {\cf19 if} ((dir = opendir(pasta.c_str())) != NULL) \{\par
21         {\cf19 while} ((entrada = readdir(dir)) != NULL) \{\par
22 \par
23             std::string nomeArquivo = entrada->d_name;\par
24 \par
25             {\cf19 if} (nomeArquivo != {\cf22 "."} && nomeArquivo != {\cf22 ".."}) \{\par
26                 arquivos.pushBack(nomeArquivo);\par
27             \}\par
28 \par
29         \}\par
30         closedir(dir);\par
31 \par
32     \} {\cf19 else} \{\par
33         std::cout << {\cf22 "Erro ao abrir a pasta: "} << pasta << std::endl;\par
34     \}\par
35 \par
36     {\cf19 return} arquivos;\par
37 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_aa1fbbb2203c4879b8bf3566732284ac3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_aa1fbbb2203c4879b8bf3566732284ac3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v receiveColumns\:functions.cpp}
{\xe \v functions.cpp\:receiveColumns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void receiveColumns ({\b KanbanBoard} *  {\i kanbanBoard}, int  {\i numColunas})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio os nomes das colunas do quadro Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i kanbanBoard} \cell }{Ponteiro do tipo "KanbanBoard" que ser\'E1 usado para adicionar colunas ao Quadro Kanban. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i numColunas} \cell }{Vari\'E1vel do tipo inteiro contendo o n\'FAmero de colunas escolhido pelo usu\'E1rio, foi obtido previamente pela fun\'E7\'E3o "receiveNumColumns"\cell }
{\row }
}
Fun\'E7\'E3o utilizada no in\'EDcio do programa, logo ap\'F3s a fun\'E7\'E3o "receiveNumColumns", pede-se que o usu\'E1rio nomeie as colunas uma a uma e conforme isso vai acontecendo, uma nova coluna \'E9 adicionada ao objeto "kanbanBoard" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54 \{\par
55     std::cout << {\cf22 "==========="} << ANSI_GREEN << {\cf22 " Informe os nomes das colunas "} << ANSI_RESET << {\cf22 "===========\\n"};\par
56     {\cf19 for} ({\cf18 int} i = 0; i < numColunas; i++)\par
57     \{\par
58         std::string coluna;\par
59         std::cout << (i + 1) << {\cf22 "\'AA coluna: "};\par
60         std::getline(std::cin, coluna);\par
61         stringMaiusculo(coluna);\par
62         kanbanBoard->addColumn(coluna);\par
63     \}\par
64 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a90237cd431706bf89edc6d2df56555d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a90237cd431706bf89edc6d2df56555d9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v receiveNumColumns\:functions.cpp}
{\xe \v functions.cpp\:receiveNumColumns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int receiveNumColumns ()}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Solicita ao usu\'E1rio qual n\'FAmero de colunas do Quadro Kanban que o mesmo deseja. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o utilizada no in\'EDcio do programa para definir o n\'FAmero de colunas que o Quadro Kanban deve ter, escolhido pelo usu\'E1rio. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero de colunas. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42 \{\par
43     {\cf18 int} numColunas;\par
44     std::cout << {\cf22 "==========="} << ANSI_GREEN << {\cf22 " Bem vindo ao gerenciador de tarefas Kanban! "} << ANSI_RESET << {\cf22 "===========\\n"};\par
45     std::cout << {\cf22 "Quantas colunas voc\'EA deseja adicionar no seu gerenciador?\\n"};\par
46     std::cin >> numColunas;\par
47     std::cin.ignore(); {\cf20 // Descarta o caractere de nova linha ap\'F3s a leitura do n\'FAmero}\par
48     {\cf19 return} numColunas;\par
49 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_ae0e51e3688204d8be9b0c6fc6786585f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stringMaiusculo\:functions.cpp}
{\xe \v functions.cpp\:stringMaiusculo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void stringMaiusculo (std::string &  {\i texto})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que converte uma string em letras mai\'FAsculas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i texto} \cell }{String que deseja-se converter\cell }
{\row }
}
Essa fun\'E7\'E3o foi criada para fins est\'E9ticos da exibi\'E7\'E3o do Quadro Kanban, para que tudo fique padronizado em letras mai\'FAsculas e mais agrad\'E1vel de ser exibido. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69 \{\par
70     {\cf19 for} ({\cf18 size_t} i = 0; i < texto.length(); ++i)\par
71     \{\par
72         {\cf19 if} (texto[i] >= {\cf23 'a'} && texto[i] <= {\cf23 'z'})\par
73         \{\par
74             texto[i] = texto[i] - {\cf23 'a'} + {\cf23 'A'};\par
75         \}\par
76     \}\par
77 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "functions_8cpp_a228d1e0c636daad6578c44e22644fbc5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/src/kanbanboard.cpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/src/kanbanboard.cpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/src/kanbanboard.cpp}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe {\b KanbanBoard}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/kanbanboard.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para kanbanboard.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kanbanboard_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe {\b KanbanBoard}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/src/kanbantask.cpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/src/kanbantask.cpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/src/kanbantask.cpp}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe {\b KanbanTask}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/kanbantask.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para kanbantask.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "kanbantask_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe {\b KanbanTask}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/src/main.cpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/src/main.cpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/src/main.cpp}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo principal que inicia e maneja todo programa do gerenciador de tarefas Kanban. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include "../include/kanbanboard.h"}\par
{\f2 #include "../include/functions.h"}\par
{\f2 #include "../include/estruturas_tads.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RESET}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_RED}\~ "\\033[31m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_GREEN}\~ "\\033[32m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_YELLOW}\~ "\\033[33m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANSI_BLUE}\~ "\\033[34m"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o principal que inicia o programa do gerenciador de tarefas Kanban. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo principal que inicia e maneja todo programa do gerenciador de tarefas Kanban. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ANSI_BLUE\:main.cpp}
{\xe \v main.cpp\:ANSI_BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_BLUE\~ "\\033[34m"}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_GREEN\:main.cpp}
{\xe \v main.cpp\:ANSI_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_GREEN\~ "\\033[32m"}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RED\:main.cpp}
{\xe \v main.cpp\:ANSI_RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RED\~ "\\033[31m"}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_RESET\:main.cpp}
{\xe \v main.cpp\:ANSI_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_RESET\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANSI_YELLOW\:main.cpp}
{\xe \v main.cpp\:ANSI_YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANSI_YELLOW\~ "\\033[33m"}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o principal que inicia o programa do gerenciador de tarefas Kanban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 em caso de sucesso. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 \{\par
32 \par
33     {\cf20 // Alocando dinamicamnete um objeto de kanbanBoard na HEAP}\par
34     KanbanBoard *kanbanBoard = {\cf17 new} KanbanBoard();\par
35 \par
36     {\cf18 int} numColunas;\par
37     std::string nameFile, caminhoFile;\par
38     {\cf18 bool} arquivoExiste = {\cf17 false};\par
39     std::string pasta = {\cf22 "data/bin"};\par
40 \par
41     {\cf20 // Primeira parte do programa, antes do menu}\par
42     {\cf19 while}({\cf17 true})\{\par
43 \par
44         std::cout << {\cf22 "==========="} << ANSI_GREEN << {\cf22 " Bem vindo ao gerenciador de tarefas Kanban! "} << ANSI_RESET << {\cf22 "===========\\n"};\par
45         std::cout << {\cf22 "Deseja ler um arquivo?"} << std::endl;\par
46         std::cout << {\cf22 "1. Sim"} << std::endl;\par
47         std::cout << {\cf22 "2. N\'E3o"} << std::endl;\par
48  \par
49         {\cf18 int} escolha;\par
50         std::cin >> escolha;\par
51 \par
52         {\cf20 // Caso: ler arquivo}\par
53         {\cf19 if}(escolha == 1) \{\par
54             \par
55             {\cf20 // Lista dos arquivos da pasta /data}\par
56             ListaDuplamenteEncadeada<std::string> arquivos = listarArquivos(pasta);\par
57 \par
58             clearTerminal();\par
59 \par
60             {\cf20 // Verificar se h\'E1 arquivos na pasta}\par
61             {\cf19 if} (arquivos.isEmpty())\{\par
62                 std::cout << ANSI_RED << {\cf22 "Nenhum arquivo encontrado na pasta '"} << pasta << {\cf22 "'"} << ANSI_RESET << std::endl;\par
63         \par
64             \}{\cf19 else}\{\par
65 \par
66                 {\cf19 while}(!arquivoExiste) \{\par
67 \par
68                     {\cf20 // Exibir os arquivos dispon\'EDveis}\par
69                     std::cout << {\cf22 "Arquivos dispon\'EDveis na pasta '"} << pasta << {\cf22 "':"} << std::endl;\par
70                     {\cf19 for} ({\cf18 int} i = 0; i < arquivos.getSize(); i++) \{\par
71                         std::cout << ANSI_GREEN << i + 1 << {\cf22 ". "} << arquivos.get(i) << ANSI_RESET << std::endl;\par
72                     \}\par
73                     \par
74                     std::cout << {\cf22 "\\nInsira o nome do arquivo com os dados (exemplo.bin): "};\par
75                     std::cin >> nameFile;\par
76                     caminhoFile = {\cf22 "data/bin/"} + nameFile;\par
77 \par
78                     {\cf20 // Verifique se o arquivo existe}\par
79                     std::ifstream arquivo(caminhoFile.c_str());\par
80                     {\cf19 if} (arquivo.is_open()) \{\par
81                         arquivoExiste = {\cf17 true};\par
82                         arquivo.close();\par
83                     \} {\cf19 else} \{\par
84                         clearTerminal();\par
85                         std::cout << ANSI_RED << {\cf22 "|!| Arquivo n\'E3o encontrado |!|"} << ANSI_RESET << std::endl;\par
86                     \}\par
87                 \}\par
88                 \par
89                 clearTerminal();\par
90                 kanbanBoard->loadFromFile(caminhoFile);\par
91                 kanbanBoard->printBoard();\par
92                 \par
93                 {\cf19 break};\par
94 \par
95             \}\par
96 \par
97         {\cf20 // Caso: n\'E3o ler um arquivo}\par
98        \}{\cf19 else} {\cf19 if}(escolha == 2)\{\par
99 \par
100             clearTerminal();\par
101 \par
102             {\cf20 // Recebendo o n\'FAmero de colunas}\par
103             numColunas = receiveNumColumns();\par
104             clearTerminal();\par
105 \par
106             {\cf20 // Recebendo os nomes das colunas}\par
107             receiveColumns(kanbanBoard, numColunas);\par
108             clearTerminal();\par
109             \par
110             {\cf20 // Imprime o quadro com as colunas inseridas}\par
111             std::cout << {\cf22 "\'D3timo! Aqui est\'E1 seu quadro:\\n"};\par
112             kanbanBoard->printBoard();\par
113             std::cout << std::endl << std::endl;\par
114 \par
115             {\cf19 break};\par
116 \par
117         \}{\cf19 else}\{\par
118             clearTerminal();\par
119             std::cout << ANSI_RED << {\cf22 "|!| Informe uma op\'E7\'E3o v\'E1lida |!|"} << ANSI_RESET << std::endl;\par
120         \}\par
121 \par
122     \}\par
123 \par
124     numColunas = kanbanBoard->getNumColumns();\par
125 \par
126     {\cf20 // Loop principal do programa (menu)}\par
127     {\cf19 while} ({\cf17 true}) \{\par
128         printMenu();\par
129         {\cf18 int} choice = getUserChoice();\par
130         clearTerminal();\par
131         executarOperacao(choice, kanbanBoard);\par
132         \par
133     \}\par
134 \par
135     {\cf20 // Libera a mem\'F3ria alocada}\par
136     {\cf17 delete} kanbanBoard;\par
137     kanbanBoard = NULL;\par
138 \par
139     {\cf19 return} 0;\par
140 \}\par
}
Este \'E9 o diagrama das fun\'E7\'F5es utilizadas por essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/src/menus.cpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/src/menus.cpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/src/menus.cpp}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o das fun\'E7\'F5es que imprimem os menus. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/menus.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para menus.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenu} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu principal do sistema Kanban. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuEditar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu para editar informa\'E7\'F5es de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuTarefa} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para editar uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuOrdenar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para ordenar as tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMenuSalvar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para salvar o quadro Kanban. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o das fun\'E7\'F5es que imprimem os menus. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v printMenu\:menus.cpp}
{\xe \v menus.cpp\:printMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenu ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu principal do sistema Kanban. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15   std::cout << std::endl;\par
16   std::cout << {\cf22 "*=========================================*"} << std::endl;\par
17   std::cout << {\cf22 "|         "} << ANSI_BLUE << {\cf22 "MENU DE OPERA\'C7\'D5ES KANBAN"} << ANSI_RESET << {\cf22 "        |"} << std::endl;\par
18   std::cout << {\cf22 "*=========================================*"} << std::endl;\par
19   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:           |"} << std::endl;\par
20   std::cout << {\cf22 "|                                         |"} << std::endl;\par
21   std::cout << {\cf22 "|  1. Adicionar nova tarefa               |"} << std::endl;\par
22   std::cout << {\cf22 "|  2. Editar tarefa existente             |"} << std::endl;\par
23   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa       |"} << std::endl;\par
24   std::cout << {\cf22 "|  4. Ordernar tarefas por prioridade     |"} << std::endl;\par
25   std::cout << {\cf22 "|  5. Exibir o quadro Kanban              |"} << std::endl;\par
26   std::cout << {\cf22 "|  6. Salvar o quadro Kanban              |"} << std::endl;\par
27   std::cout << {\cf22 "|  7. Sair                                |"} << std::endl;\par
28   std::cout << {\cf22 "|                                         |"} << std::endl;\par
29   std::cout << {\cf22 "*=========================================*"} << std::endl;\par
30 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8cpp_ab13e858612c64eeef73aff1d8a03945e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuEditar\:menus.cpp}
{\xe \v menus.cpp\:printMenuEditar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuEditar ()}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o menu para editar informa\'E7\'F5es de uma tarefa. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34 \{\par
35   std::cout << std::endl;\par
36   std::cout << {\cf22 "*===================================*"} << std::endl;\par
37   std::cout << {\cf22 "|           "} << ANSI_BLUE << {\cf22 "EDITAR TAREFA"} << ANSI_RESET << {\cf22 "           |"} << std::endl;\par
38   std::cout << {\cf22 "*===================================*"} << std::endl;\par
39   std::cout << {\cf22 "|  Escolha a altera\'E7\'E3o desejada:    |"} << std::endl;\par
40   std::cout << {\cf22 "|                                   |"} << std::endl;\par
41   std::cout << {\cf22 "|  1. Editar ID                     |"} << std::endl;\par
42   std::cout << {\cf22 "|  2. Editar t\'EDtulo                 |"} << std::endl;\par
43   std::cout << {\cf22 "|  3. Editar descri\'E7\'E3o              |"} << std::endl;\par
44   std::cout << {\cf22 "|  4. Editar prioridade             |"} << std::endl;\par
45   std::cout << {\cf22 "|  5. Editar data de vencimento     |"} << std::endl;\par
46   std::cout << {\cf22 "|  6. Voltar                        |"} << std::endl;\par
47   std::cout << {\cf22 "|                                   |"} << std::endl;\par
48   std::cout << {\cf22 "*===================================*"} << std::endl;\par
49 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8cpp_a7ab907c433f9f51b038d0962c2159877_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuOrdenar\:menus.cpp}
{\xe \v menus.cpp\:printMenuOrdenar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuOrdenar ()}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para ordenar as tarefas. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74 \{\par
75   std::cout << std::endl\par
76             << {\cf22 "\\n"};\par
77   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
78   std::cout << {\cf22 "|        MENU DE OPERA\'C7\'D5ES KANBAN        |        |         "} << ANSI_BLUE << {\cf22 "ORDENAR TAREFAS"} << ANSI_RESET << {\cf22 "         |"} << std::endl;\par
79   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
80   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:          |        |  Escolha a ordena\'E7\'E3o desejada:  |"} << std::endl;\par
81   std::cout << {\cf22 "|                                        |        |                                 |"} << std::endl;\par
82   std::cout << {\cf22 "|  1. Adicionar nova tarefa              |        |  1. Ordena\'E7\'E3o crescente "} << ANSI_GREEN << {\cf22 "(1-3)"} << ANSI_RESET << {\cf22 "   |"} << std::endl;\par
83   std::cout << {\cf22 "|  2. Editar tarefa existente            |        |  2. Ordena\'E7\'E3o decrescente "} << ANSI_RED << {\cf22 "(3-1)"} << ANSI_RESET << {\cf22 " |"} << std::endl;\par
84   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa      |        |  3. Ordenar todas as colunas    |"} << std::endl;\par
85   std::cout << {\cf22 "|  "} << ANSI_BLUE << {\cf22 "4. Ordernar tarefas por prioridade ---------->"} << ANSI_RESET << {\cf22 " |  4. Voltar                      |"} << std::endl;\par
86   std::cout << {\cf22 "|  5. Exibir o quadro Kanban             |        |                                 |"} << std::endl;\par
87   std::cout << {\cf22 "|  6. Salvar o quadro Kanban             |        *=================================*"} << std::endl;\par
88   std::cout << {\cf22 "|  7. Sair                               |"} << std::endl;\par
89   std::cout << {\cf22 "|                                        |                                           "} << std::endl;\par
90   std::cout << {\cf22 "*========================================*                                           "} << std::endl;\par
91 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8cpp_a707396c394b23ba47a461a3423903a9b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuSalvar\:menus.cpp}
{\xe \v menus.cpp\:printMenuSalvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuSalvar ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para salvar o quadro Kanban. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95 \{\par
96   std::cout << std::endl << {\cf22 "\\n"};\par
97   std::cout << {\cf22 "*========================================*"} << std::endl;\par
98   std::cout << {\cf22 "|        MENU DE OPERA\'C7\'D5ES KANBAN        |        *=================================*"} << std::endl;\par
99   std::cout << {\cf22 "*========================================*        |         "} << ANSI_BLUE << {\cf22 "SALVAR O QUADRO"} << ANSI_RESET << {\cf22 "         |"} << std::endl;\par
100   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:          |        *=================================*"} << std::endl;\par
101   std::cout << {\cf22 "|                                        |        |  Escolha como deseja salvar:    |"} << std::endl;\par
102   std::cout << {\cf22 "|  1. Adicionar nova tarefa              |        |                                 |"} << std::endl;\par
103   std::cout << {\cf22 "|  2. Editar tarefa existente            |        |  1. Arquivo 'bin' existente     |"} << std::endl;\par
104   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa      |        |  2. Arquivo 'bin' novo          |"} << std::endl;\par
105   std::cout << {\cf22 "|  4. Ordernar tarefas por prioridade    |        |  3. Arquivo 'txt'               |"} << std::endl;\par
106   std::cout << {\cf22 "|  5. Exibir o quadro Kanban             |        |  4. Voltar                      |"} << std::endl;\par
107   std::cout << {\cf22 "|  "} << ANSI_BLUE << {\cf22 "6. Salvar o quadro Kanban ------------------->"} << ANSI_RESET << {\cf22 " |                                 |"} << std::endl;\par
108   std::cout << {\cf22 "|  7. Sair                               |        *=================================*"} << std::endl;\par
109   std::cout << {\cf22 "|                                        |"} << std::endl;\par
110   std::cout << {\cf22 "*========================================*                                            "} << std::endl;\par
111 \par
112 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8cpp_af925906122711aca7c59ea138c248f0d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMenuTarefa\:menus.cpp}
{\xe \v menus.cpp\:printMenuTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMenuTarefa ()}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o submenu para editar uma tarefa. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53 \{\par
54   std::cout << std::endl\par
55             << {\cf22 "\\n"};\par
56   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
57   std::cout << {\cf22 "|        MENU DE OPERA\'C7\'D5ES KANBAN        |        |          "} << ANSI_BLUE << {\cf22 "EDITAR TAREFA"} << ANSI_RESET << {\cf22 "          |"} << std::endl;\par
58   std::cout << {\cf22 "*========================================*        *=================================*"} << std::endl;\par
59   std::cout << {\cf22 "|  Escolha a opera\'E7\'E3o desejada:          |        |  Escolha a altera\'E7\'E3o desejada:  |"} << std::endl;\par
60   std::cout << {\cf22 "|                                        |        |                                 |"} << std::endl;\par
61   std::cout << {\cf22 "|  1. Adicionar nova tarefa              |        |  1. Editar informa\'E7\'F5es          |"} << std::endl;\par
62   std::cout << {\cf22 "|  "} << ANSI_BLUE << {\cf22 "2. Editar tarefa existente ------------------>"} << ANSI_RESET << {\cf22 " |  2. Mover tarefa                |"} << std::endl;\par
63   std::cout << {\cf22 "|  3. Ver informa\'E7\'F5es de uma tarefa      |        |  3. Excluir tarefa              |"} << std::endl;\par
64   std::cout << {\cf22 "|  4. Ordernar tarefas por prioridade    |        |  4. Voltar                      |"} << std::endl;\par
65   std::cout << {\cf22 "|  5. Exibir o quadro Kanban             |        |                                 |"} << std::endl;\par
66   std::cout << {\cf22 "|  6. Salvar o quadro Kanban             |        *=================================*"} << std::endl;\par
67   std::cout << {\cf22 "|  7. Sair                               |"} << std::endl;\par
68   std::cout << {\cf22 "|                                        |                                           "} << std::endl;\par
69   std::cout << {\cf22 "*========================================*                                           "} << std::endl;\par
70 \}\par
}
Esse \'E9 o diagrama das fun\'E7\'F5es que utilizam essa fun\'E7\'E3o:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "menus_8cpp_a3ebc3966cac22ea92469516f1f93c245_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo /home/isa/\'C1rea de Trabalho/Kanban/src/task.cpp\par \pard\plain 
{\tc\tcl2 \v /home/isa/\'C1rea de Trabalho/Kanban/src/task.cpp}
{\xe \v /home/isa/\'C1rea de Trabalho/Kanban/src/task.cpp}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe abstrata {\b Task}. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../include/task.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Gr\'E1fico de depend\'EAncia de inclus\'F5es para task.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "task_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Este arquivo cont\'E9m a implementa\'E7\'E3o da classe abstrata {\b Task}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Isabela Gomes Mendes \par
Matheus Costa Vidal \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Desde\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
14/06/2023 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
08/07/2023 \par
}}}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}